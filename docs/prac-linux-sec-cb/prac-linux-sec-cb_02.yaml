- en: Chapter 2. Configuring a Secure and Optimized Kernel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。配置安全和优化内核
- en: 'In this chapter, we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Requirements for building and using a kernel
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和使用内核的要求
- en: Creating a USB boot media
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建USB引导介质
- en: Retrieving a kernel source
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检索内核源代码
- en: Configuring and building a kernel
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和构建内核
- en: Installing and booting from a kernel
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和引导内核
- en: Testing and debugging a kernel
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试和调试内核
- en: Configuring a console for debugging using Netconsole
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Netconsole配置控制台进行调试
- en: Debugging a kernel on boot
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导时调试内核
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: For all Linux distributions, including Ubuntu, CentOS, and Fedora, a kernel
    is vital. It is by default installed for most Linux versions when the OS is installed,
    hence we generally don't have to compile the kernel. Even when there is a critical
    update to be installed in the kernel, it can be done using `apt-get` or `yum`
    on the Linux system.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于包括Ubuntu、CentOS和Fedora在内的所有Linux发行版，内核都是至关重要的。在大多数Linux版本安装操作系统时，默认安装内核，因此我们通常不必编译内核。即使需要安装内核的关键更新，也可以在Linux系统上使用`apt-get`或`yum`来完成。
- en: 'However, there might be few situations where we have to compile the kernel
    from a source ourselves. A few of these situations are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，可能会有一些情况需要我们自己从源代码编译内核。以下是其中的一些情况：
- en: Enabling experimental features in the kernel
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用内核中的实验性功能
- en: Enabling new hardware support
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用新的硬件支持
- en: Debugging the kernel
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试内核
- en: Exploring the kernel source code
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索内核源代码
- en: Requirements for building and using a kernel
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和使用内核的要求
- en: Before we can start building the Linux kernel, we must ensure that a working
    boot media exists for the Linux system. This can be used to boot into the Linux
    system if the boot loader is not configured properly. You will learn how to create
    a USB boot media, retrieve a kernel source, configure and build a kernel, and
    perform installation and booting from a kernel.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建Linux内核之前，我们必须确保Linux系统存在工作的引导介质。如果引导加载程序未正确配置，可以用它来引导进入Linux系统。您将学习如何创建USB引导介质，检索内核源代码，配置和构建内核，并执行内核的安装和引导。
- en: Creating a USB boot media
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建USB引导介质
- en: A USB boot media can be created on any USB media device that is formatted as
    ext2, ext3, or VFAT. Also, ensure that enough free space is available on the device,
    varying from 4 GB required for the transfer of a distribution DVD image, 700 MB
    in the case of a distribution CD image, or just 10 MB to transfer a minimal boot
    media image.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在格式为ext2、ext3或VFAT的任何USB存储介质上创建USB引导介质。还要确保设备上有足够的可用空间，从传输发行版DVD映像需要4GB，传输发行版CD映像需要700MB，或者只需10MB来传输最小的引导介质映像。
- en: Getting ready
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Before carrying out the steps, we need to have an image file of the Linux installation
    disk, which we can name `boot.iso`, and a USB storage device, as specified previously.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行这些步骤之前，我们需要有Linux安装光盘的映像文件，我们可以将其命名为`boot.iso`，以及一个USB存储设备，如前所述。
- en: How to do it…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To create the USB boot media, we need to perform these commands as the root:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建USB引导介质，我们需要以root身份执行这些命令：
- en: 'Firstly, we need to install the `syslinux` boot loader by executing the following
    command on the USB storage device:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要通过在USB存储设备上执行以下命令来安装`syslinux`引导加载程序：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, create mount points each for the `boot.iso` file and the USB storage device
    by executing the following command:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过执行以下命令为`boot.iso`文件和USB存储设备创建挂载点：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, mount the `boot.iso` file on the mount point created for it:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将`boot.iso`文件挂载到为其创建的挂载点上：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the preceding command the `-o loop` option is used to create a pseudo device,
    which acts as a block-based device. It treats a file as a block device.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，使用`-o loop`选项创建一个伪设备，它充当基于块的设备。它将文件视为块设备。
- en: 'Next, we will mount the USB storage device on the mount point created for it:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将挂载为其创建的挂载点上的USB存储设备：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once both `boot.iso` and the USB storage device are mounted, we will copy the
    `isolinux` files from the `boot.iso` to the USB storage device:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦`boot.iso`和USB存储设备都被挂载，我们将从`boot.iso`复制`isolinux`文件到USB存储设备：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, run the command to use the `isolinux.cfg` file from `boot.iso` as the
    `syslinux.cfg` file for the USB storage device:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行命令，使用`boot.iso`中的`isolinux.cfg`文件作为USB存储设备的`syslinux.cfg`文件：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once done with the previous command, unmount `boot.iso` and the USB storage
    device:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成上一个命令后，卸载`boot.iso`和USB存储设备：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, reboot the system, and then try to boot with the USB boot media to verify
    that we are able to boot with it.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，重新启动系统，然后尝试使用USB引导介质引导系统，以验证我们能够使用它引导。
- en: How it works…
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When we copy the required files from the `boot.iso` file to the USB storage
    media and use the `isolinux.cfg` file from `boot.iso` in the USB storage media
    as the `syslinux.cfg` file, it converts the USB storage media into a bootable
    media device, which can be used to boot the Linux system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们从`boot.iso`文件复制所需的文件到USB存储介质，并使用USB存储介质中的`isolinux.cfg`文件作为`syslinux.cfg`文件时，它将USB存储介质转换为可引导的介质设备，可用于引导Linux系统。
- en: Retrieving a kernel source
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索内核源代码
- en: Most Linux distributions include kernel sources in them. However, these sources
    may tend to be a bit out of date. Due to this, we may need to get the latest sources
    when building or customizing the kernel.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux发行版都包含内核源代码。但是，这些源代码可能会有点过时。因此，在构建或自定义内核时，我们可能需要获取最新的源代码。
- en: Getting ready
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Most of the Linux kernel developer community uses the **Git** tool to manage
    source code. Even Ubuntu has integrated Git for its own Linux kernel source code,
    hence enabling kernel developers to interact better with the community.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux内核开发社区使用**Git**工具来管理源代码。即使Ubuntu也已经集成了Git用于其自己的Linux内核源代码，因此使内核开发人员能够更好地与社区互动。
- en: 'We can install the `git` package using this command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令安装`git`软件包：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it…
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'The Linux kernel source code can be downloaded from various sources, and we
    will discuss the methods used to download from these sources:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核源代码可以从各种来源下载，我们将讨论从这些来源下载的方法：
- en: We can find the Linux source code in the form of a complete tarball and also
    as an incremental patch on the official web page of Linux kernel at [http://www.kernel.org](http://www.kernel.org).
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在Linux内核的官方网页[http://www.kernel.org](http://www.kernel.org)上找到完整的tarball形式的Linux源代码，也可以找到增量补丁形式的源代码。
- en: It is always recommended that you use the latest version unless you have a specific
    reason to work with an older version.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非有特定原因要使用旧版本，否则建议使用最新版本。
- en: 'Ubuntu''s kernel source can be found under Git. Each release code of the kernel
    is separately maintained on [kernel.ubuntu.com](http://kernel.ubuntu.com) in its
    own Git repository, which is located at:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu的内核源代码可以在Git下找到。内核的每个发行代码都在自己的Git存储库中单独维护，位于[kernel.ubuntu.com](http://kernel.ubuntu.com)上：
- en: '`git://kernel.ubuntu.com/ubuntu/ubuntu-<release>.git` or [http://kernel.ubuntu.com/git-repos/ubuntu/](http://kernel.ubuntu.com/git-repos/ubuntu/)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`git://kernel.ubuntu.com/ubuntu/ubuntu-<release>.git`或[http://kernel.ubuntu.com/git-repos/ubuntu/](http://kernel.ubuntu.com/git-repos/ubuntu/)'
- en: We can clone the repository using Git to get a local copy. The command will
    get modified as per the Ubuntu release we are interested in.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用Git克隆存储库以获得本地副本。命令将根据我们感兴趣的Ubuntu版本进行修改。
- en: To obtain the precise tree execute the command shown in the following screenshot:![How
    to do it…](img/B04234_02_01.jpg)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取精确的树，请执行以下截图中显示的命令：![如何做…](img/B04234_02_01.jpg)
- en: 'The precise tree will get downloaded using the command in the preceding image.
    To download any other tree, the syntax of the command will be: git clone `git://kernel.ubuntu.com/ubuntu/ubuntu-<release>`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用前面图像中的命令将下载精确的树。要下载任何其他树，命令的语法将是：git clone `git://kernel.ubuntu.com/ubuntu/ubuntu-<release>`。
- en: 'The downloaded file would be in either the GNU zip (`.gzip`) format or the
    `.bzip2` format. After downloading the source file, we need to uncompress it.
    If the tarball is in `.bzip2`, use this command for it:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载的文件可能是GNU zip（`.gzip`）格式或`.bzip2`格式。下载源文件后，我们需要解压缩它。如果tarball是`.bzip2`格式，使用以下命令：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If it is in the compressed GNU `.gz` format, use this command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它是以压缩的GNU `.gz`格式，使用以下命令：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Using the different methods that are mentioned in the preceding section, we
    are able to download the source code of the Linux kernel. Using any option depends
    on the user's choice and preference.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面部分提到的不同方法，我们能够下载Linux内核的源代码。使用任何选项取决于用户的选择和偏好。
- en: Configuring and building a kernel
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和构建内核
- en: The need to configure the kernel could arise due to many reasons. We may want
    to resize the kernel to run only the necessary services, or we may have to patch
    it to support new hardware that was not supported earlier by the kernel. This
    could be a daunting task for any system administrator, and in this section, we
    take a look at how we can configure and build the kernel.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多原因可能需要配置内核。我们可能希望调整内核以仅运行必要的服务，或者可能需要对其进行补丁以支持内核先前不支持的新硬件。这对于任何系统管理员来说可能是一项艰巨的任务，在本节中，我们将看看如何配置和构建内核。
- en: Getting ready
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: It is always recommended that you have ample space for kernels in the boot partition
    of any system. We can either choose the whole disk install option or set aside
    a minimum of 3 GB of disk space for the boot partition.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何系统的引导分区中，建议为内核留有充足的空间。我们可以选择整个磁盘安装选项，或者为引导分区留出至少3GB的磁盘空间。
- en: After installing the Linux distribution and configuring development packages
    on the system, enable the root account as well as sudo for our user account.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Linux发行版并在系统上配置开发包后，还需要为我们的用户帐户启用root帐户以及sudo。
- en: 'Now, before we start with the installation of any packages, run the following
    command to update the system:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们开始安装任何软件包之前，运行以下命令来更新系统：
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After this, check whether the `build-essential` package is already installed
    or not. If not, we can install it using this command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，检查`build-essential`软件包是否已安装。如果没有安装，可以使用以下命令进行安装：
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This package is used to build the Linux kernel on a x86_64 system.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这个软件包用于在x86_64系统上构建Linux内核。
- en: 'We also need a few other requirements to compile the kernel:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要一些其他要求来编译内核：
- en: 'The latest version of `gcc` should be installed using this command:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令安装最新版本的`gcc`：
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Install the `ncurses` development package using this command:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令安装`ncurses`开发包：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'A few other packages may also be needed to cross-compile the Linux kernels:'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还可能需要一些其他软件包来交叉编译Linux内核：
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, install `ncurses-dev`, which is required to run make `menuconfig`:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，安装`ncurses-dev`，这是运行make `menuconfig`所需的：
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How to do it…
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Once we are done with the steps in the *Getting Ready* section, we can move
    on to the process of configuring and building the kernel. This process will take
    a lot of time, so be prepared:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 完成*准备工作*部分的步骤后，我们可以继续进行配置和构建内核的过程。这个过程会花费很多时间，所以要有所准备：
- en: Download the Linux kernel by visiting the [http://www.kernel.org](http://www.kernel.org),
    as shown in this screenshot:![How to do it…](img/B04234_02_02.jpg)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问[http://www.kernel.org](http://www.kernel.org)下载Linux内核，如下图所示：![如何做…](img/B04234_02_02.jpg)
- en: 'It can also be downloaded using the following command:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 也可以使用以下命令进行下载：
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![How to do it…](img/B04234_02_03.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](img/B04234_02_03.jpg)'
- en: When the download is completed, move to the directory where the download has
    been saved.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，转到下载保存的目录。
- en: If the downloaded file has been saved in the `Downloads` folder, the following
    command should be executed:![How to do it…](img/B04234_02_04.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果下载的文件已保存在`Downloads`文件夹中，则应执行以下命令：![如何做…](img/B04234_02_04.jpg)
- en: Now, extract the downloaded `.tar` file to the `/usr/src/` location using the
    following command:![How to do it…](img/B04234_02_05.jpg)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用以下命令将下载的`.tar`文件提取到`/usr/src/`位置：![如何操作…](img/B04234_02_05.jpg)
- en: Next, switch to the directory where the extract has been made using this command:![How
    to do it…](img/B04234_02_06.jpg)
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，切换到使用以下命令进行提取的目录：![如何操作…](img/B04234_02_06.jpg)
- en: Now, run the command to configure the Linux kernel so that it can be compiled
    and installed on the system.![How to do it…](img/B04234_02_07.jpg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行命令配置Linux内核，以便可以在系统上进行编译和安装。![如何操作…](img/B04234_02_07.jpg)
- en: You may have to use `sudo` before the preceding command if your account doesn't
    have admin privileges.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的帐户没有管理员权限，执行上述命令之前可能需要使用`sudo`。
- en: Once the preceding command is executed, a pop-up window will appear, containing
    a list of menus. Select the items of the new configuration.![How to do it…](img/B04234_02_08.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行上述命令后，将会弹出一个窗口，其中包含一个菜单列表。选择新配置的项目。![如何操作…](img/B04234_02_08.jpg)
- en: You need to check for the **File systems** menu.![How to do it…](img/B04234_02_09.jpg)
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要检查**文件系统**菜单。![如何操作…](img/B04234_02_09.jpg)
- en: Under it, check whether `ext4` is chosen or not, as shown in following screenshot.
    If it is not selected, you need to select it now.![How to do it…](img/B04234_02_10.jpg)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在其中，检查是否选择了`ext4`，如下截图所示。如果没有选择，现在需要选择它。![如何操作…](img/B04234_02_10.jpg)
- en: Then, save the configuration.![How to do it…](img/B04234_02_11.jpg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，保存配置。![如何操作…](img/B04234_02_11.jpg)
- en: 'Now, compile the Linux kernel. The compile process will take around 40 to 50
    minutes to complete, depending on the system configuration. Run the command, as
    shown here:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编译Linux内核。编译过程将需要大约40到50分钟的时间，具体取决于系统配置。运行如下命令：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![How to do it…](img/B04234_02_12.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/B04234_02_12.jpg)'
- en: How it works…
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: We first download the Linux kernel source, and then, after extracting it at
    a particular location, we configure the kernel for the compilation process.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 首先下载Linux内核源代码，然后在特定位置提取它，为编译过程配置内核。
- en: Installing and booting from a kernel
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和从内核引导
- en: After having spent a lot of time configuring and compiling the kernel, we can
    now start the process of installing the kernel on the local system.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在花费了大量时间配置和编译内核之后，我们现在可以开始在本地系统上安装内核的过程。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before starting the installation of the kernel, make sure to back up all your
    important data on the system. Also, make a copy of `/boot/` on an external storage
    that is formatted in the FAT32 filesystem. This will help with repairing the system
    if the installation process fails for any reason.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始安装内核之前，请确保在系统上备份所有重要数据。此外，将`/boot/`复制到以FAT32文件系统格式化的外部存储设备。如果安装过程因任何原因失败，这将有助于修复系统。
- en: How to do it…
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: After completing the compilation of the kernel, we can then start following
    the commands required to proceed with the installation of the kernel.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在内核编译完成后，我们可以开始遵循安装内核所需的命令。
- en: Install drivers by running the following command:![How to do it…](img/B04234_02_13.jpg)
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令安装驱动程序：![如何操作…](img/B04234_02_13.jpg)
- en: The preceding command will copy the modules to a subdirectory of`/lib/`modules.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将把模块复制到`/lib/`modules的子目录中。
- en: 'Now, run the following command to install the actual kernel:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行以下命令来安装实际的内核：
- en: '[PRE18]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![How to do it…](img/B04234_02_14.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/B04234_02_14.jpg)'
- en: This command executes `/sbin/installkernel`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此命令执行`/sbin/installkernel`。
- en: The new kernel will be installed in `/boot/vmlinuz-{version}`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新内核将安装在`/boot/vmlinuz-{version}`中。
- en: If a symbolic link already exists for `/boot/vmlinuz`, it will get refreshed
    by linking `/boot/vmlinuz` to the new kernel.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`/boot/vmlinuz`已经存在符号链接，它将通过将`/boot/vmlinuz`链接到新内核来刷新。
- en: The previously installed kernel will be available as `/boot/vmlinuz.old`. The
    `config` and `System.map` files will also be available at the same location.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 先前安装的内核将作为`/boot/vmlinuz.old`可用。`config`和`System.map`文件也将在相同位置可用。
- en: 'Next, we will copy the kernel to the `/boot` directory by running this command:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将通过运行此命令将内核复制到`/boot`目录中：
- en: '[PRE19]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![How to do it…](img/B04234_02_15.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/B04234_02_15.jpg)'
- en: Now build the initial RAM disk.![How to do it…](img/B04234_02_16.jpg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在构建初始RAM磁盘。![如何操作…](img/B04234_02_16.jpg)
- en: Next, we need to copy `System.map`, which contains a list of kernel symbols
    and their corresponding address. For this, run the following command, appending
    the kernel's name to the destination file.![How to do it…](img/B04234_02_17.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要复制包含内核符号及其对应地址列表的`System.map`。为此，请运行以下命令，将内核的名称附加到目标文件。![如何操作…](img/B04234_02_17.jpg)
- en: Next, create `symlink /boot/System.map`, which will point to `/boot/System.map-YourKernelName`
    `if /boot` is on a filesystem that supports symlinks.![How to do it…](img/B04234_02_18.jpg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建`symlink /boot/System.map`，它将指向`/boot/System.map-YourKernelName`，如果`/boot`位于支持符号链接的文件系统上。![如何操作…](img/B04234_02_18.jpg)
- en: 'If `/boot` is on a filesystem that does not support symlinks, just run this
    command:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`/boot`位于不支持符号链接的文件系统上，只需运行此命令：
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works…
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: After the configuration and the compilation of the kernel have been completed,
    we start with the process of installing the kernel. The first command will copy
    the modules to a subdirectory of `/lib/`modules.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在内核配置和编译完成后，我们开始安装内核的过程。第一个命令将把模块复制到`/lib/`modules的子目录中。
- en: The second command executes `/sbin/installkernel`. Also, the new kernel will
    be installed in `/boot/vmlinuz-{version}`. While doing this, if a symbolic link
    already exists for `/boot/vmlinuz`, it will get refreshed by linking `/boot/vmlinuz`
    to the new kernel. The previously installed kernel will be available as `/boot/vmlinuz.old`.
    The same is applied to the `config` and `System.map` files.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个命令执行`/sbin/installkernel`。同时，新内核将安装在`/boot/vmlinuz-{version}`中。在执行此操作时，如果`/boot/vmlinuz`已经存在符号链接，它将通过将`/boot/vmlinuz`链接到新内核来刷新。先前安装的内核将作为`/boot/vmlinuz.old`可用。相同的操作也适用于`config`和`System.map`文件。
- en: Once everything is done, we can reboot the system to boot from the new kernel.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都完成后，我们可以重新启动系统以从新内核引导。
- en: Testing and debugging a kernel
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试和调试内核
- en: An important part of any open or closed **Software Development Cycle** (**SDC**)
    is testing and debugging. This also applies to the Linux kernel. The end goal
    of testing and debugging is to ensure that the kernel is working as it did earlier,
    even after installing a new kernel source code.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 任何开放或封闭的**软件开发周期**（**SDC**）的重要部分是测试和调试。这也适用于Linux内核。测试和调试的最终目标是确保内核在安装新的内核源代码后仍然像以前一样工作。
- en: Configuring a console for debugging using Netconsole
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Netconsole配置用于调试的控制台
- en: If we want to capture a kernel panic, it becomes hard once the system has been
    rebooted as there are no logs created for this. To solve this issue, we can use
    Netconsole.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想捕获内核恐慌，一旦系统重新启动，就会变得困难，因为没有为此创建日志。为了解决这个问题，我们可以使用Netconsole。
- en: A kernel module helps by logging kernel print messages over UDP. This becomes
    helpful with debugging problems when logging on to the disk fails.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 内核模块通过UDP记录内核打印消息，当登录到磁盘失败时，这对于调试问题非常有帮助。
- en: Getting ready
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before starting the configuration of Netconsole, we need to know the MAC address
    of the system where the UDP packets will be sent. This system is referred to as
    a receiver, and it may be in the same subnet or a different one. These two cases
    are described here:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始配置Netconsole之前，我们需要知道将发送UDP数据包的系统的MAC地址。这个系统被称为接收者，它可能在同一个子网中，也可能在不同的子网中。这两种情况在这里描述：
- en: The first case is when the receiver is in the same subnet.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一种情况是接收者在同一个子网中。
- en: The IP address of the receiver in this example is `192.168.1.4`. We will send
    UDP packets to this IP address.![Getting ready](img/B04234_02_19.jpg)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本例中，接收者的IP地址是`192.168.1.4`。我们将向此IP地址发送UDP数据包。![准备就绪](img/B04234_02_19.jpg)
- en: Now, let's find the MAC address of the receiver system by executing this command.
    In the following case, the IP address is of the receiver system.![Getting ready](img/B04234_02_20.jpg)
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过执行此命令找到接收系统的MAC地址。在这种情况下，IP地址是接收系统的。![准备就绪](img/B04234_02_20.jpg)
- en: As we can see in the preceding example, `90:00:4e:2f:ac:ef` is the MAC address
    we need.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上面的例子中看到的那样，`90:00:4e:2f:ac:ef`是我们需要的MAC地址。
- en: The second case is when the receiver is not in the same subnet. In this case,
    we need to first find the default gateway. To do so, we run this command:![Getting
    ready](img/B04234_02_21.jpg)
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二种情况是接收者不在同一个子网中。在这种情况下，我们需要首先找到默认网关。为此，我们运行此命令：![准备就绪](img/B04234_02_21.jpg)
- en: Here, the default gateway is `192.168.1.1`.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，默认网关是`192.168.1.1`。
- en: We need to find the MAC address of the default gateway. First, send a packet
    to the default gateway in this way:![Getting ready](img/B04234_02_22.jpg)
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要找到默认网关的MAC地址。首先，以这种方式向默认网关发送一个数据包：![准备就绪](img/B04234_02_22.jpg)
- en: Now, let's find the MAC address.![Getting ready](img/B04234_02_23.jpg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们找到MAC地址。![准备就绪](img/B04234_02_23.jpg)
- en: Here, `c0:3f:0e:10:c6:be` is the MAC address of the default gateway that we
    need.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`c0:3f:0e:10:c6:be`是我们需要的默认网关的MAC地址。
- en: Now that we have the MAC address of the receiver, we can start with the configuration
    process of Netconsole.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了接收者的MAC地址，我们可以开始配置Netconsole的过程。
- en: How to do it…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: To begin with, we need to change the kernel options at boot time. If you are
    using Grub as the bootloader, it will, by default, boot the kernel with the `quiet
    splash` option. However, we don't wish this to happen. So, we need to change the
    kernel options.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在启动时更改内核选项。如果您使用Grub作为引导加载程序，默认情况下会使用`quiet splash`选项引导内核。但是，我们不希望这种情况发生。因此，我们需要更改内核选项。
- en: First, create a backup of Grub at the `/etc/default/grub` location using the
    command shown in the following screenshot:![How to do it…](img/B04234_02_24.jpg)
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用以下屏幕截图中显示的命令在`/etc/default/grub`位置创建Grub的备份：![如何做…](img/B04234_02_24.jpg)
- en: Now, open any editor of your choice to edit `/etc/default/grub`.![How to do
    it…](img/B04234_02_25.jpg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开您选择的任何编辑器以编辑`/etc/default/grub`。![如何做…](img/B04234_02_25.jpg)
- en: Find the line `GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"` and replace it with
    `GRUB_CMDLINE_LINUX_DEFAULT="debug ignore_loglevel"`.![How to do it…](img/B04234_02_26.jpg)
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到`GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"`一行，并将其替换为`GRUB_CMDLINE_LINUX_DEFAULT="debug
    ignore_loglevel"`。![如何做…](img/B04234_02_26.jpg)
- en: Now, run this command to update Grub accordingly:![How to do it…](img/B04234_02_27.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行此命令相应地更新Grub：![如何做…](img/B04234_02_27.jpg)
- en: Once we have implemented the preceding commands, we need to initialize Netconsole
    at boot time. For this, we first need to know the IP address and the interface
    of the sender system. This can be done using the command shown in the following
    screenshot:![How to do it…](img/B04234_02_28.jpg)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实施了上述命令后，我们需要在启动时初始化Netconsole。为此，我们首先需要知道发送系统的IP地址和接口。可以使用以下屏幕截图中显示的命令来完成：![如何做…](img/B04234_02_28.jpg)
- en: We also need the IP address and MAC address of the receiver system, which we
    took a look at in the *Getting Ready* section.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要接收系统的IP地址和MAC地址，这是我们在*准备就绪*部分中看到的。
- en: Now, let's start initializing Netconsole. First, let's get `netconsole` to load
    on boot by adding the module to `/etc/`modules.![How to do it…](img/B04234_02_29.jpg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们开始初始化Netconsole。首先，让我们通过将模块添加到`/etc/`modules中，使`netconsole`在启动时加载。![如何做…](img/B04234_02_29.jpg)
- en: Next, we'll make sure that it has the appropriate options configured as well.
    For this, we will add the module options to the `/etc/modprobe.d/netconsole.conf`
    file and run the command shown in this screenshot:![How to do it…](img/B04234_02_30.jpg)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将确保它也配置了适当的选项。为此，我们将将模块选项添加到`/etc/modprobe.d/netconsole.conf`文件，并运行此屏幕截图中显示的命令：![如何做…](img/B04234_02_30.jpg)
- en: 'In the preceding command, the part that starts with Netconsole has the following
    syntax:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上述命令中，以Netconsole开头的部分具有以下语法：
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We have used `6666` for both `<LOCAL_PORT>` and `<REMOTE_PORT>`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经为`<LOCAL_PORT>`和`<REMOTE_PORT>`都使用了`6666`。
- en: Next, we need to set up the receiver.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要设置接收者。
- en: 'Depending on which version of Linux is being used as the receiver, the command
    used to set up it up may vary:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 根据用作接收方的Linux版本，用于设置它的命令可能会有所不同：
- en: '[PRE22]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Try setting up the receiver without an IP address if the preceding command
    doesn''t work:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果上述命令不起作用，尝试设置接收方而不使用IP地址：
- en: '[PRE23]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If you are using a variant of Linux that has a different version of Netcat,
    the following error message will be printed when you try using the preceding commands:![How
    to do it…](img/B04234_02_31.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您使用的是具有不同版本Netcat的Linux变体，则在尝试使用上述命令时将打印以下错误消息：![如何操作…](img/B04234_02_31.jpg)
- en: If you get the preceding error message, you can try out the command shown in
    this screenshot:![How to do it…](img/B04234_02_32.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您收到上述错误消息，可以尝试执行此截图中显示的命令：![如何操作…](img/B04234_02_32.jpg)
- en: Now, let the preceding command keep running.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让上述命令继续运行。
- en: Next, we need to check whether everything is working properly. Reboot the sender
    system, and then execute the command shown in this screenshot:![How to do it…](img/B04234_02_33.jpg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要检查一切是否正常工作。重新启动发送系统，然后执行此截图中显示的命令：![如何操作…](img/B04234_02_33.jpg)
- en: Now, you need to check the receiver system to take a look at whether the kernel
    messages have been received or not.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要检查接收系统，看看内核消息是否已经接收到。
- en: Once everything is done, press *Ctrl* + *C.* Then, you can check for the messages
    in `~/netconsole.log`.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一切都完成后，按下*Ctrl* + *C*。然后，您可以在`~/netconsole.log`中检查消息。
- en: How it works
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: To capture kernel panic messages, we configure Netconsole, which logs messages
    over the network. To do this, we need one more system on the network that serves
    as a receiver. Firstly, we try to find the MAC address of the receiver system.
    Then, we change the kernel boot options. After updating Grub, we start initializing
    Netconsole on the sender system that we want to debug. Finally, we then we set
    up the receiver system to start receiving kernel messages.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了捕获内核恐慌消息，我们配置Netconsole，通过网络记录消息。为此，我们需要在网络上再有一个作为接收方的系统。首先，我们尝试找到接收系统的MAC地址。然后，我们更改内核引导选项。更新Grub后，在我们要调试的发送系统上启动Netconsole。最后，我们设置接收系统开始接收内核消息。
- en: There's more…
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: 'If you are using a Windows system as a receiver, then you can use **Netcat**
    for Windows, which is available at [http://joncraton.org/files/nc111nt.zip](http://joncraton.org/files/nc111nt.zip).
    Execute the following steps to set up a Windows receiver:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用Windows系统作为接收方，则可以使用Windows的**Netcat**，可在[http://joncraton.org/files/nc111nt.zip](http://joncraton.org/files/nc111nt.zip)下载。执行以下步骤设置Windows接收方：
- en: Download the file from the given link and extract it in a specified location
    (that is, `C:\Users\Tajinder\Downloads\nc>`).
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从给定链接下载文件，并将其解压缩到指定位置（即`C:\Users\Tajinder\Downloads\nc>`）。
- en: Now, open Command Prompt. Then, move to the folder where you have extracted
    Netcat.![There's more…](img/B04234_02_34.jpg)
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开命令提示符。然后，转到您提取Netcat的文件夹。![更多内容…](img/B04234_02_34.jpg)
- en: Next, run the command shown here:![There's more…](img/B04234_02_35.jpg)
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行此命令：![更多内容…](img/B04234_02_35.jpg)
- en: Here, `192.168.1.3` is the same as `<RECEIVER_IP_ADDRESS>`.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里的`192.168.1.3`与`<RECEIVER_IP_ADDRESS>`相同。
- en: Let the preceding command run and continue along with the commands mentioned
    in step 9\. Once this is done, press *Ctrl* + *C*. You will find messages in `netconsole.txt`.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让上述命令继续运行，并继续执行第9步中提到的命令。完成后，按下*Ctrl* + *C*。您将在`netconsole.txt`中找到消息。
- en: Debugging a kernel on boot
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在引导时调试内核
- en: Sometimes, your system might fail to boot changes within the kernel. Hence,
    it is important that when you're creating reports about these failures, all the
    appropriate information about debugging is included. This will be useful for the
    kernel team in order to resolve the issue.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您的系统可能无法在内核中引导更改。因此，在创建有关这些故障的报告时，包括有关调试的所有适当信息非常重要。这将对内核团队解决问题非常有用。
- en: How to do it…
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: If you are trying to capture error messages that appear during boot, then it
    is better to boot the kernel with the `quiet` and `splash` options removed. This
    helps you to see messages, if any, that appear on the screen.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尝试捕获引导过程中出现的错误消息，最好删除`quiet`和`splash`选项来引导内核。这有助于您查看屏幕上出现的消息（如果有）。
- en: 'To edit the boot option parameters, perform the following steps:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑引导选项参数，请执行以下步骤：
- en: Boot the machine.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动机器。
- en: During the BIOS screen, press the *Shift* key and hold it down. You should see
    the Grub menu after the BIOS loads.![How to do it…](img/B04234_02_36.jpg)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在BIOS屏幕上，按下*Shift*键并按住。BIOS加载后，您应该看到Grub菜单。![如何操作…](img/B04234_02_36.jpg)
- en: Navigate to the kernel entry that you want to boot and press *e*.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您想要启动的内核入口，然后按下*e*键。
- en: Then, remove the `quiet` and `splash` keywords (these can be found in the line
    starting with Linux)![How to do it…](img/B04234_02_37.jpg)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，删除`quiet`和`splash`关键字（这些可以在以Linux开头的行中找到）![如何操作…](img/B04234_02_37.jpg)
- en: Press *Ctrl* + *x* to boot.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Ctrl* + *x*进行启动。
- en: You can see error messages, if any, on the screen.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在屏幕上看到错误消息（如果有）。
- en: Depending on the type of error messages you encounter, there are other boot
    options you could try. For example, if you notice ACPI errors, try booting with
    the `acpi=off` boot option.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您遇到的错误消息类型，您可以尝试其他引导选项。例如，如果注意到ACPI错误，请尝试使用`acpi=off`引导选项进行引导。
