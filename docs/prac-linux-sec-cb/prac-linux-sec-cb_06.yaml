- en: Chapter 6. Network Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。网络安全
- en: 'In this chapter, we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Managing the TCP/IP network
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理TCP/IP网络
- en: Using Iptables to configure a firewall
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Iptables配置防火墙
- en: Blocking spoofed addresses
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止欺骗性地址
- en: Blocking incoming traffic
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止传入流量
- en: Configuring and using the TCP Wrapper
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和使用TCP Wrapper
- en: Managing the TCP/IP network
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理TCP/IP网络
- en: When computers are connected to each other to form a network and exchange information
    and resources with each other, managing this network information becomes an important
    task for a system administrator.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机连接在一起形成网络并相互交换信息和资源时，管理这些网络信息对于系统管理员来说是一项重要的任务。
- en: Getting ready
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before we start making any changes to the TCP/IP configuration, make sure to
    create a backup of the Network Manager configuration file, using this command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始对TCP/IP配置进行任何更改之前，请确保使用以下命令创建网络管理器配置文件的备份：
- en: '![Getting ready](img/B04234_06_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/B04234_06_01.jpg)'
- en: Also, create a backup of the `/etc/network/interfaces` file in the same way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，以相同的方式创建`/etc/network/interfaces`文件的备份。
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will take a look at how we can manually configure network
    settings using the command line:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看如何使用命令行手动配置网络设置：
- en: Before starting the manual configuration, first let's check our current IP address,
    which has been assigned to the system automatically by DHCP. We can check the
    details graphically by right-clicking on the **Networking** icon in the top-right
    panel and then selecting **Connection Information**, as seen in the following
    image:![How to do it...](img/B04234_06_02.jpg)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开始手动配置之前，首先让我们检查当前的IP地址，该地址已由DHCP自动分配给系统。我们可以通过右键单击顶部右侧面板中的**Networking**图标，然后选择**Connection
    Information**来以图形方式检查详细信息，如下图所示：![如何操作...](img/B04234_06_02.jpg)
- en: We can see that the current IP address of our system is **192.168.1.101**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们系统的当前IP地址是**192.168.1.101**。
- en: Next, we check this information using the command line. We type the `ifconfig`
    command to do this.![How to do it...](img/B04234_06_03.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们使用命令行检查此信息。我们输入`ifconfig`命令来执行此操作。![如何操作...](img/B04234_06_03.jpg)
- en: If we just want to check the available Ethernet devices on the system, we can
    run this command:![How to do it...](img/B04234_06_04.jpg)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们只想检查系统上可用的以太网设备，我们可以运行此命令：![如何操作...](img/B04234_06_04.jpg)
- en: The preceding command will list a one-line description of all the available
    Ethernet devices on the system.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将列出系统上所有可用以太网设备的一行描述。
- en: If we want a more detailed insight into the network interface, we can use the
    `lshw` tool.![How to do it...](img/B04234_06_05.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要更详细地了解网络接口，我们可以使用`lshw`工具。![如何操作...](img/B04234_06_05.jpg)
- en: This tool also gives detailed information about the other capabilities of the
    hardware.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具还提供有关硬件的其他功能的详细信息。
- en: Now, we will disable Network Manager and then set the details of the IP address
    manually. To disable Network Manager, edit the `/etc/NetworkManager/NetworkManager.conf`
    file.![How to do it...](img/B04234_06_06.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将禁用网络管理器，然后手动设置IP地址的详细信息。要禁用网络管理器，请编辑`/etc/NetworkManager/NetworkManager.conf`文件。![如何操作...](img/B04234_06_06.jpg)
- en: Change the line `managed=false` to `managed=true` and save the file.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将`managed=false`改为`managed=true`并保存文件。
- en: Now, open the `/etc/network/interfaces` file in an editor of your choice. We
    see that, by default, there is no information regarding the `eth0` interface.![How
    to do it...](img/B04234_06_07.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在您选择的编辑器中打开`/etc/network/interfaces`文件。我们看到，默认情况下，关于`eth0`接口没有任何信息。![如何操作...](img/B04234_06_07.jpg)
- en: Edit the file and add the information shown in the following screenshot. Make
    sure to add the IP details according to your network settings.![How to do it...](img/B04234_06_08.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑文件，并添加以下截图中显示的信息。确保根据您的网络设置添加IP详细信息。![如何操作...](img/B04234_06_08.jpg)
- en: When done, save the file, and then reboot the computer to **disengage** Network
    Manager.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，保存文件，然后重新启动计算机以**解除**网络管理器。
- en: If we wish to create a virtual network adapter, we can add the following lines
    to the `/etc/network/interfaces` file, as shown here:![How to do it...](img/B04234_06_09.jpg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望创建虚拟网络适配器，我们可以将以下行添加到`/etc/network/interfaces`文件中，如下所示：![如何操作...](img/B04234_06_09.jpg)
- en: By doing this, we have added two IP addresses to the single Ethernet card. We
    can do this to create multiple instances of the network card.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们已经向单个以太网卡添加了两个IP地址。我们可以这样做来创建网络卡的多个实例。
- en: 'Once the preceding editing is complete, restart the networking service using
    either of the following commands:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成上述编辑后，使用以下任一命令重新启动网络服务：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, we take a look at how to configure the appropriate name server that is
    to be used if the IP address is being configured manually.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何配置适当的名称服务器，如果IP地址是手动配置的话，将要使用它。
- en: 'To make the changes, edit the /`etc/resolv.conf` file in any editor, and add
    these lines:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行更改，请在任何编辑器中编辑`/etc/resolv.conf`文件，并添加以下行：
- en: '![How to do it...](img/B04234_06_10.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_10.jpg)'
- en: By following the preceding steps, we will be able to configure the IP details
    successfully.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循上述步骤，我们将能够成功配置IP详细信息。
- en: How it works...
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The TCP/IP settings on a system can be either managed automatically or manually.
    Depending on the content in the `/etc/NetworkManager/NetworkManager.conf` file,
    the system will understand whether the settings are to be managed automatically
    or manually.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 系统上的TCP/IP设置可以是自动管理或手动管理。根据`/etc/NetworkManager/NetworkManager.conf`文件中的内容，系统将了解设置是自动管理还是手动管理。
- en: For a manual configuration, we edit the `/etc/network/interfaces` file, and
    enter the preceding IP details. Once this is done, we restart the networking service
    or completely reboot the system to make the changes effective.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于手动配置，我们编辑`/etc/network/interfaces`文件，并输入先前的IP详细信息。完成后，我们重新启动网络服务或完全重新启动系统以使更改生效。
- en: Using Iptables to configure a firewall
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Iptables配置防火墙
- en: One of the essential steps required to secure a Linux system is to set up a
    good firewall. Most Linux distributions come preinstalled with different firewall
    tools. **Iptables** is one such default firewall in a Linux distribution. In older
    versions of the Linux kernel, Ipchains was the default firewall.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 保护Linux系统所需的一个基本步骤是设置一个良好的防火墙。大多数Linux发行版都预装了不同的防火墙工具。**Iptables**是Linux发行版中的一个默认防火墙。在较旧版本的Linux内核中，Ipchains是默认防火墙。
- en: Getting Ready
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Since Iptables ships with the Linux distribution, no extra tool needs to be
    installed to use it. However, it is recommended that when you use Iptables; do
    not use the root account. Instead, use a normal account that has super-user access
    to run the commands efficiently.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Iptables随Linux发行版一起提供，因此无需安装额外的工具来使用它。但是，建议使用Iptables时不要使用root帐户。相反，使用具有超级用户访问权限的普通帐户来有效地运行命令。
- en: How to do it...
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We can define different rules using Iptables. These rules are then followed
    by the kernel when checking incoming and outgoing traffic packets:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Iptables定义不同的规则。这些规则在检查传入和传出的流量数据包时由内核跟随：
- en: The first thing we need to do on our system is check which version of Iptables
    is installed using the command shown here:![How to do it...](img/B04234_06_11.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在系统上需要做的第一件事是使用此命令检查安装了哪个版本的Iptables：![如何做...](img/B04234_06_11.jpg)
- en: Now, we will check whether any rule already exists on the system for Iptables
    using the `-L` option.![How to do it...](img/B04234_06_12.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用`-L`选项检查系统中是否已存在Iptables的任何规则。![如何做...](img/B04234_06_12.jpg)
- en: The preceding output can also be seen in a format that tells us about the commands
    that are necessary for each policy. To do this, use the `-S` option, as shown
    here:![How to do it...](img/B04234_06_13.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的输出也可以以一种格式看到，告诉我们每个策略所需的命令。为此，使用`-S`选项，如下所示：![如何做...](img/B04234_06_13.jpg)
- en: Now, we will check which of the modules of Iptables are loaded by default in
    order to know their proper functionality using this command:![How to do it...](img/B04234_06_14.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将检查Iptables默认加载了哪些模块，以了解它们的正确功能，使用此命令：![如何做...](img/B04234_06_14.jpg)
- en: 'Let''s add this first in Iptables, which will make sure that all the online
    connections at present will stay online even after we have made rules to block
    unwanted services:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们首先在Iptables中添加这个，这将确保当前所有在线连接即使在我们制定规则阻止不需要的服务之后也会保持在线：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, the `-A` option appends a rule to the existing table. `INPUT` says that
    this rule will be appended to the Input chain of Iptables. The next few arguments
    of the `-m conntrack --ctstate ESTABLISHED,RELATED` command make sure that the
    rule applies only to connections that are online currently. Then, `-j ACCEPT`
    tells Iptables to accept and allow the packets that match the preceding specified
    criteria.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`-A`选项将规则附加到现有表中。`INPUT`表示此规则将附加到Iptables的输入链。`-m conntrack --ctstate ESTABLISHED,RELATED`命令的下几个参数确保规则仅适用于当前在线的连接。然后，`-j
    ACCEPT`告诉Iptables接受并允许与前面指定的条件匹配的数据包。
- en: Now, if we check the list of rules in Iptables again, we will see that our rule
    has been added.![How to do it...](img/B04234_06_15.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们再次检查Iptables中的规则列表，我们将看到我们的规则已添加。![如何做...](img/B04234_06_15.jpg)
- en: Let's assume that we want to allow our SSH connection through Iptables. For
    this, we add this rule:![How to do it...](img/B04234_06_16.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们想通过Iptables允许SSH连接。为此，我们添加此规则：![如何做...](img/B04234_06_16.jpg)
- en: We have used port `22` as it is the default port for SSH. If you have changed
    the port for SSH in your server, use the appropriate port from the preceding command.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用端口`22`，因为它是SSH的默认端口。如果您已更改服务器上SSH的端口，请使用前面命令中的适当端口。
- en: We also need to make sure that our server continues to function properly by
    letting the services on the server communicate with each other without being blocked
    by the rules of Iptables. To do this, we want to allow all the packets being sent
    to the loopback interface.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要确保我们的服务器继续正常运行，让服务器上的服务在不被Iptables的规则阻止的情况下相互通信。为此，我们希望允许发送到环回接口的所有数据包。
- en: 'We add the following rule to allow the loopback access:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加以下规则以允许环回访问：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, the `-I` option tells `iptables` to insert a new rule rather than append
    it. It takes the chain and position where the new rule needs to be added. In the
    preceding command, we add this rule as the first rule in the `INPUT` chain so
    that it is the first rule that's applied.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，`-I`选项告诉`iptables`插入一个新规则而不是追加它。它需要添加新规则的链和位置。在前面的命令中，我们将此规则添加为`INPUT`链中的第一条规则，以便它是应用的第一条规则。
- en: Now, if we see a list of rules in Iptables using the `-v` option, we notice
    that the rule for the `lo` loopback interface is our first rule.![How to do it...](img/B04234_06_17.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们使用`-v`选项查看Iptables中的规则列表，我们会注意到`lo`环回接口的规则是我们的第一条规则。![如何做...](img/B04234_06_17.jpg)
- en: Assuming that we have added rules for all the packets to be allowed as per our
    requirements, we have to make sure that any other packet that enters the `INPUT`
    chain should be blocked.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们已根据要求添加了允许所有数据包的规则，我们必须确保进入`INPUT`链的任何其他数据包都应该被阻止。
- en: 'To do so, we will modify the `INPUT` chain by running this command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将通过运行此命令修改`INPUT`链：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![How to do it...](img/B04234_06_18.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_18.jpg)'
- en: The code in the preceding screenshot shows that the rule to drop all packets
    has been added to the bottom of the list in the `INPUT` chain. This makes sure
    that whenever a packet comes in, the Iptables rules are checked in the order specified.
    If none of the rules match for the packet, it will be dropped, thus preventing
    a packet from being accepted by default.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 前面屏幕截图中的代码显示，已将丢弃所有数据包的规则添加到`INPUT`链的列表底部。这确保每当数据包进入时，Iptables规则按指定顺序进行检查。如果没有规则与数据包匹配，它将被丢弃，从而默认阻止数据包被接受。
- en: Until now, whatever rules we have added in Iptables are nonpersistent. This
    means that as soon as the system is restarted, all the rules in Iptables will
    be gone.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，我们在Iptables中添加的所有规则都是非持久的。这意味着一旦系统重新启动，Iptables中的所有规则都将消失。
- en: So, to save the rules that we have created and then automatically load them
    when the server reboots, we can use the `iptables-persistent` package.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了保存我们创建的规则，然后在服务器重新启动时自动加载它们，我们可以使用`iptables-persistent`软件包。
- en: 'Install the package using this command:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装软件包：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![How to do it...](img/B04234_06_19.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_19.jpg)'
- en: During the installation process, you will be asked whether you want to save
    the current `iptables` rules and automatically load them. Select **Yes** or **No**
    as per your requirements.![How to do it...](img/B04234_06_20.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，您将被问及是否要保存当前的`iptables`规则并自动加载它们。根据您的要求选择**是**或**否**。![如何操作...](img/B04234_06_20.jpg)
- en: Once the installation is complete, we can start the package by running this
    command:![How to do it...](img/B04234_06_21.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以通过运行此命令启动软件包：![如何操作...](img/B04234_06_21.jpg)
- en: How it works...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In the preceding example, we use Iptables in Linux to configure a firewall on
    our system.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们使用Linux中的Iptables来配置系统上的防火墙。
- en: First, we go through the basic options of the `iptables` command, and then we
    see how to add different rules in `iptables`. We add rules to allow localhost
    access and outgoing active connections. We then add a rule to allow an SSH connection.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们浏览`iptables`命令的基本选项，然后看看如何在`iptables`中添加不同的规则。我们添加规则以允许本地主机访问和传出的活动连接。然后，我们添加一条规则以允许SSH连接。
- en: Next, we add a rule to deny every other incoming packet that does not match
    the preceding rules.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们添加一条规则，拒绝不符合前面规则的每个其他传入数据包。
- en: Lastly, we use the `iptables-persistent` package to save the rules of `iptables`
    even after a system reboot.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`iptables-persistent`软件包来保存`iptables`的规则，即使在系统重新启动后也是如此。
- en: Blocking spoofed addresses
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阻止伪造的地址
- en: IP spoofing is a very common technique used by attackers to send malicious packets
    to a computer server. This is the process of creating IP packets with a forged
    IP address. It is mainly used for attacks such as **Denial of Service** (**DoS**).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: IP欺骗是攻击者用来向计算机服务器发送恶意数据包的一种常见技术。这是创建具有伪造IP地址的IP数据包的过程。它主要用于**拒绝服务**（**DoS**）等攻击。
- en: Getting Ready
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If we wish to block a spoofed IP address, we need to have a list of IP addresses
    or domain names from where these spoofed connections have been trying to connect.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望阻止伪造的IP地址，我们需要有一个IP地址或域名列表，从中这些伪造的连接一直试图连接。
- en: How to do it...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will try to create a basic ruleset of `iptables` through which we will restrict
    all incoming packets, except those that are necessary for our usage:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试通过它来创建`iptables`的基本规则集，通过它我们将限制所有传入数据包，除了对我们的使用必要的数据包：
- en: 'The first step is to create a rule to allow access to the loopback interface
    so that services on the system can communicate properly with each other locally.
    The command to do this is as follows:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建一个规则，允许访问环回接口，以便系统上的服务可以正确地在本地相互通信。执行此命令如下：
- en: '[PRE5]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![How to do it...](img/B04234_06_22.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_22.jpg)'
- en: This is necessary for the system to function properly.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这对系统正常运行是必要的。
- en: 'Next, we create a rule for outbound connections that have been initiated by
    our system:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们为由我们的系统发起的出站连接创建一条规则：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will accept all the outbound traffic, including responses from remote
    servers, which we have try to connect to ourselves (such as any website that we
    visit):'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这将接受所有出站流量，包括我们尝试连接到的远程服务器的响应（例如我们访问的任何网站）：
- en: '![How to do it...](img/B04234_06_23.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_23.jpg)'
- en: 'Let''s create a table to be used in `iptables`. We will call it `blocked_ip`
    but you can choose a name of your choice:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个用于`iptables`的表。我们将其称为`blocked_ip`，但您可以选择自己喜欢的名称：
- en: '[PRE7]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This is the table where we will add the spoofed IP addresses that we want to
    block.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将添加要阻止的伪造IP地址的表。
- en: 'Now, we insert this table into the `INPUT` table of `iptables` using this command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们使用以下命令将此表插入到`iptables`的`INPUT`表中：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that we have used number `2` to make sure that this rule will be second
    from the top in Iptables.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用数字`2`来确保此规则将成为Iptables中从顶部开始的第二个规则。
- en: 'Next, let''s add some bad IPs into the `blocked_ip` table that we have created:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们将一些不良IP添加到我们创建的`blocked_ip`表中：
- en: '[PRE9]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We used the `192.168.1.115` IP address as an example here. You can replace it
    with an IP address that you want to block. If you have more than one IP address
    to block, add them one by one to `iptables`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用`192.168.1.115` IP地址作为示例。您可以用要阻止的IP地址替换它。如果您有多个要阻止的IP地址，请逐个将它们添加到`iptables`中。
- en: 'We can see a list of rules in `iptables` using this command:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令可以查看`iptables`中的规则列表：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the details shown in the following screenshot, at the bottom, you'll notice
    the IP address that we are trying to block. You can specify a single IP address
    or a range as per your needs.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中显示的详细信息中，您将注意到我们正在尝试阻止的IP地址。您可以根据需要指定单个IP地址或范围。
- en: '![How to do it...](img/B04234_06_24.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_24.jpg)'
- en: 'After making rules in Iptables, we can edit the `/etc/host.conf` file as well.
    Open the file in any editor of your choice. I am using `nano`:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Iptables中制定规则后，我们还可以编辑`/etc/host.conf`文件。在您选择的任何编辑器中打开文件。我正在使用`nano`：
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, add or edit the following lines in the file, as shown here:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照以下示例在文件中添加或编辑以下行：
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![How to do it...](img/B04234_06_25.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/B04234_06_25.jpg)'
- en: In the preceding example, the `nospoof on` option performs a comparison of the
    IP address returned by the hostname lookup with the hostname returned by the IP
    address lookup. If the comparison fails, this option generates a spoof warning.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，`nospoof on`选项执行主机名查找返回的IP地址与IP地址查找返回的主机名进行比较。如果比较失败，此选项将生成欺骗警告。
- en: Once done, save and close the file. This will also help to protect the system
    from IP spoofing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，保存并关闭文件。这也有助于保护系统免受IP欺骗。
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To block a spoofed IP address or any other IP address, we again use Iptables
    as it is the default firewall, unless we don't want to use any other tool that's
    available for Linux.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了阻止伪造的IP地址或任何其他IP地址，我们再次使用Iptables，因为它是默认的防火墙，除非我们不想使用Linux可用的任何其他工具。
- en: We create rules once again to allow localhost access to the system and also
    to keep outbound active connections alive. Then, we create a table in Iptables,
    which we use to maintain a list of spoofed IP addresses that we want to block.
    We add this table to the input chain of Iptables. Then, we can add any IP address
    to the table whenever required, and it will automatically get blocked.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次创建规则，以允许本地主机访问系统，并保持出站活动连接保持活动状态。然后，我们在Iptables中创建一个表，用于维护我们想要阻止的伪造IP地址的列表。我们将此表添加到Iptables的输入链中。然后，我们可以在需要时将任何IP地址添加到表中，并且它将自动被阻止。
- en: We also use the `/etc/host.conf` file to protect the system from IP spoofing.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还使用`/etc/host.conf`文件来保护系统免受IP欺骗。
- en: Blocking incoming traffic
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阻止传入流量
- en: One of the most important tasks for a Linux system administrator is to control
    access to network services. At times, it may be better to block all incoming traffic
    on the server and only allow the required services to connect.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Linux系统管理员最重要的任务之一是控制对网络服务的访问。有时，最好在服务器上阻止所有传入流量，只允许所需的服务连接。
- en: Getting Ready
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As we will be using Iptables here as well, no extra package is needed to perform
    these steps. We just need a user account with `super user` access. However, this
    account should preferably not be a `root` account.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在这里也将使用Iptables，因此不需要额外的软件包来执行这些步骤。我们只需要一个具有`超级用户`访问权限的用户帐户。但最好不要使用`root`帐户。
- en: How to do it...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We will configure Iptables to deny everything except the traffic that has been
    initiated from inside our system (such as web browsers that get web traffic or
    a download that has already been initiated to update the package or any other
    software):'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将配置Iptables拒绝除了已从系统内部发起的流量之外的所有流量（例如获取Web流量的Web浏览器或已经启动以更新软件包或其他软件的下载）：
- en: 'As seen in previous examples, the first rule in Iptables will be to allow access
    to localhost data. Run this command in order to allow access:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前面的例子所示，Iptables中的第一个规则将允许访问本地主机数据。运行此命令以允许访问：
- en: '[PRE13]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![How to do it...](img/B04234_06_26.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_26.jpg)'
- en: 'The next rule will be to accept all traffic-related to outbound connections.
    This also includes responses from the remote server to which our system is connected:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个规则将是接受与出站连接相关的所有流量。这也包括远程服务器对我们系统连接的响应：
- en: '[PRE14]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![How to do it...](img/B04234_06_27.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_27.jpg)'
- en: 'Next, we will add a rule to accept **Time Exceeded** ICMP packets. This is
    important for time-restricted connection setups:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加一个规则，以接受**时间超过**的ICMP数据包。这对于限时连接设置很重要：
- en: '[PRE15]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'After this, we will add a rule to accept **Destination Unreachable** ICMP packets
    coming in from remote servers:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们将添加一个规则，以接受来自远程服务器的**目标不可达** ICMP数据包：
- en: '[PRE16]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, add a rule to accept ping requests/responses (Echo ICMP) to keep our
    system''s connections alive to those web services that may require ping:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，添加一个规则以接受ping请求/响应（Echo ICMP），以保持我们系统与可能需要ping的Web服务的连接保持活动状态：
- en: '[PRE17]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the preceding rules have been added, we check the list in Iptables by
    running this command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加了前述规则后，通过运行此命令检查Iptables中的列表：
- en: '[PRE18]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![How to do it...](img/B04234_06_28.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_28.jpg)'
- en: 'We will create a table of `iptables`, which will contain a list of acceptable
    rules and services:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个`iptables`表，其中包含一系列可接受的规则和服务：
- en: '[PRE19]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We then add this table to the INPUT chain of Iptables:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将此表添加到Iptables的INPUT链中：
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let''s add a rule so that access to SSH is allowed on the system. To do so,
    we run this command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加一个规则，以便在系统上允许对SSH的访问。为此，我们运行此命令：
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If we check the list of rules in Iptables, we get the following result:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们检查Iptables中的规则列表，将得到以下结果：
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![How to do it...](img/B04234_06_29.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_29.jpg)'
- en: 'Once we have added rules to accept the traffic that we want, we will now want
    to reject all other traffic for which no rules have been set. To do so, we add
    this rule:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们添加了规则以接受我们想要的流量，我们现在将拒绝所有其他未设置规则的流量。为此，我们添加此规则：
- en: '[PRE23]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: By doing this, whenever anyone tries to connect to the server, a **Host Unreachable**
    ICMP packet will be sent to them, which would then terminate the connection attempt.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，每当有人尝试连接到服务器时，将向他们发送一个**主机不可达**的ICMP数据包，然后将终止连接尝试。
- en: 'After adding all of the preceding rules, Iptables will now look similar to
    what is shown in the following screenshot:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加了所有前述规则之后，Iptables现在看起来与以下截图类似：
- en: '[PRE24]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![How to do it...](img/B04234_06_30.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/B04234_06_30.jpg)'
- en: How it works...
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To block all incoming traffic on the server and allow only outbound connections,
    we again use Iptables as it is the default firewall of Linux.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在服务器上阻止所有传入流量并只允许出站连接，我们再次使用Iptables，因为它是Linux的默认防火墙。
- en: To allow the proper functioning of the server internally, we allow access to
    localhost.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许服务器内部的正常运行，我们允许访问本地主机。
- en: Next, to keep the outbound connections active, we add a rule to accept the **Time
    Exceeded**, **Destination** **Unreachable,** and **Echo ICMP** packets.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了保持出站连接活动，我们添加一个规则以接受**时间超过**、**目标不可达**和**Echo ICMP**数据包。
- en: Once these rules have been added, we can decide whether we wish to allow any
    incoming traffic for particular services, such as SSH, or a certain client address.
    For this, we create a table to add a list of IP addresses for the clients that
    we want to allow. We add a rule to allow access to an SSH service or any other
    service as per our requirements.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了这些规则后，我们可以决定是否希望允许特定服务（如SSH）的任何传入流量，或者特定客户端地址的流量。为此，我们创建一个表格，以添加我们希望允许的客户端的IP地址列表。我们添加了一个规则，以允许根据我们的要求访问SSH服务或任何其他服务。
- en: Lastly, we add a rule to reject all the traffic for which no rule has been added.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们添加了一个规则，拒绝所有未添加规则的流量。
- en: Configuring and using the TCP Wrapper
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和使用TCP Wrapper
- en: Securing a server by restricting access is a critical measure, which should
    never be avoided while setting up a server. Using TCP Wrappers, we can allow only
    those networks to have access to our server's services that we have configured
    and support TCP Wrappers.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 通过限制访问来保护服务器是一项关键措施，在设置服务器时绝不能忽视。使用TCP Wrappers，我们可以只允许我们配置并支持TCP Wrappers的网络访问我们服务器的服务。
- en: Getting Ready
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To demonstrate these steps, we use two systems that are on the same network
    and can ping each other successfully. One system will be used as the server and
    the other as the client.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示这些步骤，我们使用两个位于同一网络上并且可以成功ping通对方的系统。一个系统将用作服务器，另一个将用作客户端。
- en: How to do it?
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做？
- en: Linux provides several tools to control access to network services. TCP Wrappers
    is one among those and adds an additional layer of protection. Here, we will take
    a look at how to configure TCP Wrappers to define access for different hosts.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Linux提供了多种工具来控制对网络服务的访问。TCP Wrappers是其中之一，并添加了额外的保护层。在这里，我们将看看如何配置TCP Wrappers以定义不同主机的访问权限。
- en: 'First, we need to check whether a program supports TCP Wrappers or not. To
    do this, first find the path of an executable program using the `which` command:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要检查程序是否支持TCP Wrappers。为此，首先使用`which`命令找到可执行程序的路径：
- en: '[PRE25]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![How to do it?](img/B04234_06_31.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![如何做？](img/B04234_06_31.jpg)'
- en: Here, we have used the SSH program as an example.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们以SSH程序为例。
- en: 'Next, we use the `ldd` program to check the compatibility of the SSH program
    with TCP Wrappers:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们使用`ldd`程序来检查SSH程序与TCP Wrappers的兼容性：
- en: '[PRE26]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![How to do it?](img/B04234_06_32.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![如何做？](img/B04234_06_32.jpg)'
- en: If the output of the preceding command has the `libwrap.so` content, it means
    that the program is supported by TCP Wrappers.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的命令输出了`libwrap.so`内容，这意味着该程序受TCP Wrappers支持。
- en: 'Now, whenever an SSH program tries to connect to the server using TCP Wrappers,
    two files are checked in this order:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，每当SSH程序尝试使用TCP Wrappers连接到服务器时，将按照以下顺序检查两个文件：
- en: '`/etc/hosts.allow`: If a matching rule is found in this file for the program,
    access will be given'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/hosts.allow`：如果在此文件中找到程序的匹配规则，将允许访问'
- en: '`/etc/hosts.deny`: If a matching rule is found in this file for the program,
    access will be denied'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/hosts.deny`：如果在此文件中找到程序的匹配规则，将拒绝访问'
- en: If no matching rule is found in either of the two files for the specific program,
    access will be given.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在这两个文件中没有找到特定程序的匹配规则，将允许访问。
- en: If we try to connect to the SSH server, before adding any rule, we see that
    it connects successfully.![How to do it?](img/B04234_06_33.jpg)
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们尝试在添加任何规则之前连接到SSH服务器，我们会看到它成功连接。![如何做？](img/B04234_06_33.jpg)
- en: Now let's suppose we want to deny access to the SSH program for a particular
    system that has a given IP address. Then, we will edit the `/etc/hosts.deny` file,
    as shown here:![How to do it?](img/B04234_06_34.jpg)
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在假设我们想要拒绝特定系统具有给定IP地址的SSH程序的访问。然后，我们将编辑`/etc/hosts.deny`文件，如下所示：![如何做？](img/B04234_06_34.jpg)
- en: If we try to connect to the SSH server from this particular system for which
    we have denied access, it shows the following error:![How to do it?](img/B04234_06_35.jpg)
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们尝试从已拒绝访问的特定系统连接到SSH服务器，将显示以下错误：![如何做？](img/B04234_06_35.jpg)
- en: If we want to allow access for all programs and clients, you can either add
    no rules in either of the two files or add the following line to the /`etc/hosts.allow`
    file:![How to do it?](img/B04234_06_36.jpg)
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望允许所有程序和客户端访问，可以在这两个文件中添加零规则，或者将以下行添加到`/etc/hosts.allow`文件中：![如何做？](img/B04234_06_36.jpg)
- en: If we want to allow access for all the services from a particular client that
    has the `192.168.1.106` IP address, then we add the following line to the `/etc/hosts.allow`
    file:![How to do it?](img/B04234_06_37.jpg)
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要允许具有`192.168.1.106` IP地址的特定客户端访问所有服务，然后我们将以下行添加到`/etc/hosts.allow`文件中：![如何做？](img/B04234_06_37.jpg)
- en: If we want to allow all the clients on a particular network to access SSH, except
    for a particular client that has the `192.168.1.100` IP address, we can make the
    following changes to the /`etc/hosts.allow` file:![How to do it?](img/B04234_06_38.jpg)
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要允许特定网络上的所有客户端访问SSH，除了具有`192.168.1.100` IP地址的特定客户端，我们可以对`/etc/hosts.allow`文件进行以下更改：![如何做？](img/B04234_06_38.jpg)
- en: After making the aforementioned changes, when we try to connect through SSH,
    we see the following error:![How to do it?](img/B04234_06_39.jpg)
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行了上述更改后，当我们尝试通过SSH连接时，我们会看到以下错误：![如何做？](img/B04234_06_39.jpg)
- en: We can see that once the IP address has been changed for the client, SSH access
    is now allowed, which means that all the clients on a particular network can access
    SSH, except for the IP address that has been denied.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到一旦更改了客户端的IP地址，现在允许SSH访问，这意味着特定网络上的所有客户端都可以访问SSH，除了被拒绝的IP地址。
- en: The preceding steps block the services rules are defined in the `/etc/hosts.allow`
    file. However, at the server end, we don't get to know which client has tried
    to access the server and when. So, if we want to maintain a log of all connection
    attempts by the client, we can edit the `/etc/hosts.allow` file, as shown here:![How
    to do it?](img/B04234_06_40.jpg)
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的步骤阻止了在`/etc/hosts.allow`文件中定义的服务规则。然而，在服务器端，我们无法知道哪个客户端尝试访问服务器以及何时。因此，如果我们想要记录客户端的所有连接尝试，我们可以编辑`/etc/hosts.allow`文件，如下所示：![如何做？](img/B04234_06_40.jpg)
- en: In the preceding screenshot, the `spawn` keyword defines that whenever a connection
    request is made by the client, it will echo the details that are specified by
    the `%h` option and save it in the `conn.log` log file.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，`spawn`关键字定义了每当客户端发出连接请求时，它将回显由`%h`选项指定的详细信息，并将其保存在`conn.log`日志文件中。
- en: Now, when we read the contents of the `conn.log` file, we see these details:![How
    to do it?](img/B04234_06_41.jpg)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们阅读`conn.log`文件的内容时，我们看到了这些细节：![如何做？](img/B04234_06_41.jpg)
- en: The file contains a log of when the client has tried to connect and from which
    IP address. More details can be captured using different arguments of the `spawn`
    command.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件包含了客户端尝试连接的时间以及来自哪个IP地址。使用`spawn`命令的不同参数可以捕获更多的细节。
- en: How it works...
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We use TCP Wrappers to restrict access to programs that are supported by the
    TCP Wrapper package.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用TCP Wrapper来限制TCP Wrapper软件包支持的程序的访问。
- en: We first check whether the program we want to restrict is supported by TCP Wrapper
    or not using the `ldd` tool.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先使用`ldd`工具检查我们想要限制的程序是否受TCP Wrapper支持。
- en: We then add a rule in the`/etc/hosts.allow` or `/etc/hosts.deny` file as per
    our requirements.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，根据我们的需求，在`/etc/hosts.allow`或`/etc/hosts.deny`文件中添加一条规则。
- en: We add a rule to restrict the program from a particular client or the complete
    network as per our needs.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加一条规则，根据我们的需求限制来自特定客户端或整个网络的程序。
- en: Using the spawn option in TCP Wrapper, we even maintain a log for the connection
    attempts made by the client or the program that we have restricted.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TCP Wrapper中的spawn选项，我们甚至可以为客户端或我们限制的程序所做的连接尝试维护日志。
