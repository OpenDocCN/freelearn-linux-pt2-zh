- en: Chapter 5. Permissions, Access, and Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。权限、访问和安全
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Creating and managing user accounts – useradd
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和管理用户账户 - useradd
- en: Working with passwords
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用密码
- en: Working with file permissions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文件权限
- en: Working with firewalls and router settings
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用防火墙和路由器设置
- en: Working with Secure Linux **–** SELinux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用安全Linux **–** SELinux
- en: Using sudo to secure a system
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用sudo保护系统
- en: The /tmp directory
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /tmp目录
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This chapter will serve as a brief review of Linux file permissions, and how
    access to the machine is handled by the password system. It will also show how
    to work with the security features in the firewall and router, and mentions SELinux
    and sudo.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章将作为对Linux文件权限的简要回顾，并介绍密码系统处理机器访问的方式。它还将展示如何使用防火墙和路由器中的安全功能，并提到SELinux和sudo。
- en: Creating and managing user accounts – useradd
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和管理用户账户 - useradd
- en: In this section we will show you how to add a user account using the `useradd`
    program.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将向您展示如何使用`useradd`程序添加用户账户。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: These commands should not be destructive to your system; however, you will need
    to be the root user.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令不应该对你的系统造成破坏；然而，你需要以root用户身份执行。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In most Linux distributions there are two versions of this command, `useradd`
    and `adduser`. They do not always do the same thing, so consult your `man` page
    (and/or the `file` command) to make sure you are running the proper one. On Fedora,
    `adduser` is a symbolic link to `useradd` and so they are equivalent.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数Linux发行版中，有两个版本的这个命令，`useradd`和`adduser`。它们并不总是做同样的事情，所以请查阅你的`man`页面（和/或`file`命令）以确保你运行的是正确的命令。在Fedora中，`adduser`是`useradd`的符号链接，因此它们是等效的。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Here we will run the `useradd` command to add a user and the `passwd` command
    to set the password. There is more discussion of `passwd` in the following section:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将运行`useradd`命令来添加一个用户，然后使用`passwd`命令来设置密码。在下一节中将更多讨论`passwd`。
- en: 'Firstly, we will be changing `/etc/passwd`, so let’s make a backup copy of
    it. Run the following command: `cp /etc/passwd /tmp/passwd.orig`'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将更改`/etc/passwd`，所以让我们先备份一份。运行以下命令：`cp /etc/passwd /tmp/passwd.orig`
- en: 'Now let’s create a user named `test1`:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们创建一个名为`test1`的用户：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It should have returned silently back to the command line. Now let’s try it:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它应该悄无声息地返回到命令行。现在让我们试一下：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should see the prompt change. Run `whoami,` it should say `test1`. Be sure
    to run this every time you use `su`. Now let’s change the password:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到提示发生了变化。运行`whoami`，它应该会显示`test1`。确保每次使用`su`时都运行这个命令。现在让我们更改密码：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It will say something like **Changing password for user test1**. But then it
    prompts for the current password. What does this mean? What password does it want?
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会说类似于**Changing password for user test1**。但然后它会提示输入当前密码。这是什么意思？它想要什么密码？
- en: 'I don’t really know the answer to this and the **man** pages are useless. They
    always skip this step, which is rather odd. There are ways to do this using the
    crypto function and some other complicated procedures. However, the following
    is my approach:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我真的不知道答案，而且**man**页面也没用。它们总是跳过这一步，这相当奇怪。有一些使用加密功能和其他复杂程序的方法。然而，以下是我的方法：
- en: 'Press *Ctrl + C* to come out of the `passwd` command and run `exit` to return
    to the root account. Now `edit /etc/passwd` and go to the bottom line. `1003`
    below will probably be different on your system, but you should see a line similar
    to this:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Ctrl + C*退出`passwd`命令，并运行`exit`返回到root账户。现在编辑`/etc/passwd`并转到底部一行。`1003`下面的内容在你的系统上可能会有所不同，但你应该看到类似于这样的一行：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Delete the `x`, so that the line now looks like:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`x`，这样这一行看起来就像这样：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save the file and exit. If you get a permission error remember you have to be
    root for this procedure.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并退出。如果出现权限错误，请记住你必须以root用户身份执行此过程。
- en: 'Now run `su` to become the `test1` user again:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行`su`再次成为`test1`用户：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Run `passwd`.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`passwd`。
- en: Hey, cool, it’s not asking for the current password this time. So go ahead and
    create one now as we really don’t want an open account on the system. If you plan
    to keep this account I suggest writing this password down or even better putting
    it into an encrypted file somewhere safe.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 嘿，很酷，这次没有要求输入当前密码。所以现在可以创建一个密码，因为我们真的不想在系统上留下一个开放的账户。如果你打算保留这个账户，我建议你把这个密码写下来，或者更好地把它放到一个加密文件中的安全位置。
- en: 'After entering the same new password twice you should get a message similar
    to:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两次输入相同的新密码后，你应该会收到类似的消息：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We now have a new user. Note that in general this user can perform most of the
    activities on the command line that he has the proper permissions for. However,
    depending on the Linux distribution, the user may not be able to access all resources
    (the sound system, for example).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个新用户。请注意，一般来说，这个用户可以在命令行上执行大部分他有适当权限的活动。然而，根据Linux发行版的不同，用户可能无法访问所有资源（例如声音系统）。
- en: 'Here is a screenshot of useradd –help taken on my Fedora 17 system:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在我的Fedora 17系统上使用`useradd --help`命令得到的截图：
- en: '![How to do it...](img/3008OS_05_00.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3008OS_05_00.jpg)'
- en: There’s more...
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `useradd` command can do a whole lot more than just create new accounts.
    You can change how an existing account works, or when it expires. You can even
    give a user system authority so he has almost has much power as root. Consult
    the man pages or use the `–help` option for more information.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd`命令不仅可以创建新账户，还可以做很多其他事情。你可以更改现有账户的工作方式，或者设置过期时间。你甚至可以给用户系统权限，使他几乎拥有root用户一样的权限。请参阅man页面或使用`--help`选项获取更多信息。'
- en: Working with passwords
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用密码
- en: I mentioned the `passwd` command in the previous recipe. It is used to update
    a user’s authentication tokens. You will need to be the root user for this example.
    We will use the `test1` user created in the above section.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我在前面的步骤中提到了`passwd`命令。它用于更新用户的身份验证令牌。你需要以root用户身份执行此示例。我们将使用上一节中创建的`test1`用户。
- en: How to do it...
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let’s work with the `passwd` command a little:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微使用一下`passwd`命令：
- en: 'From a user account, login to `test1` to make sure that still works as expected:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户帐户登录到`test1`，以确保仍然按预期工作：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Enter the password when prompted. This should work without errors.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示时输入密码。这应该可以正常工作，没有错误。
- en: 'Now let’s lock this account. Exit back to root and run:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们锁定此帐户。退出到根目录并运行：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: From a user account run `su - test1` and enter the password again. It should
    fail.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户帐户运行`su - test1`并再次输入密码。它应该失败。
- en: Go back to root and unlock the account using the command `passwd -u test1`.
    Log in again to make sure it works.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到根目录，并使用命令`passwd -u test1`解锁帐户。再次登录以确保它有效。
- en: 'Now let’s expire the account. This will force the user to create a new password.
    As root run the following command:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们使帐户过期。这将强制用户创建新密码。作为root运行以下命令：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now as a guest user, log into `test1` using the command `su - test1`. Enter
    your password.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在作为访客用户，使用命令`su - test1`登录`test1`。输入密码。
- en: You will be told to create a new password. Be careful here as you have to enter
    the old (current) password again, and then the new one two times. Yes, it does
    seem odd that we have to type the old password again, since we just did that.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被要求创建新密码。在这里要小心，因为您必须再次输入旧（当前）密码，然后两次输入新密码。是的，似乎很奇怪，我们必须再次输入旧密码，因为我们刚刚这样做了。
- en: Note that you can delete a password for a user account by running `passwd -d
    test1`. This is easier than editing the `/etc/passwd` file directly as we did
    in the above section.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，您可以通过运行`passwd -d test1`删除用户帐户的密码。这比直接编辑`/etc/passwd`文件更容易，就像我们在上一节中所做的那样。
- en: There’s more...
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You can set a lot of other things on a user account. These include the amount
    of time for the account to remain active, and when to start warning the user to
    change their password. See the man pages for more info.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在用户帐户上设置很多其他内容。这些包括帐户保持活动的时间以及何时开始警告用户更改其密码。有关更多信息，请参阅man页面。
- en: Note
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**A word about passwords**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于密码的一些话**'
- en: In the old days, we would pick a relatively simple password and keep it forever.
    We didn’t need to change it all the time, and could use it for everything, so
    it was not necessary to write it down. Unfortunately, that has now changed. Passwords
    usually need to be a combination of uppercase letters, numbers, and maybe even
    special characters. They have to be a lot longer in length as well. You can’t
    always use them for everything because the password rules on one system may differ
    from the rules on another. For these reasons I suggest using a different password
    for every account when reasonable, and record it somewhere safe. You will most
    likely have to change this password at regular intervals.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，我们会选择一个相对简单的密码并永远保留它。我们不需要一直更改它，并且可以将其用于一切，因此不需要将其写下来。不幸的是，现在情况已经改变。密码通常需要是大写字母，数字，甚至特殊字符的组合。它们的长度也必须更长。您不能总是将它们用于一切，因为一个系统上的密码规则可能与另一个系统上的规则不同。出于这些原因，我建议在合理的情况下为每个帐户使用不同的密码，并将其记录在安全的地方。您很可能需要定期更改此密码。
- en: Working with file permissions
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理文件权限
- en: Since Linux was designed to be a multiuser operating system, every file has
    file permissions and ownership associated with it. This is to prevent one user
    from overwriting the files of another (either intentionally or unintentionally).
    The root user can (usually) access every file in the system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Linux被设计为多用户操作系统，每个文件都有与之关联的文件权限和所有权。这是为了防止一个用户覆盖另一个用户的文件（无论是有意还是无意）。根用户可以（通常）访问系统中的每个文件。
- en: Getting ready
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Here is a quick review of basic file system permissions. For this example, it
    is assumed `umask` is set to `0022`. Run `umask` to make sure.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基本文件系统权限的快速回顾。在本例中，假定`umask`设置为`0022`。运行`umask`以确保。
- en: 'Observe the following `ls -la` listing of my backup script b:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 观察我的备份脚本b的以下`ls -la`列表：
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Starting from the left, the first position indicates what kind of file this
    is. A `-`, as shown, means this is a regular file. A `d` there would mean a directory,
    and an `l` would indicate it’s a link. The next three sets of three letters are
    the file permissions and can be referred to in either symbolic or numeric mode.
    We are going to use numeric (octal) mode.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 从左边开始，第一个位置表示这是什么类型的文件。如所示的`-`表示这是一个常规文件。`d`表示目录，`l`表示链接。接下来的三组三个字母是文件权限，可以用符号模式或数字模式引用。我们将使用数字（八进制）模式。
- en: The first three sets, `rwx`, are the settings for the owner (`guest1`) of this
    file. The next three, `r-x`, are the settings for the group (`root`). The third
    set is for all others. `r` means the file is readable, `w` means it’s writeable,
    and `x` means it’s executable.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 前三组`rwx`是此文件所有者（`guest1`）的设置。接下来的三个`r-x`是组（`root`）的设置。第三组是所有其他人的设置。`r`表示文件可读，`w`表示可写，`x`表示可执行。
- en: The `chmod` command accepts one to four octal digits. If a digit is missing
    it is assumed to be a leading zero. The first digit sets the user ID, group ID,
    or the sticky bit. The second digit selects the permissions for this user, and
    the third selects the permissions for the others.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`chmod`命令接受一个到四个八进制数字。如果缺少一个数字，则假定为前导零。第一个数字设置用户ID，组ID或粘性位。第二个数字选择此用户的权限，第三个数字选择其他用户的权限。'
- en: So, let’s now change some permissions on a temporary file and see what happens.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更改临时文件的一些权限，看看会发生什么。
- en: How to do it...
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Let’s work with some file permissions:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们处理一些文件权限：
- en: 'Let’s change to the `/tmp` directory by using the command:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用以下命令切换到`/tmp`目录：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If the file `f1` exists remove it using the following command:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果文件`f1`存在，请使用以下命令删除它：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Using a guest account (in my case `jklewis`) create a temporary file by using
    the command:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用访客帐户（在我的情况下是`jklewis`）使用以下命令创建临时文件：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now run the following command:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行以下命令：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'It should show something like the following output:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它应该显示类似以下输出：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Those are the default permissions based on the `umask` command. This indicates
    that owner and group have read and write privileges, and others have only read.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些是基于`umask`命令的默认权限。这表明所有者和组具有读取和写入权限，其他用户只有读取权限。
- en: 'So how do we change these? By using the `chmod` command. Suppose this is a
    script and we wanted to make it executable. Run the following command:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那么我们如何更改这些？通过使用`chmod`命令。假设这是一个脚本，我们想要使其可执行。运行以下命令：
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now run `ls -la f1`; it should now look like the following output:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行`ls -la f1`；它现在应该看起来像以下输出：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Those `x`s show that every user can run the file. Let’s do one more. Run `chmod
    000 f1`and then `ls -la f1`, it will show the following output:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些`x`表示每个用户都可以运行该文件。我们再做一个。运行`chmod 000 f1`，然后运行`ls -la f1`，它将显示以下输出：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Wow! No one will be able to do anything with this file now, right? Well, no,
    the owner of the file can still change the permissions. Speaking of ownership,
    the `chown` command is used to change that field. It is normally run as the root
    user.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！现在没有人能够对这个文件做任何事情了，对吧？嗯，不，文件的所有者仍然可以更改权限。说到所有权，`chown`命令用于更改该字段。通常以root用户身份运行。
- en: There’s more...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: I did not mention the `setuid`, `setgid`, or `sticky` bits. Consult the `chmod`
    man page for information on these settings. The restricted deletion bit is mentioned
    in *The /tmp directory* section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有提到`setuid`、`setgid`或`sticky`位。请参考`chmod`手册页了解这些设置的信息。受限删除位在* /tmp目录*部分中提到。
- en: Working with the firewalls and router settings
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用防火墙和路由器设置
- en: A firewall is used to prevent unauthorized network access to a machine(s) while
    still allowing normal (or legal) traffic to pass through. The `iptables` command
    is used to set up, configure, and view the tables of the IPv4 rules in the kernel.
    It is somewhat complicated and so this will serve as just a simple overview.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙用于防止未经授权的网络访问到一台或多台机器，同时仍然允许正常（或合法）的流量通过。`iptables`命令用于设置、配置和查看内核中IPv4规则的表。它有点复杂，因此这只是一个简单的概述。
- en: '`iptables` uses one or more tables. Each table has a number of pre-made chains
    and can also contain user-created chains. A chain is a list of rules, and a rule
    specifies what to do with a packet that matches. This “match” is called a **target**.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`iptables`使用一个或多个表。每个表都有一些预定义的链，并且还可以包含用户创建的链。链是规则的列表，规则指定匹配的数据包应该执行什么操作。这种“匹配”称为**目标**。'
- en: 'When a packet does not match, the next rule in the chain is looked at. If it
    does match, one of the following can be specified for the packet:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据包不匹配时，将查看链中的下一个规则。如果匹配，可以为数据包指定以下内容之一：
- en: '`ACCEPT`: It allows the packet to pass on'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ACCEPT`：它允许数据包通过'
- en: '`DROP`: It rejects the packet'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DROP`：它拒绝了数据包'
- en: '`QUEUE`: It passes the packet on to the user space'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QUEUE`：它将数据包传递到用户空间'
- en: '`RETURN`: It stops the running of this chain and continues at the next rule
    in the calling chain'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RETURN`：它停止此链的运行，并在调用链中的下一个规则处继续'
- en: How to do it...
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Here are a few `iptable` commands. Do not run these commands on your system;
    this is an example only:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些`iptable`命令。不要在您的系统上运行这些命令；这只是一个示例：
- en: 'To delete all existing rules, use the following command:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要删除所有现有规则，请使用以下命令：
- en: '[PRE19]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To block a specific IP address, use the following command:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要阻止特定的IP地址，请使用以下命令：
- en: '[PRE20]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To allow loopback access, use the following command:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要允许环回访问，请使用以下命令：
- en: '[PRE21]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Now let’s talk about routers. Most routers have a firewall built-in that can
    be managed by a web browser. While it does not replace `iptables`, it is usually
    easier to configure and can work across your entire network.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈路由器。大多数路由器都内置了防火墙，可以通过Web浏览器进行管理。虽然它不能取代`iptables`，但通常更容易配置，并且可以在整个网络中工作。
- en: The web page for a typical home router usually has a `192.168.1.1` address.
    Try it in your browser now.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 典型家用路由器的网页通常具有`192.168.1.1`地址。现在在浏览器中尝试一下。
- en: 'Here is a screenshot of my router on the **Security** page:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在**安全**页面上的路由器的屏幕截图：
- en: '![How to do it...](img/3008OS_05_01.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3008OS_05_01.jpg)'
- en: You may have to enter an ID and password. Consult your router documentation
    for the defaults if you haven’t already changed them. Go to the **Security** (or
    equivalent) tab to access those features.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要输入ID和密码。如果您尚未更改它们，请参考路由器文档中的默认值。转到**安全**（或等效）选项卡以访问这些功能。
- en: There’s more...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There is a whole lot more to `iptables`, enough to fill an entire book. For
    more information refer to the man pages, or a book on firewalls. There are also
    quite a few good websites on the topic.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`iptables`还有很多内容，足以填满一本整书。有关更多信息，请参考手册页或防火墙书籍。还有一些关于这个主题的很好的网站。'
- en: Working with Secure Linux – SELinux
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用安全Linux - SELinux
- en: This section will serve as an overview of **Security Enhanced Linux** (**SELinux**).
    In the *Working with file permissions* section, we discussed how standard Linux
    provides protection for the system. This method is called **Discretionary Access
    Control** (**DAC**), and has some limitations. For example, a typical user could
    open his files up, either accidentally or on purpose, for any other user to read
    or write. This could allow unauthorized access to sensitive information. To provide
    more security, SELinux uses **MAC** (**Mandatory Access Control**).MAC uses a
    security policy that covers all processes and files in the system. All files in
    SELinux have labels that contain security-relevant information.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将作为**安全增强型Linux**（**SELinux**）的概述。在*使用文件权限*部分，我们讨论了标准Linux如何为系统提供保护。这种方法称为**自主访问控制**（**DAC**），并且有一些限制。例如，典型用户可以无意或有意地打开他的文件，以便其他用户读取或写入。这可能允许未经授权的访问敏感信息。为了提供更多安全性，SELinux使用**MAC**（**强制访问控制**）。MAC使用覆盖系统中所有进程和文件的安全策略。SELinux中的所有文件都具有包含安全相关信息的标签。
- en: 'For example, the following is a normal listing of a file under DAC:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是DAC下文件的正常列表：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Same file, but with the Z (security context) option to `ls`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的文件，但使用`ls`的Z（安全上下文）选项：
- en: '[PRE23]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '`unconfined_u` is the user, `object_r` is the role, `default_t` is the type,
    and `s0` is the level. This info is used to make access control decisions. Note
    that the normal DAC rules are checked first, if they do not allow the action then
    the SELinux rules are not used.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`unconfined_u`是用户，`object_r`是角色，`default_t`是类型，`s0`是级别。这些信息用于进行访问控制决策。请注意，首先检查正常的DAC规则，如果它们不允许操作，则不使用SELinux规则。'
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We are only going to run some commands as root and view some of the settings.
    We will not be making any changes to the configuration. This example will assume
    you are already running SELinux in Enforcing mode. To determine if this is so
    run the `sestatus` command. The output should be similar to the following screenshot
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会以root身份运行一些命令并查看一些设置。我们不会对配置进行任何更改。本示例将假定您已经在Enforcing模式下运行SELinux。要确定是否如此，请运行`sestatus`命令。输出应类似于以下屏幕截图
- en: '![Getting ready](img/3008OS_05_02.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/3008OS_05_02.jpg)'
- en: How to do it...
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Okay, so let’s run some SELinux commands.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们运行一些SELinux命令。
- en: Run `getenforce`; it should report enforcing.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`getenforce`；它应该报告enforcing。
- en: 'Now let’s view the list of mappings:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们查看映射列表：
- en: '[PRE24]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To view the SELinux contexts for processes run the following command:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看进程的SELinux上下文，请运行以下命令：
- en: '[PRE25]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To view the context for user run the following command:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看用户的上下文，请运行以下命令：
- en: '[PRE26]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `sealert` command is used to view the complete SELinux message when an error
    occurs. Check your `/var/log/messages` file to see if any alerts have been generated,
    and if so can run `sealert -l` on the number to get a detailed view.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当发生错误时，使用`sealert`命令查看完整的SELinux消息。检查您的`/var/log/messages`文件，看看是否生成了任何警报，如果有，可以运行`sealert
    -l`查看详细信息。
- en: 'To get a detailed list of the SELinuxBooleans with descriptions run the following
    command:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取带有描述的SELinux布尔值的详细列表，请运行以下命令：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To see the list but without the descriptions run the following command:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看列表但不包括描述，请运行以下命令：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To check if files and directories have the correct SELinux context run the
    following command:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查文件和目录是否具有正确的SELinux上下文，请运行以下命令：
- en: '[PRE29]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: There’s more...
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'As I mentioned SELinux is normally installed by default in most distributions.
    In some cases you may not even realize it is there. However, at times it will
    get in your way. If you try to install a service, for example, `vsftpd`, it may
    fail because it will violate the SELinux policy. It will usually pop up a fairly
    decent error message. The message may even tell you how to fix the problem, however,
    I have found in practice that it doesn’t work. You perform the action(s) it gives,
    it seems to run without error, but then the access is still denied. In these cases
    I use the `setenforce` command to put SELinux into Permissive mode and then carry
    on with my activity:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我提到的，SELinux通常默认安装在大多数发行版中。在某些情况下，您甚至可能没有意识到它的存在。但是，有时它会妨碍您。例如，如果您尝试安装服务，比如`vsftpd`，可能会失败，因为它会违反SELinux策略。通常会弹出一个相当不错的错误消息。该消息甚至可能告诉您如何解决问题，但是在实践中，我发现它不起作用。您执行它给出的操作，似乎没有错误，但是访问仍然被拒绝。在这些情况下，我使用`setenforce`命令将SELinux置于Permissive模式，然后继续我的活动：
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note that this only works until the next reboot.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这只在下次重启之前有效。
- en: For more information on SELinux there is a rather excellent guide on the Fedora
    website.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有关SELinux的更多信息，请参阅Fedora网站上的一份相当出色的指南。
- en: Using sudo to secure a system
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用sudo来保护系统
- en: There may be times, especially if you are a system administrator, when you would
    like to give a user more access to the computer, but not actually root authority.
    This can be done by modifying the`/etc/sudoers` file and having your users invoke
    the `sudo` command.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，特别是作为系统管理员，您可能希望给用户更多对计算机的访问权限，但实际上不是root权限。这可以通过修改`/etc/sudoers`文件并让用户调用`sudo`命令来实现。
- en: Getting ready...
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作...
- en: The following steps should not harm your system. We will perform these with
    a user account made above. You will need to be the root user for this section.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤不应损害您的系统。我们将使用上面创建的用户帐户执行这些步骤。您需要成为root用户才能执行此部分。
- en: How to do it...
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Here we will work with the `/etc/sudoers` file:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用`/etc/sudoers`文件：
- en: Make a backup copy of your `/etc/sudoers file`**:**
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份你的`/etc/sudoers文件`**：**
- en: '[PRE31]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You don’t edit this file directly, the `visudo` command is used. This is poorly
    named as any text editor can be used if you export the `EDITOR` variable accordingly.
    Set the variable if desired then run the command:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您不直接编辑此文件，而是使用`visudo`命令。如果需要，任何文本编辑器都可以使用。如果需要，设置变量然后运行命令：
- en: '[PRE32]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This command makes a temporary copy of the `sudoers` file and edits it. If all
    goes well it then copies the temporary file over the original when you are done.
    So, let’s take a look at this file.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个命令会创建一个`sudoers`文件的临时副本并对其进行编辑。如果一切顺利，完成后会将临时文件复制到原始文件上。所以，让我们来看看这个文件。
- en: Read the section on aliases. They are divided into groups for things such as
    **networking, software, services, locate**, and others. For now let’s just jump
    in and see how this works.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读别名部分。它们被分成组，用于诸如**网络、软件、服务、locate**等的事物。现在让我们跳进来看看这是如何工作的。
- en: But first let’s try something. Open another session as a guest user. I’ll use
    my `jklewis` account.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但首先让我们尝试一些东西。以guest用户身份打开另一个会话。我将使用我的`jklewis`帐户。
- en: 'Under the `jklewis` account type the following command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`jklewis`帐户下键入以下命令：
- en: '[PRE33]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Create a file using the command:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建一个文件：
- en: '[PRE34]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now try to copy that file to `/usr/bin`:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在尝试将该文件复制到`/usr/bin`：
- en: '[PRE35]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: You should have received an error. This is correct of course, a normal user
    can’t normally write to the `/usr/bin` directory. Now go back to your `visudo`
    session.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该收到一个错误。这当然是正确的，普通用户通常不能写入`/usr/bin`目录。现在返回到您的`visudo`会话。
- en: You will need the hostname for your machine. For this example we will use the
    numeric IP. You can obtain that from the `ifconfig` command if needed.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将需要您机器的主机名。在本示例中，我们将使用数字IP。如果需要，您可以从`ifconfig`命令中获取它。
- en: 'Just after the lines that mention the shutdown command we are going to add
    a line for our guest user. The syntax is username, hostname, commands, and options,
    so add the line:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就在提到关闭命令的行之后，我们将为我们的访客用户添加一行。语法是用户名、主机名、命令和选项，因此添加以下行：
- en: '[PRE36]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Save the file and close the `visudo` session. Now try this command again. While
    still in the `/tmp` directory run `cpf1 /usr/bin`. It should still give the error
    message. Now try it like the following command:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并关闭`visudo`会话。现在再次尝试此命令。仍然在`/tmp`目录中运行`cpf1 /usr/bin`。它应该仍然显示错误消息。现在尝试以下命令：
- en: '[PRE37]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Ah, it’s asking for a password, right? Yes, and it’s asking for the user’s password,
    not the one for root. This can be easy to confuse (well, it was for me anyway).
    The best way to remember this is you probably aren’t supposed to know what the
    root password is. Enter yours.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 啊，它要求输入密码，对吧？是的，它要求用户的密码，而不是root的密码。这可能很容易混淆（至少对我来说是这样）。记住的最好方法是，你可能不应该知道root密码是什么。输入你的密码。
- en: If this is the first time `sudo` is being used by this user an interesting notice
    may pop up. Read it and understand it to avoid the wrath of your system admin.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是该用户第一次使用`sudo`，可能会弹出一个有趣的通知。阅读并理解它，以避免系统管理员的愤怒。
- en: After all of this the command should proceed without error this time. Pretty
    cool, huh? Since we used `ALL` in the line we added to the `sudoers` file it effectively
    has given this user full access. Note that some things will still not work the
    same, redirection for one.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有这些之后，这次命令应该可以无错误地进行。很酷，对吧？由于我们在`sudoers`文件中添加的行中使用了`ALL`，它实际上已经给予了这个用户完全访问权限。请注意，有些事情仍然不会工作得一样，例如重定向。
- en: Okay, so we probably don’t really want this `jklewis` jerk messing up our system,
    so let’s fine tune this a bit. Run `visudo` again.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好吧，我们可能真的不希望这个`jklewis`混蛋搞乱我们的系统，所以让我们稍微微调一下。再次运行`visudo`。
- en: Scroll down or search for **Processes**. Uncomment the `# Cmnd_Alias PROCESSES`
    line by removing the `#` mark.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动或搜索**进程**。通过删除`#`标记取消注释`# Cmnd_Alias PROCESSES`行。
- en: 'Scroll back down to the `jklewis` line we added earlier. Change it to read:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次向下滚动到我们之前添加的`jklewis`行。将其更改为：
- en: '[PRE38]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Now we need a process to kill. As root start up a `vi` session. Something like
    `vi mybook` will work.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要一个要终止的进程。以root身份启动一个`vi`会话。类似`vi mybook`的东西会起作用。
- en: In your user session run `psauxw | grep”vi mybook”` and remember the process
    number (**PID**).
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的用户会话中运行`psauxw | grep”vi mybook”`并记住进程号（**PID**）。
- en: 'Also in your user session run `kill -9` on the above PID. It will give an error.
    Now run it again but with like the following command:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还在您的用户会话中运行`kill -9`上面的PID。它会出错。现在再次运行，但使用以下命令：
- en: '[PRE39]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The process with `vi` should be killed.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该终止`vi`进程。
- en: Tip
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If the screen stays blue or some other color just run `the ls command.` That
    should clear it up.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果屏幕保持蓝色或其他颜色，只需运行`ls命令`。那应该解决问题。
- en: 'The following is a screenshot of my `/etc/sudoers` file:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我的`/etc/sudoers`文件的屏幕截图：
- en: '![How to do it...](img/3008OS_05_03.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3008OS_05_03.jpg)'
- en: There’s more...
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can see from the `sudoers` file that a lot of fine tuning can be performed
    on it. Users can be given very little extra authority, or a whole lot. For more
    information run `man sudoers`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从`sudoers`文件中看到，可以对其进行很多微调。用户可以被赋予非常少的额外权限，或者非常多的权限。有关更多信息，请运行`man sudoers`。
- en: Here’s my two cents on `sudo`. There are many computer users who can be trusted
    to run as root without harming the system. However, there are exceptions. If you
    set up `sudo` you might spend a whole lot of time trying to get it just right,
    only to find that you are always having to add more things. Your users will get
    upset because they can’t do their work until you make the changes. Then, when
    you think you finally have it just right, someone, using `sudo`, will still mess
    up and mess up bad. It has been my experience that if a user makes this mistake
    once, he will do it again and again.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我对`sudo`的两分钱。有许多计算机用户可以信任以root身份运行而不会损害系统。但也有例外。如果您设置了`sudo`，您可能会花很多时间尝试使其完美，只能发现您总是不得不添加更多内容。您的用户会因为无法进行更改而感到沮丧。然后，当您认为最终已经完美无缺时，有人使用`sudo`，仍然会搞砸并严重搞砸。根据我的经验，如果用户犯了这个错误一次，他会一次又一次地犯。
- en: The /tmp directory
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`/tmp`目录'
- en: 'The `/tmp` directory is somewhat special as by default it allows all users
    to write files to it. Here is what the listing for`/tmp` looks like on my system:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`/tmp`目录在某种程度上是特殊的，因为默认情况下允许所有用户向其中写入文件。这是我系统上`/tmp`的列表：'
- en: '[PRE40]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You can see this is open for everyone. The `t` in the permissions indicates
    that the restricted deletion bit is set on the directory. So what does this actually
    mean? For directories, it prevents normal users from removing or renaming a file
    in the directory that they don’t have the proper permissions for.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到这是对所有人开放的。权限中的`t`表示目录上设置了受限删除位。那么这实际上意味着什么呢？对于目录，它防止普通用户删除或重命名他们没有适当权限的目录中的文件。
- en: As a normal user you still need to be careful when writing to `/tmp`, as there
    are some restrictions.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 作为普通用户，当写入`/tmp`时仍然需要小心，因为有一些限制。
- en: How to do it...
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let’s try a few things to get an idea of how `/tmp` works:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一些事情，以了解`/tmp`的工作原理：
- en: 'Run the following command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE41]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: If there are any temporary `.txt` files lying around from earlier sections clean
    them up; an `rm *.txt` file should do it.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有任何早期部分留下的临时`.txt`文件，请清理它们；`rm *.txt`文件应该可以做到。
- en: 'Now run the following command:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行以下命令：
- en: '[PRE42]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'In another session, as a guest user (I’ll use `jklewis`), run the following
    command:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个会话中，作为一个访客用户（我将使用`jklewis`），运行以下命令：
- en: '[PRE43]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Run the following command:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE44]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This should work without error. Now try:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该可以无错误地工作。现在尝试：
- en: '[PRE45]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: You should have received the **Permission denied** error. Why? Because even
    though normal users can all write to the `/tmp` directory, the normal file system
    (DAC) permissions must still be followed.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该收到**权限被拒绝**的错误。为什么？因为即使普通用户都可以写入`/tmp`目录，但仍必须遵循正常文件系统（DAC）权限。
- en: There’s more...
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: For the reasons outlined above I would suggest not using the `/tmp` directory
    for anything except for truly temporary files. In addition, most distributions
    routinely clean out `/tmp` and so anything not owned by root is going to get deleted.
    Remember all of this when generating temporary files especially when writing scripts
    (more on that in [Chapter 8](ch08.html "Chapter 8. Working with Scripts"), *Working
    with Scripts*).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 基于上述原因，我建议除了真正临时的文件之外，不要在“/tmp”目录中使用任何东西。此外，大多数发行版会定期清理“/tmp”，因此任何不属于root用户的文件都将被删除。在生成临时文件时请记住所有这些，特别是在编写脚本时（更多内容请参见[第8章](ch08.html
    "第8章 脚本处理")，“脚本处理”）。
