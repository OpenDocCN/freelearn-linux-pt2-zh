["```\n#!/bin/sh\n\n```", "```\n chmod 755 mycmd\n\n```", "```\n 1  #!/bin/sh\n 2  # removelines 5/1/2013\n 3  if [ \"$1\" = \"\" ] ; then\n 4   echo \"Usage: removenumbers filename > newfile\"\n 5   echo \" This script will remove the line numbers from the beginning of the lines\"\n 6   echo \" in filename. It assumes the number field is 5 characters wide.\"\n 7   echo \" Use the redirection operator to save the output to a new file.\"\n 8   exit\n 9  fi\n 10  cat $1 | cut -c 1-5 --complement\n\n```", "```\n    cat removelines.txt | cut -c 1-5 --complement > removelines\n\n    ```", "```\n    chmod 755 removelines\n\n    ```", "```\n    removelines\n\n    ```", "```\n 1  #!/bin/sh\n 2  # 5/1/2013\n 3  echo Script showing how to count and show the parameters\n 4  N=$#\n 5  echo Number of parameters: $N\n 6  if [ $N -eq 0 ] ; then\n 7    echo \"Usage: $0 parameters and/or a mask\"\n 8    exit\n 9  fi\n 10  for i in $* ; do\n 11   echo Parm: $i\n 12  done\n\n```", "```\n    parameters 1 34 56\n\n    ```", "```\n    i=1\n    RC=0\n\n    ```", "```\n    if [ $i -eq 0 ] ; then           # test for equal\n    if [ $RC -ne 0 ] ; then       # test for not equal\n\n    ```", "```\n    FNAME=Jim\n    LNAME=Lewis\n    if [ \"$FNAME\" = \"Jim\" ] ; then     # test string equality\n    if [ \"$LNAME\" = \"Lewis\" ] ; then   # test string equality\n\n    ```", "```\n 1  #!/bin/sh\n 2  #\n 3  #  Check network once a minute and log failures to a file\n 4  PROVIDER=192.168.1.102\n 5  tput clear\n 6  while [ 1 ]\n 7  do\n 8    echo Written by Jim Lewis 2/21/2007\n 9    echo Pinging $PROVIDER\n 10    ping -c 1 $PROVIDER\n 11    rc=$?\n 12    if [ $rc -ne 0 ] ; then\n 13      echo Cannot ping $PROVIDER\n 14      date >> log1.txt\n 15      echo Cannot ping $PROVIDER >> log1.txt\n 16    fi\n 17    sleep 60\n 18  done\n\n```", "```\n 1  #!/bin/sh\n 2  #   Jim's backup program\n 3  # Change to an appropriate directory on your system\n 4  cd /lewis/backup\n 5  VER=\"File backup by Jim Lewis 4/25/2011 A\"\n 6  echo $VER\n 7  date >> datelog.txt\n 8  T=`cat filenum1`\n 9  T=`expr $T + 1`\n 10  if [ $T -gt 7 ] ; then\n 11   T=1\n 12  fi\n 13  echo $T > filenum1\n 14  TDIR=/temp/linuxbook/chap8/backups$T\n 15  echo \"Removing files from $TDIR\"\n 16  cd $TDIR\n 17  pwd\n 18  rm *.gz\n 19  echo \"Backing up files to $TDIR\"\n 20  X=`date \"+%m%d-%H\"`              # create a timestamp\n 21  echo $X\n 22  cd /\n 23  tar -cvzf \"$TDIR/lewis$X.gz\" lewis\n 24  tar -cvzf \"$TDIR/temp$X.gz\" temp\n 25  tar -cvzf \"$TDIR/root$X.gz\" root\n 26  cd /home\n 27  tar -cvzf \"$TDIR/guest$X.gz\" --exclude=Cache --exclude=.cache --exclude=.evolution --exclude=vmware --exclude=.thumbnails  --exclude=.gconf --exclude=.kde --exclude=.adobe   guest1\n 28  echo $VER\n 29  cd $TDIR\n 30  pwd\n 31  ls -lah\n\n```", "```\n 1  #!/bin/sh\n 2  # todo script 5/1/2013\n 3  FN1=/tmp/file.lock\n 4  if [ -f $FN1  ] ; then\n 5   echo -n \"File is being used in tty: \"\n 6   cat $FN1\n 7   exit\n 8  fi\n 9  echo `tty` > $FN1\n 10  # perform your actions(s) here\n 11  kw /lewis/todo.txt\n 12  rm $FN1\n\n```", "```\nperl filename.pl\n\n```", "```\n#!/usr/bin/perl\n\n```", "```\n 1  #!/usr/bin/perl\n 2  #  t1.pl - Perl practice script 1\n 3  use strict;\n 4  use warnings;\n 5  sub displaymessage\n 6  {\n 7   my $message = shift;\n 8   print \"message: $message\\n\";\n 9  }\n 10  system(\"tput clear\");\n 11  print \"Practice script 1 5/4/2013\\n\";\n 12  my $name = \"Jim\";\n 13  print \"name: $name\\n\";\n 14  my @numbers = (23, 42, 69, 71);\n 15  print \"numbers 0: $numbers[0]\\n\";\n 16  print \"Last element is: $numbers[$#numbers]\\n\";\n 17  if($numbers[0]==23)\n 18  {\n 19   print \"numbers 0 is equal to 23\\n\";\n 20  }\n 21  my $count = 0 ;\n 22  foreach (@numbers)\n 23  {\n 24   print \"Element $count is  $_\\n\";\n 25   $count++;\n 26  }\n 27  print \"Opening input.txt ...\\n\";\n 28  open(my $in,  \"<\",  \"input.txt\")  or die \"Cannot open input.txt for reading: $!\";\n 29  print \"Opening output.txt ...\\n\";\n 30  open(my $out, \">\",  \"output.txt\") or die \"Cannot open output.txt for writing: $!\";\n 31  while (<$in>)\n 32  {\n 33   print \"line $_\";\n 34   print $out $_;\n 35  }\n 36  close $in or die \"$in: $!\";\n 37  close $out or die \"$out: $!\";\n 38  displaymessage(\"Type some keys. Press 'c' to clear the screen and 'q' to quit:\");\n 39  my $key = 1;\n 40  $count = 1;\n 41  while($count < 500)\n 42  {\n 43  # read a key from the keyboard\n 44   open(TTY, \"+</dev/tty\") or die \"no tty: $!\";\n 45   system \"stty  cbreak </dev/tty >/dev/tty 2>&1\";\n 46   $key = getc(TTY);\n 47   if($key eq 'c')\n 48   {\n 49    system(\"tput clear\");\n 50   }\n 51   if($key eq 'q')\n 52   {\n 53    print \"\\nEnding the script\\n\";\n 54    $count = 10000;\n 55   }\n 56   $count++;\n 57  }\n\n```", "```\n    line 1\n    line 2\n    line 3\n    line 4\n    line 5\n\n    ```"]