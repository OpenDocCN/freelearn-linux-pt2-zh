- en: Chapter 10. The Kernel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。 内核
- en: 'In this chapter we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: A brief look at module commands
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对模块命令的简要介绍
- en: Building a kernel from kernel.org
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从kernel.org构建内核
- en: Using xconfig to modify the configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用xconfig修改配置
- en: Working with GRUB
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GRUB
- en: Understanding GRUB 2
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解GRUB 2
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The kernel is the main component, or the heart of an operating system. It controls
    all of the resources, timings, interrupts, memory allocation, process separation,
    error handling, and logging in the system. In a typical Linux computer, the kernel
    is modular, in that it has a core file (or files) and then loads the other device
    drivers as needed. In some cases, say an embedded device, the kernel may consist
    of one big image with all of the drivers it needs contained inside a file. This
    is known as a monolithic kernel.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 内核是操作系统的主要组件或核心。 它控制系统中的所有资源，时间，中断，内存分配，进程分离，错误处理和日志记录。 在典型的Linux计算机中，内核是模块化的，它具有核心文件（或文件），然后根据需要加载其他设备驱动程序。
    在某些情况下，比如嵌入式设备，内核可能由一个包含所有所需驱动程序的大图像文件组成。 这被称为单片内核。
- en: Before deciding whether you need to build a custom kernel, you should first
    make sure you really do need one. Here are some of the pros and cons to running
    a custom kernel.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定是否需要构建自定义内核之前，您应该首先确保自己确实需要一个。 运行自定义内核的利弊如下。
- en: 'The following are the pros to running a custom kernel:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是运行自定义内核的优点：
- en: If you know what you are doing and have the time to research it, you can end
    up with a kernel that gets the most out of your hardware
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您知道自己在做什么并且有时间进行研究，您可以得到最大化硬件性能的内核
- en: You can take advantage of the features or devices that the stock kernel might
    not have
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以利用股票内核可能没有的功能或设备
- en: By going through all of the kernel settings you gain a better understanding
    of Linux
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过查看所有内核设置，您可以更好地了解Linux
- en: Building and running your own kernels is just plain fun
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和运行自己的内核只是纯粹的乐趣
- en: 'The following are the cons of running a custom kernel:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是运行自定义内核的缺点：
- en: Your own custom kernel might not contain features needed by your distribution
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您自己的自定义内核可能不包含发行版所需的功能
- en: VMware, and other virtual environments will probably not work without additional
    effort
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware和其他虚拟环境可能需要额外的努力才能正常工作
- en: Be aware that if you run your own kernel, you will most likely no longer be
    supported by your distribution support channel
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，如果运行自己的内核，您很可能不再得到发行版支持渠道的支持
- en: Tip
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Most of these cons of running your own kernel can be worked around and/or solved.
    It just depends on how much time you have to spend on getting it right.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 运行自己的内核的大多数缺点都可以解决。 这取决于您花多少时间来解决它。
- en: A brief look at module commands
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对模块命令的简要介绍
- en: There are several commands that are used to manipulate the modules on your system.
    Note that depending on your distribution, these commands may only be run as root.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个命令用于操作系统上的模块。 请注意，根据您的发行版，这些命令可能只能以root身份运行。
- en: How to do it...
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In the following steps, we will run the `lsmod`, `modprobe`, `insmod`, and
    `modinfo` commands:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中，我们将运行`lsmod`，`modprobe`，`insmod`和`modinfo`命令：
- en: To see the status of the modules currently loaded on the system, run `lsmod`.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看系统上当前加载的模块的状态，请运行`lsmod`。
- en: To load a module from the current `/lib/modules/<kernel name>` directory, you
    would use the `modprobe` command. An example would be `modprobe pcnet32`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从当前的`/lib/modules/<kernel name>`目录加载模块，您将使用`modprobe`命令。 例如`modprobe pcnet32`。
- en: To load a module directly, use the `insmod` command. An example would be `insmod
    /temp/pcnet32.ko`.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接加载模块，使用`insmod`命令。 例如`insmod /temp/pcnet32.ko`。
- en: To display the information about a module, use the `modinfo` command. Try this
    on your system by first running `lsmod` to find a module and then `modinfo` on
    one of the names `modinfo video`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示有关模块的信息，请使用`modinfo`命令。 首先运行`lsmod`查找模块，然后在其中一个名称上尝试`modinfo`。
- en: How it works...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `lsmod` command takes the contents of the `/proc/modules` file and displays
    it in a nice, easy to read format. Use it to determine what modules are loaded
    in the system.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`lsmod`命令获取`/proc/modules`文件的内容并以易于阅读的格式显示出来。 使用它来确定系统中加载了哪些模块。'
- en: 'The following screenshot shows a partial listing of `lsmod` from my Fedora
    19 system:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了我Fedora 19系统中`lsmod`的部分列表：
- en: '![How it works...](img/3008OS_10_00.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/3008OS_10_00.jpg)'
- en: The `modprobe` command is used to add and remove modules from the Linux kernel.
    It loads the module from the current `/lib/modules/<kernel name>` directory. The
    `modprobe` command does a lot more than `insmod`, such as load more than one module
    at a time to resolve dependencies, and is generally preferred over `insmod`. Since
    `modprobe` can load multiple modules, the files in `/etc/modprobe.d` and the `/etc/modules.conf`
    file are used to resolve any issues.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`modprobe`命令用于向Linux内核添加和删除模块。 它从当前的`/lib/modules/<kernel name>`目录加载模块。 `modprobe`命令比`insmod`做得更多，例如一次加载多个模块以解决依赖关系，并且通常优先于`insmod`。
    由于`modprobe`可以加载多个模块，因此`/etc/modprobe.d`中的文件和`/etc/modules.conf`文件用于解决任何问题。'
- en: The `insmod` command can be used to insert a module into the system. It is normally
    used to load a module directly. For example, if you wanted to load a newly created
    version of the `pcnet32` module, you would first change the directory to the proper
    directory and then run `insmod pcnet32.ko`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`insmod`命令可用于将模块插入系统。 通常用于直接加载模块。 例如，如果您想加载新创建的`pcnet32`模块的版本，您首先会将目录更改为正确的目录，然后运行`insmod
    pcnet32.ko`。'
- en: 'The `modinfo` command shows information about a Linux kernel module. It is
    a very useful command that allows you to see the details about a particular module,
    such as what parameters it will accept. The following is what the output from
    `modinfo` looks like on my Fedora 17 system:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`modinfo`命令显示有关Linux内核模块的信息。这是一个非常有用的命令，允许您查看特定模块的详细信息，例如它将接受哪些参数。以下是在我的Fedora
    17系统上从`modinfo`输出的样子：'
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `rmmod` command allows you to remove a loaded module from the Linux kernel.
    The usual syntax is `rmmod modulename`. The extension is not used. You can also
    use the `modprobe -r` command.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`rmmod`命令允许您从Linux内核中删除已加载的模块。通常的语法是`rmmod modulename`。不使用扩展名。您也可以使用`modprobe
    -r`命令。'
- en: The `depmod` program generates the `modules.dep` and `.map` files. It does not
    normally need to be executed manually by the user as it is run during the kernel
    build. It creates a list of module dependencies by examining the modules in `/lib/modules/<kernelname>`
    and determining what symbols they need and which symbols they export.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`depmod`程序生成`modules.dep`和`.map`文件。通常情况下，用户不需要手动执行它，因为它在内核构建期间运行。它通过检查`/lib/modules/<kernelname>`中的模块并确定它们需要哪些符号以及它们导出哪些符号来创建模块依赖列表。'
- en: Some of these commands have a force option available. It will attempt to perform
    the desired function, bypassing any checks. I have never seen this work reliably
    and so do not recommend its use. If you do decide to try it, make sure you have
    a complete OS backup available.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些命令有一个强制选项。它将尝试执行所需的功能，绕过任何检查。我从未见过这种方法可靠地工作，因此不建议使用。如果您决定尝试，请确保您有完整的操作系统备份。
- en: When running device driver commands, in many cases more information is available
    by looking at the `/var/log/messages` file. I suggest opening a terminal and running
    `tail -f /var/log/messages` in it. Keep this terminal where you can see it at
    all times. Also note that the file will eventually be recycled, so the command
    will have to be stopped and started again (about once a week on my systems). A
    simple test is to run `logger hellojim`. If you don't see that show up, then it's
    time to restart the tail session again.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行设备驱动程序命令时，通常可以通过查看`/var/log/messages`文件获得更多信息。我建议打开一个终端并在其中运行`tail -f /var/log/messages`。始终保持这个终端可见。还要注意，该文件最终会被回收，因此命令将不得不停止并重新启动（在我的系统上大约每周一次）。一个简单的测试是运行`logger
    hellojim`。如果你没有看到它出现，那么是时候重新启动tail会话了。
- en: 'You can also run the `dmesg` command. The following is an abbreviated example
    of the output of `dmesg` on Fedora 17:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以运行`dmesg`命令。以下是Fedora 17上`dmesg`输出的一个简短示例：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There's more...
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Consult the man or info pages for any of these commands for more information.
    In particular, look at `man modprobe.conf` for details on how to use the configuration
    options available with `modprobe`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 查阅这些命令的man或info页面以获取更多信息。特别是查看`man modprobe.conf`，了解如何使用`modprobe`的配置选项。
- en: You can use the `uname -r` command to see the current kernel version. You will
    often see that the expression `uname -r` in scripts and aliases works great.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`uname -r`命令查看当前的内核版本。通常情况下，您会发现在脚本和别名中使用`uname -r`表达式效果很好。
- en: Building a kernel from kernel.org
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从kernel.org构建内核
- en: For this example, we will be using kernel files from the [http://kernel.org](http://kernel.org)
    website.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用来自[http://kernel.org](http://kernel.org)网站的内核文件。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should be able to perform all but the last step without any possible harm
    to your system. The `make install` command will modify your GRUB file(s), and
    so at a minimum, I would back those up. To be very safe, and since we already
    know I am paranoid, if you are going to install the new kernel, I would run all
    of these steps on a test machine.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在不会对系统造成任何可能的伤害的情况下，您应该能够执行除了最后一步之外的所有步骤。`make install`命令将修改您的GRUB文件，因此至少我会备份这些文件。为了更安全，因为我们已经知道我是偏执的，如果您要安装新的内核，我建议在测试机器上运行所有这些步骤。
- en: This example assumes your computer has been installed as a full development
    system. You will need up-to-date versions of `GCC`, `make`, the QT development
    package, and others. If you have a current distribution elected to install the
    Software Development package (or equivalent), you are probably good to go. I suggest
    having at least 10 GB of file space available on the partition you plan to do
    the builds in; more if you are going to be creating a lot of kernel trees (the
    files in kernel 3.9.1 are using 6.5 GB).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例假设您的计算机已安装为完整的开发系统。您将需要最新版本的`GCC`，`make`，QT开发包等。如果您选择安装了当前发行版的软件开发包（或等效包），那么您可能已经准备就绪。我建议在您计划进行构建的分区上至少有10GB的文件空间可用；如果您将要创建大量的内核树（内核3.9.1中的文件使用了6.5GB），则需要更多。
- en: The `vmlinuz`, `initramfs`, and `map` files will be copied to `/boot`, so make
    sure it is large enough to handle the number of extra kernels you want (about
    500 MB is typical).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`vmlinuz`，`initramfs`和`map`文件将被复制到`/boot`，因此请确保它足够大，以处理您想要的额外内核的数量（大约500MB是典型的）。'
- en: You will need to be root to run the `make modules_install` and `make install`
    commands. I suggest becoming root for all of this procedure to avoid any file
    permission problems.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要以root身份运行`make modules_install`和`make install`命令。我建议在整个过程中都以root身份运行，以避免任何文件权限问题。
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following are the steps to get and build a kernel:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是获取和构建内核的步骤：
- en: On your browser, navigate to [http://kernel.org](http://kernel.org).
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的浏览器中，导航到[http://kernel.org](http://kernel.org)。
- en: Click inside the yellow square where it says **Latest Stable Kernel** and save
    the file. On Fedora, the `Downloads` directory is `/home/<user>/Downloads`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击黄色方框内的**Latest Stable Kernel**，并保存文件。在Fedora上，`Downloads`目录是`/home/<user>/Downloads`。
- en: Where you want to build is pretty much up to you. I personally dislike long
    directory paths and so I have put mine in the `/temp` directory. You may choose
    another location if you wish.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您想要构建的位置基本上取决于您。我个人不喜欢很长的目录路径，所以我把我的放在`/temp`目录中。如果您愿意，您可以选择另一个位置。
- en: Copy or move the `.xz` file from the `Downloads` directory to `/temp`. For this
    example, the filename is `linux-3.9.1.tar.xz`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`.xz`文件从`Downloads`目录复制或移动到`/temp`。在本例中，文件名是`linux-3.9.1.tar.xz`。
- en: Change the directory to `/temp` and extract the file `tar xvf linux-3.9.1.tar.xz`.
    This used to take a long time, but it's not too bad these days.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到`/temp`目录并提取文件`tar xvf linux-3.9.1.tar.xz`。这以前需要很长时间，但现在也不太糟糕。
- en: When it's finished, change directory to the `cd /temp/linux-3.9.1` directory.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，切换到`cd /temp/linux-3.9.1`目录。
- en: 'The next step is to obtain a kernel configuration file. Unless you have a specific
    one already in mind, I usually take the latest one out of the `/boot` directory.
    On my system, I ran the following command:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是获取一个内核配置文件。除非你已经有一个特定的文件在脑海中，我通常从`/boot`目录中取最新的一个。在我的系统上，我运行了以下命令：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You could have copied the file directly to `.config`, however, I like seeing
    what I started with. So do it now:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以直接复制文件到`.config`，但是，我喜欢看到我从哪里开始。现在就这样做：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We now need to run a kernel build program to get everything in sync. We will
    use the `xconfig` program, which will be discussed in more detail in the next
    section. For now, just run the following command:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要运行一个内核构建程序来使一切同步。我们将使用`xconfig`程序，这将在下一节中详细讨论。现在，只需运行以下命令：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will bring up a cool-looking screen with about a million things on it.
    Click on **File** | **Save** and then **File** | **Quit**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带来一个看起来很酷的屏幕，上面有大约一百万个东西。点击**文件** | **保存**，然后**文件** | **退出**。
- en: 'You should now be back at the text screen, with it showing something like the
    following:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您应该回到文本屏幕，显示类似以下内容：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now run the `make` command. Depending on the speed of your computer, this may
    take a long while. If you're a coffee or tea drinker, this might be a good time
    to go get some.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行`make`命令。根据您的计算机速度，这可能需要很长时间。如果你喝咖啡或茶，这可能是一个去喝一些的好时机。
- en: 'Check to make sure there were no errors, and then run the following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查确保没有错误，然后运行以下命令：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This next step will modify your GRUB configuration. I always make sure I have
    backups for those just in case. When done, to install the kernel, run the following
    command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步将修改您的GRUB配置。我总是确保我有备份以防万一。完成后，要安装内核，请运行以下命令：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In most cases, the `make install` command will set the new kernel as the default.
    You can check this by viewing your GRUB configuration files (we will see more
    on GRUB later in this chapter).
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大多数情况下，`make install`命令将设置新内核为默认值。您可以通过查看GRUB配置文件来检查这一点（我们稍后将在本章中看到更多关于GRUB的内容）。
- en: To actually try out the new kernel, you must reboot the system (more on that
    later). When the screen comes up, make sure the proper kernel is selected on the
    menu.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要实际尝试新的内核，您必须重新启动系统（稍后会详细介绍）。当屏幕出现时，请确保菜单上选择了正确的内核。
- en: Since we made no real changes, the kernel should boot up without any issues.
    Check this by running the `uname -a` command to make sure it booted the right
    one. You should not see or notice any differences in this kernel. However, depending
    on several factors it may not work as expected, or it may not even boot at all.
    If this is the case, you should be able to reboot back into the previous good
    kernel.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们没有进行实质性的更改，内核应该可以正常启动。通过运行`uname -a`命令来检查是否启动了正确的内核。您不应该在这个内核中看到或注意到任何差异。但是，根据几个因素，它可能不像预期的那样工作，甚至可能根本无法启动。如果是这种情况，您应该能够重新启动到之前的良好内核。
- en: When rebooting, I strongly suggest a cold start. Perform an orderly shutdown
    (`shutdown -h now`) and let the machine sit for at least a few seconds; minutes
    wouldn't hurt either. I have seen some very strange things happen with warm boots
    that any sane person would say was impossible.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动时，我强烈建议进行冷启动。执行有序关机（`shutdown -h now`），让机器至少静置几秒钟；几分钟也不会有什么坏处。我曾经看到一些非常奇怪的事情发生在热启动上，任何理智的人都会说这是不可能的。
- en: Using xconfig to modify the configuration
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用xconfig修改配置
- en: As was mentioned in the previous section, the `.config` file is what controls
    everything that goes into the kernel files. This includes both the `vmlinuz` and
    `initramfs` files, and the device driver modules. The `.config` is a text file
    but is not meant to be edited directly, instead one of several different programs
    can be used. In this chapter we show you how to use the `xconfig` program to make
    changes to the `.config` file.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，`.config`文件控制着进入内核文件的一切。这包括`vmlinuz`和`initramfs`文件，以及设备驱动程序模块。`.config`是一个文本文件，但不是直接编辑的，而是可以使用几种不同的程序之一。在本章中，我们将向您展示如何使用`xconfig`程序来对`.config`文件进行更改。
- en: Getting ready
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Please see the previous section on what is needed to prepare before performing
    these steps.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行这些步骤之前，请参阅前一节中有关准备工作的内容。
- en: How to do it...
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Here we will use `xconfig` to modify the configuration:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用`xconfig`来修改配置：
- en: 'Change to the kernel build directory and run the following command:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到内核构建目录并运行以下命令：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: That cool-looking screen should come up again. This program takes a few minutes
    to get used to, so we will go through it step-by-step.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那个看起来很酷的屏幕应该再次出现。这个程序需要几分钟来适应，所以我们将一步一步地进行。
- en: First, locate the string **Processor type and features** and click on it. You
    will see the screen change.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，找到字符串**处理器类型和特性**并点击。屏幕会发生变化。
- en: Now in the panel on the right-hand side under **Processor family**, click on
    **Core 2/newer Xeon**. Click on the text, *not* the radio button.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在右侧面板下的**处理器系列**下，点击**Core 2/newer Xeon**。点击文本，*而不是*单选按钮。
- en: You should now be seeing something like the following screenshot (from my Fedora
    19 system using a 3.9.9 kernel):![How to do it...](img/3008OS_10_01.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您应该看到类似以下截图的内容（来自我使用3.9.9内核的Fedora 19系统）：![如何做...](img/3008OS_10_01.jpg)
- en: You must use caution when using this program. It is quite easy to accidentally
    click on a radio button, changing something you did not intend to. For this reason
    I suggest making frequent backups of your `.config` file. Since it is a text file,
    you can use the `diff` program to look for changes between files. If you are unfamiliar
    with `diff`, run `man diff` for more information.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用这个程序时必须小心。很容易意外点击单选按钮，改变你不打算改变的东西。因此，我建议频繁备份你的`.config`文件。由于它是一个文本文件，你可以使用`diff`程序查看文件之间的更改。如果你不熟悉`diff`，运行`man
    diff`获取更多信息。
- en: So, let's go ahead and change something. If you are running modern hardware,
    it probably has a Core 2 or Xeon processor in it. Run `cat /proc/cpuinfo` to see
    what you have. If it looks appropriate, click the radio button on the **Core 2/newer
    Xeon** line.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以，让我们继续改变一些东西。如果你正在运行现代硬件，它可能有一个Core 2或Xeon处理器。运行`cat /proc/cpuinfo`查看你有什么。如果看起来合适，点击**Core
    2/newer Xeon**行上的单选按钮。
- en: Those are the basics for configuring a new kernel. When first getting started,
    I suggest making as few changes as possible between builds. This way it will be
    much easier to track down what change caused a problem, if one should occur.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些是配置新内核的基础。刚开始时，我建议在构建之间尽量少做更改。这样，如果出现问题，跟踪导致问题的更改将更容易。
- en: To complete this discussion of `xconfig`, let's try another field. On the left-hand
    side, click on the text of **General setup**.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成对`xconfig`的讨论，让我们尝试另一个字段。在左侧，点击**常规设置**的文本。
- en: You should see the text on the right change. In general, when using `xconfig`
    you click on the text to change the display, to expand or compress an entry click
    on the appropriate button, and to actually change a value click on the radio button.
    A small black dot in a box means a module will be built.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到右侧的文本发生变化。通常，在使用`xconfig`时，你点击文本来改变显示，点击适当的按钮来展开或压缩条目，点击单选按钮来实际更改值。方框中的小黑点表示将构建一个模块。
- en: There's more...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can use the `diff` command to look at the differences between the `.config`
    files you have saved. This will save a lot of time when debugging.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`diff`命令查看你保存的`.config`文件之间的差异。在调试时，这将节省大量时间。
- en: The program can be somewhat confusing. In places, the text on the right will
    indicate **Say Y here**. That means to make sure there is a check in the checkbox.
    Likewise, **No** means no checkmark. In some cases the program will say to indicate
    Y or N in a field that doesn't even have a checkbox. I suppose those are bugs,
    if so, they have been there for a long time.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序可能有些令人困惑。在某些地方，右侧的文本会指示**在此处选择Y**。这意味着确保复选框中有一个勾。同样，**No**表示没有勾选。在某些情况下，程序会说在一个没有复选框的字段中指示Y或N。我想这些是错误，如果是的话，它们已经存在很长时间了。
- en: You may also click on **Help** | **Introduction** for some brief text on how
    `xconfig` is used.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以点击**帮助** | **介绍**，了解如何使用`xconfig`的简要信息。
- en: 'Extra care must be taken when building kernels. It is easy to make a mistake
    when using `xconfig` to modify your `.config` file resulting in an unbootable
    kernel. The following are a few pointers:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建内核时必须格外小心。在使用`xconfig`修改`.config`文件时很容易出错，导致内核无法启动。以下是一些要点：
- en: Make a backup of the current `.config` every single time you make a change.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次更改时都要备份当前的`.config`文件。
- en: Make as few changes as possible at one time. It's tempting to try and save time
    by making a lot of changes, if this works for you that is great. It does not work
    for me though.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量一次性做尽可能少的更改。试图通过做很多更改来节省时间是很诱人的，如果这对你有效那太好了。但对我来说行不通。
- en: If your latest kernel will not boot, try using `diff` to compare your latest
    `.config` file with the last good one. You might be able to spot the problem right
    away.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的最新内核无法启动，请尝试使用`diff`来比较你的最新`.config`文件和上一个好的文件。你可能能够立即发现问题。
- en: If all fails, go back to a known working configuration file and start again
    from there. You have been making backups of your `.config` files all this time,
    right?
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一切失败，回到已知的工作配置文件，然后从那里重新开始。你一直在备份你的`.config`文件，对吧？
- en: Working with GRUB
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GRUB
- en: When working with kernels, you may need to change your GRUB configuration file
    from time to time. You can modify which kernel comes up by default, the timeout
    value for the kernel selection menu, the parameters passed to the kernel, boot
    other operating systems, and many other things.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理内核时，你可能需要不时地更改你的GRUB配置文件。你可以修改默认启动的内核，内核选择菜单的超时值，传递给内核的参数，启动其他操作系统，以及许多其他内容。
- en: The `grub.conf` file is normally located in `/boot/grub`, or you can use the
    `/etc/grub.conf` file, which is a symbolic link.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`grub.conf`文件通常位于`/boot/grub`中，或者你可以使用`/etc/grub.conf`文件，它是一个符号链接。'
- en: 'The following is what `grub.conf` looks like on my Fedora 14 system:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在我的Fedora 14系统上的`grub.conf`的样子：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Here we will show you how to change some of the items in the `grub.conf` file.
    Note that a mistake here can render your system unbootable, so either just follow
    along or be very careful.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将向你展示如何更改`grub.conf`文件中的一些项目。请注意，这里的错误可能导致系统无法启动，所以要么只是跟着做，要么非常小心。
- en: 'Change to the proper directory:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到正确的目录：
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Make a backup copy: `cp grub.conf /temp` (or some other suitable location).'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份副本：`cp grub.conf /temp`（或其他适当的位置）。
- en: 'Edit it with vi or equivalent:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用vi或等效工具进行编辑：
- en: '[PRE11]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Referring to my file above let's boot the first stanza by default. Change the
    `default=2` line to `default=0`. Note that they count starting at 0.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参考上面的文件，让我们默认启动第一个段落。将`default=2`行更改为`default=0`。请注意，它们从0开始计数。
- en: Now let's increase the amount of time it will wait for you to make a selection;
    change the `timeout` value to `10`.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们增加等待你进行选择的时间；将`timeout`值更改为`10`。
- en: Suppose you want to boot up in text mode, to do this comment out (that is, put
    a `#` in front of) the `splashimage` and `hiddenmenu` lines.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你想以文本模式启动，要做到这一点，请注释掉（即在前面加上`#`）`splashimage`和`hiddenmenu`行。
- en: And also remove the `rhgb quiet` from the stanza (or all of them).
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并且从段落（或所有段落）中删除`rhgb quiet`。
- en: If you have any parameters you want passed to the kernel, you can just add them
    to the end of the `kernel` line.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你有任何要传递给内核的参数，你可以直接添加到`kernel`行的末尾。
- en: How it works...
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Let us see the break-up of the above mentioned steps in the following section:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在下一节中看一下上述步骤的分解：
- en: The commented section says `You have a /boot partition. This means that all
    kernel and initrd paths are relative to /boot`. What this is trying to say is
    when you come across a line later containing something like `/vmlinuz-3.9.1`,
    it really means `/boot/vmlinuz-3.9.1`. Don't forget that it works this way, and
    you will save yourself a lot of grief later.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释部分说`你有一个/boot分区。这意味着所有内核和initrd路径都是相对于/boot的`。这是在试图说的是，当你遇到后面包含类似`/vmlinuz-3.9.1`的行时，它实际上意味着`/boot/vmlinuz-3.9.1`。不要忘记它是这样工作的，你以后会省去很多麻烦。
- en: The `default=2` means to use the third title or stanza (yes, this is another
    place where they start counting at 0 instead of 1).
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default=2`表示使用第三个标题或段落（是的，这又是另一个从0开始计数而不是从1开始计数的地方）。'
- en: The `timeout=5` means to display the kernel boot menu for 5 seconds before booting
    into the default one.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeout=5`表示在启动默认内核之前显示内核启动菜单5秒钟。'
- en: The `splashimage` line shows a graphical image on the screen while booting.
    I dislike this immensely and so I comment it out.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`splashimage`行在启动时在屏幕上显示一个图形图像。我非常不喜欢这个，所以我把它注释掉了。'
- en: The `hiddenmenu` line means to hide the kernel boot menu. You comment this line
    out to show the menu. Yes, it's backwards again, but not quite as awkward as counting
    things starting at 0.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hiddenmenu`行表示隐藏内核启动菜单。取消注释此行以显示菜单。是的，又是反过来，但不像从0开始计数那么尴尬。'
- en: The first title line begins a kernel stanza. Everything between that line and
    the next title line (or end of file) is associated with that kernel. In this case,
    the first listed kernel is the latest one I have created (3.9.1).
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行标题开始一个内核段。在该行和下一个标题行（或文件结束）之间的所有内容都与该内核相关联。在这种情况下，列出的第一个内核是我创建的最新的一个（3.9.1）。
- en: The `root (hd0,0)` line means that my `/boot` directory is located on the first
    hard drive on the first partition.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`root (hd0,0)`行表示我的`/boot`目录位于第一个硬盘的第一个分区上。'
- en: The next line is the actual kernel file and parameters.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一行是实际的内核文件和参数。
- en: The last line of this stanza is the initial RAM disk image file.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个段落的最后一行是初始的RAM磁盘映像文件。
- en: As you can see, there are two more stanzas (kernels) available on this machine.
    I am running `2.6.35-6-45.fc14.x86_64`, the default kernel for Fedora 14 64-bit.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如你所见，这台机器上还有两个更多的段落（内核）可用。我正在运行`2.6.35-6-45.fc14.x86_64`，这是Fedora 14 64位的默认内核。
- en: Understanding GRUB 2
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解GRUB 2
- en: GRUB 2 is now being used in many Linux distributions. It is a complete rewrite
    and was created to fix some of the perceived issues in GRUB Legacy. It is still
    being developed, and so the information here may not be complete or up-to-date.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB 2现在被许多Linux发行版使用。这是一个完全的重写，旨在解决GRUB Legacy中的一些问题。它仍在开发中，因此这里的信息可能不完整或过时。
- en: The boot configuration when using GRUB 2 is in the `/boot/grub2/grub.cfg` file.
    You can also refer to it by the `/etc/grub2.cfg` file which is a symbolic link.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 使用GRUB 2时的引导配置在`/boot/grub2/grub.cfg`文件中。你也可以通过`/etc/grub2.cfg`文件来引用它，这是一个符号链接。
- en: 'The following is what the first few lines look like on my Fedora 17 system:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在我的Fedora 17系统上看到的前几行的样子：
- en: '[PRE12]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As the commented line says, this file is not intended to be edited directly.
    Instead, the `/etc/default/grub` file is used in combination with the set of files
    in the `/etc/grub.d` directory.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 正如注释行所说，这个文件不是用来直接编辑的。相反，`/etc/default/grub`文件与`/etc/grub.d`目录中的一组文件一起使用。
- en: '[PRE13]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How to do it...
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: The following are the steps to make changes to the boot configuration when using
    GRUB 2\. Remember, the `grub.cfg` file is not edited directly; changes are instead
    made to the files in the `/etc/grub.d` directory.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用GRUB 2时对引导配置进行更改的步骤。记住，`grub.cfg`文件不是直接编辑的；而是对`/etc/grub.d`目录中的文件进行更改。
- en: Let's change the `timeout` and `rhgb` values. Edit the `/etc/default/grub` file.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们改变`timeout`和`rhgb`的值。编辑`/etc/default/grub`文件。
- en: Change `GRUB_TIMEOUT` to `10`.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`GRUB_TIMEOUT`更改为`10`。
- en: In `GRUB_CMDLINE_LINUX`, remove the `rhgb quiet`. Save the file.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`GRUB_CMDLINE_LINUX`中，删除`rhgb quiet`。保存文件。
- en: 'Create the new file by running the following command:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令创建新文件：
- en: '[PRE14]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The modified `grub.cfg` file should be ready for booting.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改后的`grub.cfg`文件应该已经准备好启动了。
- en: How it works...
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The following is a description of what the scripts in `/etc/grub.d` are for:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`/etc/grub.d`目录中脚本的用途的描述：
- en: '`00_header`: This generates the header for `grub2.cfg` and gets the info from
    the `/etc/default/grub` file'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`00_header`：这生成`grub2.cfg`的标题，并从`/etc/default/grub`文件获取信息'
- en: '`10_linux`: This loads the menu entries'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`10_linux`：这加载菜单条目'
- en: '`20_linux_xen`: This looks for zen kernels to add them to the menu'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`20_linux_xen`：这会查找zen内核并将它们添加到菜单中'
- en: '`20_ppc_terminfo`: This checks for a correct size terminal on PPC systems'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`20_ppc_terminfo`：这在PPC系统上检查正确大小的终端'
- en: '`30_os-prober`: This searches the hard drives for other operating systems so
    it can add them to the boot menu'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`30_os-prober`：这会在硬盘上搜索其他操作系统，以便将它们添加到启动菜单中'
- en: '`40_custom`: This is a template that can be used to add extra entries to the
    boot menu'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`40_custom`：这是一个模板，可用于向引导菜单添加额外的条目'
- en: '`41_custom`: This reads information from `/boot/grub/custom.cfg` if it exists'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`41_custom`：如果存在，这会从`/boot/grub/custom.cfg`中读取信息'
- en: '`README`: This is a file that contains some other useful information'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README`：这是一个包含其他有用信息的文件'
- en: There's more...
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The following is a partial list of the GRUB 2 commands available in the operating
    system:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是操作系统中可用的GRUB 2命令的部分列表：
- en: '`grub2-editenv`: This edits the GRUB environment block'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-editenv`：这编辑GRUB环境块'
- en: '`grub2-fstest`: This is a debug tool for GRUB filesystem drivers'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-fstest`：这是一个用于GRUB文件系统驱动程序的调试工具'
- en: '`grub2-kbdcomp`: This generates a GRUB keyboard layout file'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-kbdcomp`：这将生成一个GRUB键盘布局文件'
- en: '`grub2-menulst2cfg`: This transforms legacy `menu.lst` into `grub.cfg`'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-menulst2cfg`：这将把传统的`menu.lst`转换成`grub.cfg`'
- en: '`grub2-mkfont`: This makes GRUB font files'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkfont`：这将创建GRUB字体文件'
- en: '`grub2-mkimage`: This makes a bootable image of GRUB'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkimage`：这将创建一个可引导的GRUB镜像'
- en: '`grub2-mklayout`: This generates a GRUB keyboard layout file'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mklayout`：这将生成一个GRUB键盘布局文件'
- en: '`grub2-mkpasswd-pbkdf2`: This generates a hashed password for GRUB'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkpasswd-pbkdf2`：这将为GRUB生成一个哈希密码'
- en: '`grub2-mkrelpath`: This makes a system path relative to its root'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkrelpath`：这将使系统路径相对于其根目录'
- en: '`grub2-mkrescue`: This makes a GRUB rescue image'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkrescue`：这将创建一个GRUB救援镜像'
- en: '`grub2-mkstandalone`: This makes a memdisk-based GRUB image'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkstandalone`：这将创建基于内存磁盘的GRUB镜像'
- en: '`grub2-script-check`: This checks `grub.cfg` for syntax errors'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-script-check`：这将检查`grub.cfg`的语法错误'
- en: '`grub2-bios-setup`: This sets up a device to boot using GRUB'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-bios-setup`：这将设置设备使用GRUB引导'
- en: '`grub2-install`: This installs GRUB to a device'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-install`：这将GRUB安装到设备上'
- en: '`grub2-mkconfig`: This generates a GRUB configuration file'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mkconfig`：这将生成一个GRUB配置文件'
- en: '`grub2-mknetdir`: This prepares a GRUB netboot directory'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-mknetdir`：这将准备一个GRUB网络引导目录'
- en: '`grub2-ofpathname`: This finds an OpenBOOT path for a device'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-ofpathname`：这将为设备查找OpenBOOT路径'
- en: '`grub2-probe`: This probes device information for GRUB'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-probe`：这将探测GRUB的设备信息'
- en: '`grub2-reboot`: This sets the default boot entry for GRUB, for the next boot
    only'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-reboot`：这将设置GRUB的默认引导项，仅用于下一次引导'
- en: '`grub2-set-default`: This sets the saved default boot entry for GRUB'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-set-default`：这将设置保存的默认GRUB引导项'
- en: '`grub2-sparc64-setup`: This sets up a device to boot using GRUB'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grub2-sparc64-setup`：这将设置设备使用GRUB引导'
- en: To learn more about GRUB 2, the official web page is [http://www.gnu.org/software/grub/grub.html](http://www.gnu.org/software/grub/grub.html).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于GRUB 2的信息，请访问官方网页[http://www.gnu.org/software/grub/grub.html](http://www.gnu.org/software/grub/grub.html)。
