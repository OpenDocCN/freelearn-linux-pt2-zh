- en: Appendix A. Linux Best Practices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A. Linux最佳实践
- en: 'In this appendix we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本附录中，我们将涵盖以下主题：
- en: Root user versus normal user
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超级用户与普通用户
- en: Running the GUI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行图形用户界面
- en: Creating, verifying, and storing backups
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、验证和存储备份
- en: Permissions and who you are
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限和您的身份
- en: Making backups in real time
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时备份
- en: Environmental variables and shells
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境变量和shell
- en: The best environment
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最佳环境
- en: Using and monitoring a UPS
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用和监控UPS
- en: Being careful when copying files
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制文件时要小心
- en: Verifying archive files and using checksums
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证存档文件并使用校验和
- en: Firewalls, router settings, and security
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙、路由器设置和安全性
- en: What to do if you find an intrusion
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发现入侵应该怎么办
- en: Spaces in filenames
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名中的空格
- en: Using scripts and aliases to save time and effort
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用脚本和别名节省时间和精力
- en: Using scp and ssh with automatic authentication
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用scp和ssh进行自动身份验证
- en: Saving history and taking screenshots
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存历史记录和截图
- en: Space on drives
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 驱动器上的空间
- en: Being open to new ideas
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对新想法持开放态度
- en: Introduction
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: There are many things you can do to get the most out of your Linux system(s).
    Conventional wisdom states that there are many ways to perform a particular task
    on a computer. This is true, however, in reality there is usually only one good
    way to accomplish something. The trick is to be open-minded and see the good when
    it happens.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多事情可以让您充分利用Linux系统。常识告诉我们，在计算机上执行特定任务有很多方法。这是正确的，但实际上通常只有一种好的方法来完成某件事。诀窍在于要开放思想，并在好事发生时看到好处。
- en: Root user versus normal user
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超级用户与普通用户
- en: Running as the root user versus a normal user mostly depends on the environment
    you are in. If each person has their own workstation and is in charge of how it
    is set up, then running as root might be very natural for you (especially if you
    don't make mistakes). However, if you're working in a bank or other situation
    where a typing error might wipe out a million dollar account, running as root
    is certainly not advisable. In these cases, assuming you have the authority, you
    would switch to root only when necessary and only to perform the needed task.
    Using sudo, if it has been configured correctly, is also an option. See [Chapter
    5](ch05.html "Chapter 5. Permissions, Access, and Security"), *Permissions, Access,
    and Security*, for more information on sudo.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作为root用户和普通用户运行主要取决于您所处的环境。如果每个人都有自己的工作站，并且负责设置它，那么对您来说，作为root运行可能非常自然（尤其是如果您不犯错误）。但是，如果您在银行或其他可能因打字错误而导致数百万美元账户被清空的情况下工作，那么作为root显然是不明智的。在这些情况下，假设您有权限，只有在必要时才切换到root，并且只执行所需的任务。如果已正确配置，还可以使用sudo。有关sudo的更多信息，请参见[第5章](ch05.html
    "第5章。权限、访问和安全性")，“权限、访问和安全性”。
- en: Another thing to keep in mind is how comfortable you are running as root. If
    you are error prone or nervous, and/or have caused serious damage in the past
    running as root, you obviously need to take great care when doing so. On the other
    hand, if you consistently run as root and don't ever make a mistake then that
    is great. It is certainly more efficient.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 还要记住的一件事是，您作为root运行时的舒适程度。如果您容易出错或紧张，并且/或者过去曾因作为root而造成严重损害，那么显然在这种情况下需要非常小心。另一方面，如果您一直作为root运行并且从未犯过错误，那就太好了。这肯定更有效率。
- en: 'A special note to system administrators: I have seen this on more than one
    occasion and so will mention it here. This applies to both novice and seasoned
    system administrators.It is customary for you (and maybe your manager) to be the
    only ones with root authority on the systems. This sounds like a good idea, right?
    It might avoid having someone make a mistake that could take out an entire project.
    And, it just feels good being the person in charge. People come to you when they
    need something changed and you happily do it. Then they come again, and again,
    and again. At some point you realize you can''t get any of your work done because
    of all the requests, and that they can''t have their work done if you are not
    around. So you try and set up sudo. Now it''s even worse; every time you think
    you have it set up to handle anything, someone may come to you if it fails again.
    So what do you do?'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 特别提示给系统管理员：我在不止一个场合看到过这种情况，所以在这里提一下。这适用于新手和经验丰富的系统管理员。您（也许还有您的经理）通常是系统上唯一具有root权限的人。这听起来是个好主意，对吧？这样可以避免有人犯错误导致整个项目崩溃。而且，成为负责人感觉很好。当别人需要更改时，他们会来找您，而您也很乐意帮忙。然后他们再来，再来，再来。在某个时刻，您意识到如果不处理这些请求，就无法完成任何工作，而他们如果没有您在身边也无法完成工作。所以您尝试设置sudo。现在情况更糟了；每次您认为已经设置好处理任何事情时，如果再次失败，有人可能会再次来找您。那么您该怎么办呢？
- en: You may be able to give selected users root access. Use your instincts. For
    example, watch how the individual users type. Are they comfortable when using
    the command line? Do they type with authority, or seem scared of the machine?
    If a particular user consistently uses the GUI to perform tasks that are done
    much more efficiently on the command line, then I would see that as a strong warning
    sign.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能可以为选定的用户提供root访问权限。凭直觉行事。例如，观察个别用户的打字方式。他们在使用命令行时感到舒适吗？他们打字是否有权威性，还是对机器感到害怕？如果某个特定用户一直使用图形用户界面执行在命令行上更有效的任务，那么我会将其视为一个强烈的警告信号。
- en: In time you will get a feel of who can be trusted with root access and be able
    to grant it to them. If, of course, someone does make a mistake, then it should
    not be the end of the world. They can't really hurt the entire project, because
    you have been creating and verifying daily backups, right? You can restore the
    damage and take root back from them. Note, one mistake is all it takes. I would
    not trust that user with root again.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，您将对谁可以信任root访问权限有所了解，并能够授予他们访问权限。当然，如果有人犯了错误，那也不是世界末日。他们实际上无法对整个项目造成严重损害，因为您一直在创建和验证每日备份，对吧？您可以恢复损坏并从他们那里收回root权限。请注意，只需要一个错误。我不会再信任那个用户拥有root权限。
- en: Running the GUI
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行图形用户界面
- en: While I am somewhat quick to trust my users with root access, and use it myself
    most of the time, I absolutely do not recommend running the GUI this way. Some
    distributions won't even allow it. By running the GUI as root, you are in effect
    running a lot of other things as root, such as your browser and mail programs.
    Not a good idea at all.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我有点快速地信任我的用户拥有root访问权限，并且大部分时间我自己也使用root，但我绝对不建议以这种方式运行GUI。有些发行版甚至不允许这样做。通过以root身份运行GUI，实际上你正在以root身份运行很多其他东西，比如你的浏览器和邮件程序。这绝对不是一个好主意。
- en: Here is my preferred environment on a Linux or UNIX system. I use Fedora, but
    these ideas should work on most other distributions. After installing a system,
    one of the first things I do is change it so that the machine comes up in command
    line mode and not in a GUI. This way if a graphics problem has occurred, it is
    much easier to diagnose and correct. I also have a choice in which GUI to bring
    up by running the appropriate `startx` type command. At the command prompt, I
    log in as a normal or guest user. On my Fedora 14 system I then run `startx`,
    which brings up Gnome 2.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在Linux或UNIX系统上的首选环境。我使用Fedora，但这些想法应该适用于大多数其他发行版。安装系统后，我做的第一件事之一是更改系统，使得机器以命令行模式而不是图形界面启动。这样，如果发生图形问题，诊断和纠正就容易得多。我还可以选择通过运行适当的`startx`类型命令来启动哪个图形界面。在命令提示符下，我以普通用户或访客用户身份登录。在我的Fedora
    14系统上，我然后运行`startx`，这将启动Gnome 2。
- en: After the GUI has come all the way up, I open a terminal session and run `su`
    to root. I check to make sure the machine can ping, and usually do a few more
    sanity checks. If all is well, I then run my `jset` script. It performs some desktop
    customization such as opening terminal windows into their proper directories,
    and reminding me of what command to run (I have written a lot of programs and
    so really need this). It also mounts my USB devices, or warns me if there is a
    problem. I then position the terminal sessions right where I want them to be.
    I am now set to get some work done.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形界面完全启动后，我打开一个终端会话并运行`su`到root。我检查确保机器可以ping通，并通常进行一些其他的合理性检查。如果一切正常，我然后运行我的`jset`脚本。它执行一些桌面定制，比如将终端窗口打开到它们正确的目录，并提醒我要运行什么命令（我写了很多程序，所以真的需要这个）。它还会挂载我的USB设备，或者在出现问题时警告我。然后我将终端会话定位到我想要的位置。现在我可以开始工作了。
- en: 'The following is a script similar to the one that I use to set up my desktop
    after booting up:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个类似于我在启动后用来设置我的桌面的脚本：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating, verifying, and storing backups
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建、验证和存储备份
- en: I cannot stress how important it is to create backups of your system(s). At
    a minimum, copy your personal and business data, and configuration files to a
    safe place. Some people backup everything, even the operating system itself. Whatever
    you decide to do, make a plan and stick to it. As mentioned in [Chapter 8](ch08.html
    "Chapter 8. Working with Scripts"), *Working with Scripts*, this is a great time
    to design and use a script. Use `crontab` if desired, to automate the periodic
    taking of backups.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我无法强调创建系统备份的重要性有多大。至少，将您的个人和业务数据以及配置文件复制到安全的地方。有些人甚至备份操作系统本身。无论您决定做什么，都要制定计划并坚持下去。正如[第8章](ch08.html
    "第8章。使用脚本")中所提到的，*使用脚本*，现在是设计和使用脚本的好时机。如果需要，使用`crontab`自动执行定期备份。
- en: The `tar` command is great for backing up entire directories. Note that it will
    get any hidden files as well. You can exclude specific directories if desired,
    and do quite a few other things with `tar`. The following are the commands similar
    to the ones I use to backup my `/home/guest1` directory.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`tar`命令非常适合备份整个目录。请注意，它也会获取任何隐藏文件。如果需要，您可以排除特定目录，并且可以使用`tar`执行其他一些操作。以下是类似于我用来备份`/home/guest1`目录的命令。'
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '`tsback1` is a text file containing the number to start with.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`tsback1`是一个包含要从中开始的数字的文本文件。'
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following is the start of the script:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是脚本的开始：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Remember to include the directory to be backed up as the last thing on the line.
    This first changes the `/home` directory, because for `tar`, you want to be in
    the parent directory of the sub-directory to be backed up. The next line sets
    the `NUM` variable to the next one to use. The last line creates the `tar` file
    directly onto my USB external drive in the appropriate directory.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住将要备份的目录作为行中的最后一项。首先更改`/home`目录，因为对于`tar`，您希望在要备份的子目录的父目录中。下一行将`NUM`变量设置为要使用的下一个变量。最后一行直接在我的USB外部驱动器中的适当目录中创建`tar`文件。
- en: I attempt to be very careful while creating backups. The script I actually use
    to back things up does quite a few other things. For example, it checks to make
    sure my USB external drive is really there, and can be written to (it should also
    check if there is enough free space on the drive, that's a TODO of mine). If the
    code determines the drive is not there or some other error occurs, a really loud
    and obnoxious alarm goes off. And, if I have not responded to this alarm in 5
    minutes, an email is sent to my cell phone. How's that for paranoid?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我在创建备份时尝试非常小心。我实际用来备份东西的脚本还做了很多其他事情。例如，它会检查我的USB外部驱动器是否真的存在，并且可以被写入（它还应该检查驱动器上是否有足够的可用空间，这是我的TODO之一）。如果代码确定驱动器不存在或发生其他错误，就会发出非常响亮和讨厌的警报。如果我在5分钟内没有回应这个警报，就会向我的手机发送电子邮件。这对于偏执狂来说怎么样？
- en: Making backups is great. However, if the backup is unusable, it doesn't do you
    much good. So, it is wise to verify your backups from time to time. How often
    do this is up to you and your comfort level. My script routinely copies the backup
    files to another machine, which then extracts them and runs a few tests. If anything
    doesn't look quite right, another alarm goes off. This is all done automatically
    in scripts.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 备份是很好的。但是，如果备份无法使用，那就没有多大用处。因此，定期验证备份是明智的。多久验证一次取决于您和您的舒适水平。我的脚本定期将备份文件复制到另一台机器，然后解压并运行一些测试。如果有任何不对劲的地方，就会发出另一个警报。所有这些都是在脚本中自动完成的。
- en: Okay, we are now making backups and verifying them. What about storing them?
    Suppose you have everything just right, all your files are copied and verified,
    and they are all located in the same place such as your home or office. And now
    something unspeakable occurs, such as a fire or theft. I agree, there is a very
    low chance of this happening, but it still could. I, for one, do not want to try
    and reproduce the million lines of code I have written since 1982 and so have
    backups all over the place, including off-site. In some of the companies I have
    worked at, the files were copied to tape, CDs, and/or hard drives, and stored
    in a walk-in fireproof safe. Pretty good idea.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，我们现在正在进行备份和验证。那么存储呢？假设你已经把一切都搞定了，所有的文件都被复制和验证了，它们都位于同一个地方，比如你的家或办公室。然后发生了一些不可言喻的事情，比如火灾或盗窃。我同意，这种事情发生的可能性非常低，但它仍然可能发生。至少我不想尝试自1982年以来编写的百万行代码，所以我在各个地方都有备份，包括外部存储。在我工作过的一些公司中，文件被复制到磁带、CD和/或硬盘上，并存放在一个防火的步入式保险柜中。非常好的主意。
- en: Permissions and who you are
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限和你的身份
- en: This mostly pertains to system administrators. As a system administrator, you
    probably do most of your work as the root user. You set up guest accounts and
    quotas, and maybe even create scripts, and so on. It is sometimes easy to forget
    that your users don't have root authority.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这主要涉及系统管理员。作为系统管理员，你可能会大部分时间以root用户的身份进行工作。你设置访客账户和配额，甚至可能创建脚本等等。有时很容易忘记你的用户没有root权限。
- en: With this in mind, be sure to check out your additions and changes from the
    user's perspective. Become that user with `su` and make sure you can access everything
    normally. This will save you a lot of time, and maybe even embarrassment, if you
    find a problem before your users do.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，一定要从用户的角度检查你的添加和更改。用`su`成为那个用户，确保你可以正常访问一切。这将为你节省很多时间，甚至可能避免尴尬，如果你在用户之前发现了问题。
- en: Making backups in real time
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时备份
- en: When editing scripts and other files, it is a good idea to make numbered backups.
    Nothing is more frustrating than having something work, then break after some
    changes, and then not be able to get it working again quickly. With numbered backups
    you can always go back to a previous version that worked, and then use `diff`
    to find the mistake. I sure learned this one the hard way.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑脚本和其他文件时，最好做一些编号的备份。没有什么比让一些东西工作，然后在做了一些更改后出现问题，然后不能快速地让它重新工作更令人沮丧的了。有了编号的备份，你总是可以回到之前工作的版本，然后使用`diff`找到错误。我确实是以最艰难的方式学到了这一点。
- en: 'The following is a backup script I wrote for the users of this book (the one
    I normally use is written in C). It is named `mkbak`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我为本书的用户编写的备份脚本（我通常使用的是用C编写的）。它的名字是`mkbak`：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This script comes free of charge, but with some limitations. It will not handle
    filenames with blanks, and only works on files in the current directory. Note
    that you can `cd` to the directory you want first and then run it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本是免费的，但有一些限制。它不能处理带空格的文件名，只能处理当前目录中的文件。请注意，你可以先`cd`到你想要的目录，然后再运行它。
- en: 'The following is the script I use to backup the current book file I am working
    on:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我用来备份当前正在工作的书籍文件的脚本：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: While editing the file (the `FN` variable), I will manually run this from time-to-time,
    usually after a lot of changes, and definitely just before I get up to take a
    break or whatever.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑文件（`FN`变量）时，我会不时手动运行这个脚本，通常是在做了很多更改之后，以及在我起身休息之前。
- en: Environment variables and shells
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境变量和shell
- en: One thing that comes up a lot during system administration is the monitoring
    of several machines. It's not uncommon to have 5 or 6 `ssh` sessions open at a
    time, more if you have multiple monitors. It's crucial to know which session is
    running on which machine, as typing the right command on the wrong machine can
    be a disaster. For this reason and others, I recommend using a custom `PS1` variable
    when logging into a remote machine.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统管理中经常遇到的一个问题是监控多台机器。同时打开5或6个`ssh`会话并不罕见，如果有多个显示器的话，会更多。知道哪个会话在哪台机器上运行是至关重要的，因为在错误的机器上输入正确的命令可能会造成灾难。因此，出于这个原因和其他原因，我建议在登录到远程机器时使用自定义的`PS1`变量。
- en: 'This was mentioned in [Chapter 1](ch01.html "Chapter 1. Using the Terminal
    / Command Line"), *Using the Terminal / Command Line*, during the discussion of
    environment variables. The following is what my `PS1` variable looks like on my
    machine running Fedora 17:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这在[第1章](ch01.html "第1章。使用终端/命令行")中提到，*使用终端/命令行*，在讨论环境变量时。以下是我在运行Fedora 17的机器上`PS1`变量的样子：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Simple, and not too cluttered. The following is what `PS1` looks like on my
    other machine when I log into it:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 简单，而不会太混乱。当我登录到另一台机器时，`PS1`的样子如下：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It should be pretty hard to mix those up.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 应该很难混淆它们。
- en: While we are on the subject of environment variables, there is something else
    to keep in mind. When you make a change to your `.bashrc` file and source it,
    the changes are only visible in that session (as well as any newly opened sessions).
    In order to see the change in other existing sessions you must source it in them
    as well. It would be rather cool if there was a way to make the changes visible
    in every session with just one command, however, I do not believe that is possible.
    Of course, one could argue that `shutdown -r` now will do it.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到环境变量时，还有一些事情需要记住。当你对`.bashrc`文件进行更改并进行源代码化时，这些更改只在该会话中可见（以及任何新打开的会话）。为了在其他现有会话中看到更改，你必须在其中也进行源代码化。如果有一种方法可以通过一个命令使更改在每个会话中可见，那将是相当酷的，然而，我不相信这是可能的。当然，有人可能会说`shutdown
    -r`现在可以做到。
- en: The best environment
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最好的环境
- en: 'What works best for one person may not work the best for another. However,
    I know that I am most productive when using a fast desktop system with plenty
    of memory and storage, and two big displays. The following is my typical set up:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对一个人最好的可能对另一个人不是最好的。然而，我知道当我使用一个快速的桌面系统，有足够的内存和存储空间，以及两个大显示屏时，我是最高效的。以下是我的典型设置：
- en: 'On my left-hand side display, I put the scripts, and the following programs
    that I use to monitor the system:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的左侧显示器上，我放置了脚本和以下用于监控系统的程序：
- en: A disk space monitoring program written in Java and C
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用Java和C编写的磁盘空间监控程序
- en: A program that monitors my **Uninterruptible Power Supply** (**UPS**), also
    written in Java and C
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个监视我的**不间断电源**（**UPS**）的程序，也是用Java和C编写的
- en: A script that pings the network once a minute and logs any failures
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个每分钟一次对网络进行ping并记录任何故障的脚本
- en: A program that uses `tail -f /var/log/messages` to monitor kernel messages
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个使用“tail -f /var/log/messages”来监控内核消息的程序
- en: My backup script that runs every night at 3 a.m.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的备份脚本每天凌晨3点运行一次。
- en: A "poor man's" intrusion detection script (more on that later)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个“穷人版”入侵检测脚本（稍后详细介绍）
- en: A script that e-mails the system status to my cell phone twice a day
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个每天两次向我的手机发送系统状态的脚本
- en: I have the `Computer` and `Guest` folder icons visible and easy to access
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我将“计算机”和“访客”文件夹图标设置为可见并易于访问
- en: Any `ssh` sessions to remote machines
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何连接到远程机器的“ssh”会话
- en: And a few others that are too boring to mention
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有一些其他太无聊不值得一提的东西
- en: All of these are set to remain visible in all workspaces. Speaking of workspaces,
    I usually have four of them. I always place the same programs and terminal sessions
    in the same workspace, and in about the same place on the screen. This way, I
    can get to where I want to be very quickly. Have you ever been in a situation
    where your team is about to miss an important deadline, and you are being forced
    to watch and wait as someone else wastes a lot of time trying to find or do something
    on their system? You do not ever want to be that person.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都设置为在所有工作区中保持可见。说到工作区，我通常有四个。我总是将相同的程序和终端会话放在相同的工作区，并且在屏幕上大致相同的位置。这样，我可以非常快速地到达想要去的地方。您是否曾经处于一个情况，您的团队即将错过重要的截止日期，而您被迫观望，因为其他人在系统上浪费了大量时间寻找或做某事？您绝对不想成为那个人。
- en: 'On the right-hand side display I do most of my actual work. The following is
    how my workspaces tend to be laid out:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧显示器上，我进行大部分实际工作。以下是我的工作区布局方式：
- en: In Workspace 1 are a couple of terminals. Those are there and ready in case
    I need to do something right away
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工作区1有两个终端。它们已经准备好，以防我需要立即做一些事情
- en: Workspace 2 is normally used for program development. I do C, Java, and script
    development here
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作区2通常用于程序开发。我在这里进行C、Java和脚本开发
- en: Workspace 3 is where I am currently typing this book in my custom written text
    editor (which will eventually be imported into `LibreOffice`)
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作区3是我目前正在使用自定义文本编辑器输入这本书的地方（最终将被导入到“LibreOffice”中）
- en: Workspace 4 is where I have my webmail client
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作区4是我放置我的网络邮件客户端的地方
- en: Speaking of browsing, I tend to open those on the left-hand side display, and
    in whatever workspace that goes with what I am currently working on. This is very
    fast and efficient, and is also easier to cut and paste when needed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 说到浏览，我倾向于在左侧显示器上打开它们，并在与我当前工作相关的工作区中打开。这样非常快捷高效，而且在需要时也更容易剪切和粘贴。
- en: Not all of us have the luxury of fast machines or dual monitors, particularly
    at our jobs, where it sometimes seems to be more important to management to save
    money, instead of giving the employees what they need to be productive. All I
    can say to that, is try your best to get what you need to do your job as efficiently
    as possible.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有人都有快速机器或双显示器的奢侈条件，特别是在我们的工作中，有时似乎更重要的是为了节省成本，而不是给员工提供他们需要提高生产力的条件。我能说的就是，尽力获取您需要以尽可能高效地完成工作。
- en: Using and monitoring a UPS
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用和监控UPS
- en: In my opinion it is imperative that a UPS be used on at least your primary workstation.
    All kinds of bad things can happen to the hardware if the power suddenly goes
    off (or worse, browns out), not to mention what might happen to your data. With
    modern journaling filesystems, I realize data loss is somewhat rare, but why take
    the chance? Also, I really just don't like to reboot. Ever.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，至少应该在主要工作站上使用UPS。如果电源突然断开（或更糟糕的是，变压器故障），硬件可能会出现各种问题，更不用说数据可能会发生什么了。我意识到，使用现代日志文件系统，数据丢失是相当罕见的，但为什么要冒这个险呢？而且，我真的不喜欢重新启动。永远不喜欢。
- en: Depending on your situation, try to get the best UPS you can afford. You want
    one that will run your system for a long time and also power your display, modem,
    router, and external drives if you have them. This way, if the power goes out
    for just a short time you won't lose anything, and won't have to wait for everything
    to come back up.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的情况，尽量购买您能负担得起的最好的UPS。您需要一个能够长时间运行系统并为您的显示器、调制解调器、路由器和外部驱动器提供电源的UPS。这样，如果电源短暂中断，您就不会丢失任何数据，并且不必等待所有设备重新启动。
- en: There are many different UPS brands available today. I am somewhat partial to
    the **American Power Conversion** (**APC**) devices. I have several of them, and
    they work well with Linux. Be sure to get one with a phone-connector to USB port,
    as the old-style serial port units do not work properly.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 今天有许多不同品牌的UPS可用。我对**美国电源转换**（**APC**）设备有些偏爱。我有几个，它们在Linux上运行良好。确保购买一个带有电话连接器到USB端口的UPS，因为旧式串行端口的设备无法正常工作。
- en: The `apcupsd` daemon can be used to monitor the UPS. If your distribution does
    not already have it, the package can be installed.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: “apcupsd”守护程序可用于监控UPS。如果您的发行版尚未安装它，可以安装该软件包。
- en: If using Fedora, run `yum -y install apcupsd` (substitute your package installer
    as appropriate)
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用Fedora，请运行“yum -y install apcupsd”（根据需要替换您的软件包安装程序）
- en: Comment out the `WALL` statement in the `/etc/apcupsd/apccontrol` file to keep
    annoying messages from being broadcasted to every terminal
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“/etc/apcupsd/apccontrol”文件中注释掉“WALL”语句，以防止烦人的消息被广播到每个终端
- en: Run `apcaccess status` to query the UPS
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行“apcaccess status”来查询UPS
- en: There's quite a bit more you can do with `apcupsd`, for more information check
    its website at [http://www.apcupsd.com](http://www.apcupsd.com). This also lists
    some UPS units that might not be as compatible with Linux as the ones I have.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用`apcupsd`做更多的事情，更多信息请查看它的网站[http://www.apcupsd.com](http://www.apcupsd.com)。这也列出了一些可能与Linux不兼容的UPS设备。
- en: One more thing, you will probably want to use the auto-shutdown feature of the
    UPS. It can be set up to automatically shutdown your machine if the power has
    been out for too long. Most units allow you to set the amount of time to stay
    running, before shutting down. Remember that the longer the UPS runs on the batteries,
    the shorter their life span will be.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事，你可能想要使用UPS的自动关机功能。它可以在停电时间过长时自动关闭你的机器。大多数设备允许你设置在关闭之前运行的时间。请记住，UPS在电池上运行的时间越长，它们的寿命就会越短。
- en: Being careful when copying files
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在复制文件时要小心
- en: When copying files to a directory, make sure it really is a directory. This
    happens enough for me to mention it, and I have to admit I still almost do it
    from time-to-time. It is quite easy to copy a lot of files to what you believe
    is a directory, but isn't. The result is that just the last file that was copied
    will be there, and if you don't still have the source files, they might now be
    lost. Use the `file` command to verify whether the target really is a directory
    before you copy the files.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在将文件复制到目录时，请确保它确实是一个目录。这种情况发生得足够频繁，以至于我不得不提到它，我必须承认我有时仍然会犯这个错误。很容易将许多文件复制到你认为是目录的地方，但实际上并不是。结果就是只有最后一个被复制的文件会存在，如果你没有保留源文件，它们可能会丢失。在复制文件之前，使用`file`命令验证目标是否真的是一个目录。
- en: Verifying archive files and using checksums
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证存档文件并使用校验和
- en: One thing that comes up a lot is mistakes that go unnoticed in the creation
    of `tar` or `zip` archives that are going to be sent to another person or site.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 经常出现的一件事是在创建将要发送给其他人或站点的`tar`或`zip`存档时，会发现未被注意到的错误。
- en: 'The following are the steps that should be followed:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是应该遵循的步骤：
- en: Copy the files to an appropriate directory (make sure it really is a directory
    first).
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件复制到适当的目录（确保它确实是一个目录）。
- en: Use `zip` or `tar` to compress and create the archive.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`zip`或`tar`进行压缩和创建存档。
- en: Use the `tell` or `list` option to be sure it looks correct. For TAR it's `tar
    -tvzf filename.gz` and for ZIP it's `unzip -l filename.zip`.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`tell`或`list`选项确保它看起来正确。对于TAR，是`tar -tvzf filename.gz`，对于ZIP，是`unzip -l filename.zip`。
- en: Run the `sum` command against your file, and then send the file to where it
    needs to go.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对你的文件运行`sum`命令，然后将文件发送到需要去的地方。
- en: 'If using `scp`, use `ssh` to run the `sum` command on the file on the remote
    system like the following:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用`scp`，请使用`ssh`在远程系统上运行`sum`命令，如下所示：
- en: '[PRE7]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The two `sum` values should match.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个`sum`值应该匹配。
- en: If using e-mail, run `sum` on your end, and send the result along with the e-mail.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用电子邮件，在你的端上运行`sum`，并将结果与电子邮件一起发送。
- en: A piece of advise for developers; suppose you are creating an archive of a programming
    project. To make absolutely sure you have copied every file it needs, create the
    archive and then copy it to another machine. Un-compress and build it as you normally
    would. An error will occur if a needed file is missing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 给开发人员的一个建议；假设你正在创建一个编程项目的存档。为了确保你已经复制了它所需的每个文件，创建存档，然后将其复制到另一台机器上。像平常一样解压并构建它。如果缺少所需的文件，将会出现错误。
- en: Firewalls, router settings, and security
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙、路由器设置和安全性
- en: Firewalls were covered in [Chapter 5](ch05.html "Chapter 5. Permissions, Access,
    and Security"), *Permissions, Access, and Security*, and so this will just be
    a brief recap. If you are running a home system and using a good router, the default
    settings for `iptables` is probably all you need. It may require some tweaking,
    for example, to use a scanner, but for the most part you are probably safe from
    hackers. On the other hand, if you are the system administrator for a large company,
    `iptables` is probably not enough. I would investigate using a hardware intrusion
    appliance or some other method, to insure data and system security.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙在[第5章](ch05.html "第5章。权限、访问和安全")中有所涉及，*权限、访问和安全*，所以这只是一个简要的回顾。如果你运行的是家庭系统并且使用一个好的路由器，`iptables`的默认设置可能已经足够了。它可能需要一些调整，例如使用扫描仪，但大部分时间你可能已经免受黑客的攻击。另一方面，如果你是一个大公司的系统管理员，`iptables`可能不够用。我会调查使用硬件入侵设备或其他方法，以确保数据和系统的安全。
- en: It is highly suggested that a router with a built-in firewall be used at all
    times. By no means would I connect a system directly to the Internet. While a
    typical Linux system may survive this, I have seen Windows boxes get infected
    with a virus in less than 30 minutes.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议始终使用带有内置防火墙的路由器。我绝不会直接将系统连接到互联网。尽管典型的Linux系统可能会幸存下来，但我曾经看到Windows系统在不到30分钟内感染了病毒。
- en: The default router settings are probably already strong enough to keep out the
    typical hacker. To be sure, and just to get an idea of what is going on inside
    your router, it's a good idea to login and check everything from time-to-time.
    On most routers, pointing your browser to `192.168.1.1` will bring up the login
    screen. In most cases, an ID and password are required.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的路由器设置可能已经足够强大，可以防止典型的黑客入侵。为了确保，也为了了解路由器内部发生了什么，最好定期登录并检查一切。在大多数路由器上，将浏览器指向`192.168.1.1`会弹出登录界面。在大多数情况下，需要输入ID和密码。
- en: 'The `who` command can be used in Linux to show the username, tty, date, time
    and IP address of each user on the system, as shown in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`who`命令可以在Linux中用来显示系统上每个用户的用户名、tty、日期、时间和IP地址，如下面的截图所示：'
- en: '![Firewalls, router settings, and security](img/3008OS_A_01.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![防火墙、路由器设置和安全性](img/3008OS_A_01.jpg)'
- en: Here is another thing you can do to help prevent an intrusion. It is a good
    idea to deny root access by `ssh`/`scp` because hackers will usually attempt to
    break in as root. This can be accomplished by editing the `/etc/ssh/sshd_config`
    file. Locate the line that says `#PermitRootLogin yes` and change it to `PermitRootLogin
    no`. Don't forget to remove the `#` (pound sign). You will also need to restart
    `sshd`. Now, any attempt to login as root will fail. I have all of my machines
    set up this way as an added precaution.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一件事可以帮助防止入侵。拒绝`ssh`/`scp`的root访问是个好主意，因为黑客通常会尝试以root身份入侵。这可以通过编辑`/etc/ssh/sshd_config`文件来实现。找到一行写着`#PermitRootLogin
    yes`的地方，将其改为`PermitRootLogin no`。不要忘记去掉`#`（井号）。你还需要重新启动`sshd`。现在，任何以root身份登录的尝试都将失败。我已经将我所有的机器都设置成了这样，作为额外的预防措施。
- en: One last thing, any time someone logs (or attempts to log) into your system,
    a record is made of it. On Fedora this is put into the `/var/log/secure` file.
    You can check this file from time-to-time, or monitor it by using the `tail -f
    /var/log/secure` command.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一件事，每当有人登录（或尝试登录）到你的系统时，都会有记录。在Fedora上，这会记录在`/var/log/secure`文件中。你可以不时地检查这个文件，或者使用`tail
    -f /var/log/secure`命令来监视它。
- en: 'And now for a bonus. The following is a simple script I use to watch for unauthorized
    access to my machine:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是一个额外的奖励。以下是一个我用来监视对我的机器的未经授权访问的简单脚本：
- en: '[PRE8]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Basically what this does is check every 5 seconds to see if the number of users
    have changed. If it has increased, the `jalert5` script is run in the background.
    It plays a really obnoxious WAV file every 5 seconds until I turn it off. This
    will also fire every time you open a new session, so you will probably want to
    run it last after a boot up.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，这个脚本每5秒检查一次用户数量是否发生了变化。如果增加了，`jalert5`脚本将在后台运行。它每5秒播放一个非常讨厌的WAV文件，直到我关闭它。这也会在每次打开新会话时触发，所以你可能会希望在启动后最后运行它。
- en: What to do if you find an intrusion
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果发现入侵怎么办
- en: Suppose you have found that an intrusion has occurred. What should you do?
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你发现发生了入侵。你应该怎么办？
- en: Tip
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These instructions are for your machine or for one you have total responsibility
    for. If this occurs on a machine where you work, immediately follow whatever procedures
    your company has in place for a security event.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些说明适用于你的机器或你完全负责的机器。如果这发生在你工作的机器上，立即按照公司针对安全事件的任何程序进行操作。
- en: 'Quick action is needed if you suspect a break-in. Run the `who` command or
    `cat /var/log/secure` and check the output. If you see a suspicious IP address,
    take the following actions:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果怀疑发生了入侵，需要迅速采取行动。运行`who`命令或`cat /var/log/secure`并检查输出。如果看到可疑的IP地址，采取以下行动：
- en: If this were a very important machine with critical data on it, I would pull
    out the Ethernet wire(s) and shut it down now. I would then boot up from rescue
    media and try to determine if anything bad had occurred. Checking the date and
    time they got in (from the `who` command) could give you an idea of how much damage
    they may have caused.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这是一台非常重要的机器，上面有关键数据，我会立即拔掉以太网线并立即关闭它。然后我会从救援介质启动，尝试确定是否发生了任何不好的事情。检查他们进入的日期和时间（从`who`命令）可能会让你知道他们可能造成了多大的破坏。
- en: If this were my home system, I would first pull the Ethernet wire. I would then
    run `ps auxw` to a file to capture what is going on in the system right now. I
    would copy this file to some other machine or device and then shutdown the system.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这是我的家庭系统，我会首先拔掉以太网线。然后我会运行`ps auxw`命令将系统当前的运行情况保存到文件中。我会将这个文件复制到其他机器或设备上，然后关闭系统。
- en: By examining the `ps` output and looking at the `tty` value I could probably
    determine what programs they were running, if any. This might point to what they
    were trying to accomplish by getting into the system.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查`ps`输出并查看`tty`值，我可能可以确定他们正在运行的程序，如果有的话。这可能会指出他们试图通过进入系统来实现什么目的。
- en: Obviously, if someone does get into your system, they most likely did it by
    guessing or somehow determining a password. I would probably reset all the passwords
    to something much harder to crack, and then inform my users to pick better ones.
    Or probably assign them myself.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，如果有人真的进入了你的系统，他们很可能是通过猜测或某种方式确定了密码。我可能会将所有密码重置为更难破解的密码，然后告诉我的用户选择更好的密码。或者可能自己分配密码。
- en: Okay, so at least one person reading this is thinking why pull out the Ethernet
    wire? Why not just bring down the interface? Well, because a shrewd attacker is
    going to think of that, and as soon as he has access, he is going to put code
    on the system to automatically bring the interface back up if it goes down. He
    may even put a timer on it, or hide it in some other way.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，至少有一个人在读这篇文章时会想为什么要拔掉以太网线？为什么不只是关闭接口？因为一个狡猾的攻击者会考虑到这一点，一旦他获得了访问权限，他就会在系统上自动放置代码，以便在接口关闭时自动重新打开它。他甚至可能给它加上一个定时器，或以其他方式隐藏它。
- en: It is possible that an attacker had time to do all kinds of things. He may have
    even been able to modify the `who`, `ps`, and other commands to make it almost
    impossible to track what he did (or is still doing) from the running system. With
    this in mind, you still need to shutdown asap and then boot up with a rescue disk
    or equivalent. Some of the things to look at are the commands such as `ps` and
    `who`. Run the `file` command, it should show them as being a binary executable
    and not a shell script. If they are shell scripts, you may discover the attacker
    has renamed the executable files with a `.` to hide them, and then wrapped them
    around a script to help cover up his presence. There are many other ways to hide
    as well.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可能有时间做各种事情。他甚至可能修改了`who`、`ps`和其他命令，使得几乎不可能从运行的系统中跟踪他所做的事情（或仍在做的事情）。考虑到这一点，你仍然需要尽快关闭系统，然后使用救援盘或等效物重新启动。需要查看的一些事情是`ps`和`who`等命令。运行`file`命令，它应该显示它们是二进制可执行文件，而不是shell脚本。如果它们是shell脚本，你可能会发现攻击者已经用`.`重命名了可执行文件，以隐藏它们，然后将它们包装在一个脚本中，以帮助掩盖他的存在。还有许多其他隐藏的方法。
- en: Spaces in filenames
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件名中的空格
- en: When generating files for yourself or other people, do not include blanks in
    the filename. This can cause a lot of problems on Linux and UNIX machines. If
    necessary, use capital letters and/or underscores. Do not use parentheses or other
    special characters either. I was really amazed the first time I downloaded a file
    using Firefox, as it inserted parentheses to differentiate it from another file
    of the same name. I appreciate the fact that it didn't just over-write the original
    file, but using parentheses was and is a really bad idea.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在为自己或其他人生成文件时，不要在文件名中包含空格。这可能会在Linux和UNIX机器上引起很多问题。如果必要，使用大写字母和/或下划线。也不要使用括号或其他特殊字符。我第一次使用Firefox下载文件时真的很惊讶，因为它插入了括号以将其与同名文件区分开。我很感激它没有简单地覆盖原始文件，但使用括号是一个非常糟糕的主意。
- en: Using scripts and aliases to save time and effort
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚本和别名来节省时间和精力
- en: One thing I see a lot of in the field is people wasting time and effort typing
    the same things over and over again. Don't do this. Use aliases and scripts. Don't
    think about how much time you might spend writing the script, think about how
    much time you will save by being able to use it all the time. You might also be
    able to incorporate it into another script later on (especially if it was written
    well, to begin with). Also, having these available should help with meeting deadlines.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我在现场看到的一件事是，人们浪费时间和精力一遍又一遍地输入相同的东西。不要这样做。使用别名和脚本。不要考虑编写脚本可能需要多少时间，而是考虑通过能够一直使用它来节省多少时间。您可能还可以在以后将其合并到另一个脚本中（特别是如果一开始就写得很好）。此外，有了这些可用的东西应该有助于满足截止日期。
- en: Using scp and ssh with automatic authentication
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动身份验证的scp和ssh
- en: Follow these steps to allow the use of `ssh`/`scp` without having to enter a
    password. You will need to be root.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤允许使用`ssh`/`scp`而无需输入密码。您需要是root用户。
- en: First, make sure the client has used `ssh` at least once. This will create the
    proper directory that is needed.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，确保客户端至少使用过`ssh`。这将创建所需的正确目录。
- en: On the master machine run the `ssh-keygen -t rsa` command. This will create
    some necessary files.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主机上运行`ssh-keygen -t rsa`命令。这将创建一些必要的文件。
- en: If the `/root/.ssh/authorized_keys` file does not already exist on the client,
    you can run `scp /root/.ssh/id_rsa.pub <hostname>:/root/.ssh/authorized_keys`.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果客户端上不存在`/root/.ssh/authorized_keys`文件，您可以运行`scp /root/.ssh/id_rsa.pub <hostname>:/root/.ssh/authorized_keys`。
- en: Otherwise, copy the `id_rsa.pub` file over to the client and then add it to
    the `authorized_keys` file (I usually put it at the bottom).
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，将`id_rsa.pub`文件复制到客户端，然后将其添加到`authorized_keys`文件中（我通常将其放在底部）。
- en: You should now be able to `scp` and `ssh` to the client without having to enter
    a password. This is really handy, especially in scripts.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您应该能够在不输入密码的情况下对客户端进行`scp`和`ssh`。这真的很方便，特别是在脚本中。
- en: You can also add this entry to another user account. For example, I added it
    to my `/home/guest1/.ssh/authorized_keys` file. This way I can copy files as root
    from one machine, and it will still be accepted by the other.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将此条目添加到另一个用户帐户中。例如，我将其添加到了我的`/home/guest1/.ssh/authorized_keys`文件中。这样，我可以作为root从一台机器复制文件，另一台机器仍然会接受它。
- en: Saving history and taking screenshots
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存历史记录和截屏
- en: We all have to learn new things when dealing with computers. Sometimes the steps
    involved are pretty complicated, and I have found that in practically every situation
    whatever document or site I am using to perform the steps, has errors. It's not
    complete, the author skipped an important step, and so on. For these reasons and
    others, after I have (finally) gotten something to work, I run the `history` command
    in that session and output it to a file. I then save this under a suitable name
    so I can find it again later.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理计算机时，我们都必须学习新的东西。有时所涉及的步骤非常复杂，我发现实际上每一种情况下，无论我用来执行这些步骤的文档或网站都存在错误。它不完整，作者跳过了重要的步骤等等。因为这些原因和其他原因，当我（终于）让某些东西运行起来后，我会在会话中运行`history`命令并将其输出到文件中。然后我以合适的名称保存这个文件，以便以后能够找到它。
- en: Depending on how much effort was required, and if appropriate, I may take screenshots
    of each step as well. This can be valuable later as a reference, and if you ever
    have to help someone else accomplish the same task. Or, if someone talks you into
    writing a book about it someday.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 根据所需的努力程度，如果合适的话，我也可能对每个步骤进行截屏。这可以作为以后的参考，如果您必须帮助其他人完成相同的任务。或者，如果有人说服您有朝一日写一本关于它的书。
- en: Space on drives
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 驱动器上的空间
- en: In the old days there was never enough hard drive space. We were always running
    low or out, and trying to find ways to increase our storage. Now, in modern times,
    this might not be as much of an issue. However, it is still a good idea to monitor
    your available space at all times.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，硬盘空间总是不够。我们总是快用完或者用完了，试图找到增加存储空间的方法。现在，在现代社会，这可能不再是一个问题。但是，随时监视您的可用空间仍然是一个好主意。
- en: There are quite a few ways to do this. On my systems I use a program I wrote
    in C and Java. It's called `Percent Space Used` and just uses `df -h` under the
    covers. You can put `df` in a script, or just check the space manually from time
    to time. Just don't run out! Filling up a partition is a good way to have a disaster
    on your hands, especially if it is a system partition.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多方法可以做到这一点。在我的系统上，我使用了我用C和Java编写的一个程序。它叫做“使用百分比空间”，只是在底层使用了`df -h`。您可以将`df`放入脚本中，或者不时手动检查空间。只是不要用完！填满分区是一种让您手忙脚乱的好方法，特别是如果它是系统分区。
- en: Being open to new ideas
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接受新想法
- en: Here is my last bit of advice for people wanting to know Linux better. I consistently
    see people in the field doing their everyday jobs, and doing it the same way.
    Always be on the lookout on how to improve the way you perform your daily tasks.
    If you see a co-worker doing something that seems odd to you, don't just assume
    his way is wrong and yours is right. His process may be a whole lot better than
    yours. Learn from it. On the other hand, he may *not* have a better way, yours
    may be better. At this point, it's up to you to decide whether to attempt to share
    your ideas. I have found most people very resistant to this.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我给想更好地了解Linux的人的最后一条建议。我经常看到在这个领域里的人们在做他们的日常工作，而且都是以同样的方式。要时刻注意如何改进你执行日常任务的方式。如果你看到一个同事做一些对你来说很奇怪的事情，不要假设他的方式是错的，你的是对的。他的方法可能比你的好得多。向他学习。另一方面，他可能*没有*更好的方法，你的可能更好。在这一点上，你可以决定是否尝试分享你的想法。我发现大多数人对此非常抵触。
- en: Do not let yourself get caught in the "Your way isn't better than mine, it's
    just different" argument. As I mentioned before, there is usually only one right
    way to perform a task, but most people just don't see this. Try to find it when
    you can, and share your ideas only if the person you are trying to help is receptive.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 不要让自己陷入“你的方式不比我的好，只是不同”的争论中。正如我之前提到的，通常只有一种正确的执行任务的方式，但大多数人并不明白这一点。尽量在你能找到的时候找到它，并且只在对方愿意接受帮助的情况下分享你的想法。
