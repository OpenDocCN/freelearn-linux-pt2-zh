- en: Web Servers, Databases, and Mail Servers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web服务器、数据库和邮件服务器
- en: 'In this chapter, we will examine the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将研究以下主题：
- en: Installing and understanding a web server
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和理解Web服务器
- en: Basic Apache configuration
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的Apache配置
- en: Basic Nginx configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的Nginx配置
- en: SSL, TLS, and LetsEncrypt
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL、TLS和LetsEncrypt
- en: Basic MySQL or MariaDB installation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的MySQL或MariaDB安装
- en: Basic PostgreSQL installation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本的PostgreSQL安装
- en: Local MTA usage and configuration (Postfix)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地MTA使用和配置（Postfix）
- en: Local MTA usage and configuration (Exim)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地MTA使用和配置（Exim）
- en: NoSQL documents (MongoDB example)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL文档（MongoDB示例）
- en: NoSQL KV (Redis example)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL KV（Redis示例）
- en: Messaging brokers and queues (RabbitMQ example)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息代理和队列（RabbitMQ示例）
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: There's a good chance that you'll come across websites at some point in your
    career as a system administrator or developer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作为系统管理员或开发人员，你很有可能在职业生涯中的某个时候遇到网站。
- en: Websites are these things that exist on the internet, where people go to find
    stuff (technical description). Most of the web runs on Linux, with segmented and
    darker corners for Windows et al.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 网站是存在于互联网上的东西，人们可以在那里找到东西（技术描述）。大部分网络都在Linux上运行，Windows等系统有分割和较暗的角落。
- en: It's typical for a lot of people to start their Linux careers working for either
    an ISP or a web host of some sort, meaning that a lot of newcomers to the field
    get thrown into the deep end of having to manage very public websites immediately. This
    isn't a bad thing, as you tend to learn quickly in environments with a variety
    of issues, and when you're surrounded by a host of other people who are all experiencing
    the same frustration day in, day out, it can be quite the learning experience.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人开始他们的Linux职业生涯时在ISP或某种类型的网络主机工作，这意味着许多新手被立即投入到管理非常公开的网站的深水区。这并不是坏事，因为在各种问题环境中你往往会快速学习，当你周围有许多其他人每天都经历同样的挫折时，这会是一个相当有益的学习经验。
- en: That's not to say that everyone goes the route of a web host or ISP. I started
    working with Linux properly when I joined a small telecoms company, meaning my
    exposure to web technologies was minimal, and my exposure to **private branch
    exchange** (**PBX**) phone systems was considerably greater.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着每个人都会成为网络主机或ISP。我在加入一家小型电信公司时开始正式接触Linux，这意味着我对Web技术的接触很少，而对**私有分支交换**（**PBX**）电话系统的接触要多得多。
- en: Needless to say, if you do go into the route of managing websites or maintaining
    them for other people, you will be in good company. Most engineers you meet at
    various levels will have done their time in the trenches, manning the phones,
    and dealing with developers across the globe at all hours of the morning.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 毋庸置疑，如果你选择管理网站或为他人维护网站，你会有很多同行。你在各个层面遇到的大多数工程师都曾在一线工作，接听电话，全天候与全球的开发人员打交道。
- en: I wouldn't go so far as to say working with websites is fun, but constantly
    refreshing a broken web page while troubleshooting, only to have it eventually
    spring into life as though it'd never left, is a hell of a cathartic experience,
    even if it is three in the morning.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会说和网站一起工作很有趣，但在排除故障时不断刷新一个破损的网页，最终它会像从未离开过一样突然恢复正常，这是一种非常宣泄的经历，即使是在凌晨三点。
- en: There are many different components to the web, and though the heyday of static
    HTML sites has been and gone (though it's looking at a bit of a resurgence recently
    thanks to auto-generated websites hosted in places such as Amazon's S3), there
    are many interesting technologies to get your teeth into.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 网络有许多不同的组件，尽管静态HTML网站的鼎盛时期已经过去（尽管最近由于托管在亚马逊S3等地方的自动生成的网站的出现而出现了一些复苏），但有许多有趣的技术可以让你深入研究。
- en: Starting at the easiest, we're going to look at actual web servers (that serve
    web content), databases (that hold web content), and TLSs (that encrypt web content
    in transit).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从最简单的开始，我们将研究实际的Web服务器（提供Web内容）、数据库（保存Web内容）和TLS（加密Web内容传输）。
- en: 'We''re also going to look at some other pieces of technology that you''ll probably
    come across at some point (again, definitely if you work for a hosting provider).
    These are:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将研究一些其他技术，你可能在某个时候会遇到（尤其是如果你在托管提供商工作）。这些是：
- en: (e)mail transfer agents (such as Postfix and Exim)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （电子）邮件传输代理（如Postfix和Exim）
- en: NoSQL databases (such as MongoDB)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL数据库（如MongoDB）
- en: fast **key value (KV) **stores (such as Redis)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速**键值（KV）**存储（如Redis）
- en: message brokers (such as RabbitMQ)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息代理（如RabbitMQ）
- en: Don't let any of these scare you—they've just words on a page.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不要让这些吓到你——它们只是纸上的文字。
- en: Technical requirements
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this section, we're going to be using both CentOS and Debian. This is because
    while software in the Linux world is fairly universal, some distributions choose
    specific defaults for things such as their web and mail servers.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将同时使用CentOS和Debian。这是因为虽然Linux世界的软件是相当通用的，但一些发行版会为诸如他们的网络和邮件服务器等事物选择特定的默认设置。
- en: 'Feel free to use the following `Vagrantfile` for this chapter:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，可以使用以下`Vagrantfile`：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing and understanding a web server
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和理解Web服务器
- en: A web server is the component you're interacting with directly when you go to
    a website. It traditionally listens on port  `80` (for **Hypertext Transfer Protocol**
    (**HTTP**)) or ** `443` **(for **Hypertext Transfer Protocol Secure** (**HTTPS**)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当你访问网站时，Web服务器是你直接交互的组件。它传统上监听端口`80`（用于**超文本传输协议**（**HTTP**））或`443`（用于**超文本传输安全协议**（**HTTPS**））。
- en: When you type a URL into your browser, these ports are generally hidden unless
    explicitly defined; for example, hitting [https://duckduckgo.com](https://duckduckgo.com)
    in Chrome or Firefox will load the website, but it won't tell you that it's connecting
    on port `443`. In a similar fashion, if you go to[ https://duckduckgo.com:443](https://duckduckgo.com:443),
    the exact same page should load.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在浏览器中输入URL时，这些端口通常是隐藏的，除非明确定义；例如，在Chrome或Firefox中访问[https://duckduckgo.com](https://duckduckgo.com)将加载网站，但它不会告诉你它正在连接到端口`443`。类似地，如果你去[https://duckduckgo.com:443](https://duckduckgo.com:443)，同样的页面应该加载。
- en: 'Also, if you try to go to port `80` using HTTPS (`https://duckduckgo.com:80/`),
    you will generally get an error saying the site can''t provide a secure connection:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你尝试使用HTTPS访问端口`80`（`https://duckduckgo.com:80/`），通常会收到一个错误，表示该网站无法提供安全连接：
- en: '![](img/574d2dc8-72bf-40b2-9c43-1dae98bc0184.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/574d2dc8-72bf-40b2-9c43-1dae98bc0184.png)'
- en: This is because you tried to talk to an insecure port (`80`) using a secure
    protocol (HTTPS).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为你试图使用安全协议（HTTPS）访问不安全的端口（`80`）。
- en: Web servers literally serve the web, but they're usually just the frontend to
    other technology. Blog posts on a Wordpress install, for example, might be stored
    in a database behind the scenes, while they're presented to the end-user by the
    web server frontend.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务器实际上是为网络提供服务的，但它们通常只是其他技术的前端。例如，Wordpress安装中的博客文章可能在幕后存储在数据库中，而它们通过Web服务器前端呈现给最终用户。
- en: It's the job of the web server to determine how to display the content of a
    page to the requesting client.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务器的工作是确定如何向请求的客户端显示页面的内容。
- en: 'Different clients send different "user agents," which tell the web server what
    type of pages it''ll be able to display to you. Think of it in terms of a desktop
    and phone internet browser: if sites are coded to understand the different user
    agents of your devices, the exact same website can look completely different on
    different devices.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的客户端发送不同的“用户代理”，告诉Web服务器它将能够向你显示什么类型的页面。以桌面和手机互联网浏览器为例：如果网站编码以理解你的设备的不同用户代理，那么完全相同的网站在不同设备上可能看起来完全不同。
- en: Getting ready
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'We''re going to use both our VMs and set up a web server on each:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用我们的两个虚拟机，并在每台上设置一个Web服务器：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How to do it...
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Starting with our CentOS box, we're going to install the default web server
    that's provided in the official repositories.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们的CentOS系统开始，我们将安装官方存储库中提供的默认Web服务器。
- en: Installing httpd (Apache) on CentOS
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS上安装httpd（Apache）
- en: As the title suggests, CentOS re-badges the Apache HTTP Server as `httpd`, I
    suspect to genericise the product for ease of understanding (though I've met a
    fair amount of system administrators who dislike this re-badge, including me).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 正如标题所示，CentOS将Apache HTTP服务器重新标记为`httpd`，我怀疑是为了便于理解而将产品通用化（尽管我遇到了不少不喜欢这种重新标记的系统管理员，包括我自己）。
- en: 'Install `httpd` like so:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样安装`httpd`：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now let''s start it, since this is CentOS:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始吧，因为这是CentOS：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As we forwarded ports when we logged into our Vagrant boxes, we should now
    be able to navigate to our forwarded address and port (`http://127.0.0.1:8080`)
    in our local browser:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在登录Vagrant虚拟机时转发了端口，我们现在应该能够在本地浏览器中导航到我们转发的地址和端口（`http://127.0.0.1:8080`）：
- en: '![](img/2b8e128b-6908-405e-8ef5-b3c64775ab9a.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b8e128b-6908-405e-8ef5-b3c64775ab9a.png)'
- en: This is the default `splash` page for Apache on CentOS, configured out of the
    box.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这是CentOS上Apache的默认`splash`页面，开箱即用配置。
- en: Installing Nginx on Debian
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Debian上安装Nginx
- en: 'Now, on our Debian box, let''s install Nginx instead:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们的Debian系统上，让我们安装Nginx：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once installed, as it''s Debian, the service will probably start automatically:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装完成，由于是Debian，服务可能会自动启动：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As we''ve forwarded a different port (`http://127.0.0.1:8181`) to our Debian
    machine, we should be able to visit this in our browser, too:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在登录Vagrant虚拟机时转发了不同的端口（`http://127.0.0.1:8181`）到我们的Debian机器，我们也应该能够在浏览器中访问这个地址：
- en: '![](img/374712e8-1ae9-442a-b680-3d3eeb67da55.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/374712e8-1ae9-442a-b680-3d3eeb67da55.png)'
- en: Well, that's a lot less swish out of the box...
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，开箱即用的功能少了很多...
- en: How it works...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: What we've done here is install two different web servers, though they accomplish
    the same thing.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里做的是安装两个不同的Web服务器，尽管它们完成的是同样的工作。
- en: Arguably, there's no better and simultaneously worse place for standards compliance
    than the web, which means that, regardless of the web server you choose to use
    (Apache, Nginx), you should still be able to serve content in a consistent fashion.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可以说，没有比网络更适合和同时更糟糕的标准合规性的地方了，这意味着无论你选择使用哪个Web服务器（Apache，Nginx），你仍然应该能够以一致的方式提供内容。
- en: Standards compliance is the term we use to refer to the agreed standards for
    computer systems. A **Request for Comments** (**RFC**) might dictate anything
    from which IP ranges are to be used for private use, to how two systems wishing
    to securely communicate over HTTPS go about doing that. The **Internet Engineering
    Task Force** (**IETF**) is one of the bodies that manages RFCs.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 标准合规性是我们用来指代计算机系统约定的标准的术语。**请求评论**（**RFC**）可能规定任何内容，从哪些IP范围用于私人使用，到两个系统如何在HTTPS上进行安全通信。**互联网工程任务组**（**IETF**）是管理RFC的机构之一。
- en: The first server we installed was Apache, which for years was the "go to" web
    server and the one that is still considered "battle hardened" by a lot of the
    more traditional administrators out there. It's obviously the default on CentOS
    installations, meaning that the install base is still very large.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们安装的第一个服务器是Apache，多年来一直是“首选”Web服务器，仍然被许多传统管理员认为是“经过严格考验”的。显然，它是CentOS安装的默认选项，这意味着安装基数仍然非常庞大。
- en: At the time of writing, Apache is still seen as the bigger player, but Nginx has
    been rising to fame in recent years, and looks set to take over (more on this
    later).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Apache仍然被视为更大的主导者，但Nginx近年来逐渐崭露头角，并且有望在未来取代Apache（稍后详细介绍）。
- en: We then installed Nginx on our Debian box (though Apache is available too).
    Debian's claim to fame of having thousands of packages available comes to the
    fore here, as it also has a slew of different web servers you might like to try
    (I only chose Apache and Nginx as the two biggest).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在Debian框上安装了Nginx（尽管Apache也可用）。Debian之所以声名显赫，是因为它还有一大堆不同的Web服务器可供尝试（我只选择了Apache和Nginx作为最大的两个）。
- en: Regardless of which one you install, both of these systems are now more than
    capable of serving static HTTP content to the internet (or at least your little
    slice of your network, as it's not publicly accessible).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您安装哪一个，这两个系统现在都能够为互联网提供静态HTTP内容（或者至少是您网络的一小部分，因为它不是公开可访问的）。
- en: 'If we look at the `ss` output on our Debian box, we see the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看Debian框上的`ss`输出，我们会看到以下内容：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We can see port `80`, listening on all available IPs, and we can see the established
    communication, which is actually coming from our forwarded web connection and
    Firefox. It's the exact same story on the CentOS box.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到端口`80`，监听所有可用的IP，并且我们可以看到已建立的通信，实际上来自我们转发的Web连接和Firefox。在CentOS框上也是一样的情况。
- en: All of this is great, and it means that when our client (Firefox in this example)
    requests content from the web server (Apache), that server is able to deliver
    the requested content in a fashion and style that the client can understand.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都很棒，这意味着当我们的客户端（例如Firefox）从Web服务器（Apache）请求内容时，该服务器能够以客户端能够理解的方式和样式提供所请求的内容。
- en: Firefox can then display the content to the end user in a way they will understand,
    as pictures of cats, or whatever other information they might be searching on
    the internet (though it should always be cats).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox随后可以以用户能够理解的方式向最终用户显示内容，例如猫的图片，或者他们在互联网上搜索的其他信息（尽管应该始终是猫）。
- en: There's more...
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: I mentioned other web servers, and it's true that there's quite a few.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我提到了其他Web服务器，事实上有相当多。
- en: In OpenBSD land, you'll probably find yourself installing `httpd`, which isn't
    a re-badged Apache (as is the case on CentOS), but is actually completely different
    software, that just happens to share the same name, and perform similar functions...
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenBSD领域，您可能会发现自己安装了`httpd`，这不是在CentOS上的重新命名的Apache（如在CentOS上的情况），而是完全不同的软件，只是碰巧有相同的名称，并且执行类似的功能...
- en: Or, you might like the idea of Tomcat, which is less of a traditional web server,
    as it acts as a frontend to Java servlets (usually some sort of web application).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可能会喜欢Tomcat的想法，它不太像传统的Web服务器，而是作为Java servlets（通常是某种Web应用程序）的前端。
- en: There's `lighttpd` too, which is (as the name might suggest) supposed to be
    a lightweight web server, without the many bells and whistles of functionality
    that Nginx or Apache provide.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 还有`lighttpd`，它（顾名思义）应该是一个轻量级的Web服务器，没有Nginx或Apache提供的许多功能。
- en: In the Windows world (a horrible place that I don't like to visit), you get
    IIS, which is more of a suite of internet services that's available on a Windows
    server.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows世界中（一个我不喜欢访问的可怕地方），您会得到IIS，这更像是在Windows服务器上提供的一套互联网服务。
- en: Basic Apache configuration
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本的Apache配置
- en: We've installed `httpd` on our CentOS machine, meaning that we've got a web
    server running on port `80` and we're able to hit it from our Firefox installation
    on our host machine.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在CentOS机器上安装了`httpd`，这意味着我们在端口`80`上运行了一个Web服务器，并且我们能够从我们主机上的Firefox安装中访问它。
- en: In this section, we're going to take a look at how our server knows what to
    display and what we can do to set up a site of our own so that people aren't greeted
    by the default Apache page when they visit our IP.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看我们的服务器如何知道要显示什么，以及我们可以做些什么来设置自己的站点，以便当人们访问我们的IP时不会被默认的Apache页面所欢迎。
- en: Getting ready
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we're going to use the `Vagrantfile` from the previous section.
    If you haven't already installed Apache on the CentOS VM, do so at this point.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，我们将使用上一节的`Vagrantfile`。如果您尚未在CentOS VM上安装Apache，请在此时进行安装。
- en: 'Connect to your CentOS box:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到您的CentOS框：
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First, we should have a quick look at where the default configuration is being
    loaded from. On the default page, we can see the following section:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们应该快速查看默认配置加载自何处。在默认页面上，我们可以看到以下部分：
- en: '![](img/bdbc51d2-a871-4335-97e0-1d846a0ceba6.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bdbc51d2-a871-4335-97e0-1d846a0ceba6.png)'
- en: It turns out that we are, in fact, the administrator. With that in mind, let's
    take a look at what we can do.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，我们实际上是管理员。考虑到这一点，让我们看看我们能做些什么。
- en: 'First, we can `ls` the directory listed in this message to see what''s there
    already:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以`ls`列出此消息中列出的目录，看看那里已经有什么：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: There's nothing... odd.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么...奇怪的。
- en: 'Let''s put a basic `index.html` page in this directory, just to see what happens:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这个目录中放一个基本的`index.html`页面，看看会发生什么：
- en: '[PRE9]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now let''s visit our website once more:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们再次访问我们的网站：
- en: '![](img/57a6abff-98b9-4fb5-aa07-fe1265af11e9.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57a6abff-98b9-4fb5-aa07-fe1265af11e9.png)'
- en: It's changed!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 它改变了！
- en: OK, so clearly this directory is being used for something, but it doesn't explain
    where the configuration on what to display lives.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，显然这个目录正在被用于某些事情，但它没有解释显示配置位于何处。
- en: 'Let''s cat the suggested `welcome` file:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看建议的`welcome`文件：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The important takeaway is as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的要点如下：
- en: '"This configuration file enables the default "Welcome" page if there is no
    default index page present for the root URL."'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: “此配置文件在根URL没有默认索引页面的情况下启用默认的“欢迎”页面。”
- en: OK, so let's not worry about this for now, and instead focus on our own file.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们不要担心这个，而是专注于我们自己的文件。
- en: 'First, because you can have a large amount of different websites on one web
    server (virtual hosts), let''s create a small amount of segregation within our
    folder structure to keep different website files separate:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，因为您可以在一个Web服务器上拥有大量不同的网站（虚拟主机），让我们在我们的文件夹结构中创建一些分隔，以便将不同的网站文件分开：
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: At this point, our web server will go back to showing the default Apache page,
    as we've moved our only `index.html` file.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们的Web服务器将重新显示默认的Apache页面，因为我们已经移动了唯一的`index.html`文件。
- en: 'Next, add the configuration that''s required for this directory to be read:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加所需的配置，使该目录可以被读取：
- en: '[PRE12]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, we need to reload the configuration:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要重新加载配置：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, head back to our Firefox window and try to visit `http://127.0.0.1:8080/`.
    You should see your message again:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，回到我们的Firefox窗口，尝试访问`http://127.0.0.1:8080/`。你应该再次看到你的消息：
- en: '![](img/20b57421-2868-4e98-835e-f3309c46d30a.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20b57421-2868-4e98-835e-f3309c46d30a.png)'
- en: With this in place, while nothing on the surface has changed, it means that
    you can add more websites and more quotes from beloved science fiction franchises
    in the future.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个配置，虽然表面上没有改变，但这意味着你可以在将来添加更多的网站和来自受欢迎的科幻系列的更多引用。
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The reason we were able to drop a file into `/var/www/html/` and view it in
    our browser was because of the `DocumentRoot` setting within the main Apache configuration
    file, which can be seen here:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够将文件放入`/var/www/html/`并在浏览器中查看它，是因为在主Apache配置文件中有`DocumentRoot`设置，可以在这里看到：
- en: '[PRE14]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The reason we used `index.html` as the filename, aside from it being convention,
    was because of the following line:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之所以将`index.html`作为文件名，除了因为它是惯例，还因为以下行：
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This dictates which file to load when a directory is requested.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这决定了在请求目录时加载哪个文件。
- en: While the `/etc/httpd/conf/httpd.conf` file is the default configuration file,
    we're also able to add additional configuration for websites under the `/etc/httpd/conf.d/`
    directory, as we did in this case.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`/etc/httpd/conf/httpd.conf`文件是默认的配置文件，但我们也可以在`/etc/httpd/conf.d/`目录下为网站添加额外的配置，就像我们在这个案例中所做的那样。
- en: 'We used a very specific stanza for our own configuration, as shown here:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为自己的配置使用了一个非常特定的段落，如下所示：
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This stanza meant that while we could continue to host the same content as we
    did previously on our site, we're also able to host other content too, with different
    `DocumentRoots`.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这个段落意味着，虽然我们可以继续托管与以前一样的内容，但我们也能够托管其他内容，使用不同的`DocumentRoots`。
- en: When we visited our site a second time, instead of being directed to `/var/www/html`
    as the `DocumentRoot`, we were instead pointed to `/var/www/god-to-marvin` because
    the preceding configuration dictated as such.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们第二次访问我们的站点时，我们不再被指向`/var/www/html`作为`DocumentRoot`，而是被指向`/var/www/god-to-marvin`，因为前面的配置规定了这样做。
- en: We also have a `ServerName` and a `ServerAlias` directive, though in this case
    the Alias does nothing.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个`ServerName`和一个`ServerAlias`指令，尽管在这种情况下Alias没有任何作用。
- en: '`ServerName` is the domain or IP address that the end user typed into their
    browser. The alias can be others associated with that name.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`ServerName`是最终用户在浏览器中输入的域名或IP地址。别名可以是与该名称相关的其他名称。'
- en: 'For example, you could have the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以有以下内容：
- en: '[PRE17]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: All of these would hit the same `DocumentRoot`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都将命中相同的`DocumentRoot`。
- en: There's more...
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Virtual hosts only really come into their own when you have multiple domain
    names pointing at a server. In practice, you can have hundreds of different domain
    names pointing to one box, but because Apache is aware of the domain you're using
    to connect, it will only serve the exact site you've requested.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟主机只有在多个域名指向一个服务器时才能真正发挥作用。实际上，你可以有数百个不同的域名指向一个服务器，但因为Apache知道你用来连接的域名，它只会提供你请求的确切站点。
- en: In multi-tenant situations, it's not uncommon for multiple clients to coexist
    on one server, only manipulating and updating their own files, oblivious to the
    fact they're sharing a box with other companies and users.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在多租户情况下，多个客户端共存于一台服务器上并不罕见，只操作和更新他们自己的文件，对与他们与其他公司和用户共享一台服务器毫不知情。
- en: If it costs a hosting company a few pounds a month to set up a web server and
    they can charge customers of theirs to host sites with them, the company could
    make their money back in no time.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个托管公司每月花费几英镑来设置一个Web服务器，并且他们可以向他们的客户收费来托管网站，那么公司可以在很短的时间内收回成本。
- en: See also
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: In testing environments, you tend to see multiple websites on one box at once,
    because they're usually lightweight and several can run in parallel. This presents
    a problem for testing domain name resolution though, as it can get costly and
    time-consuming to use public domain name services for test and temporary websites.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试环境中，你往往会看到一台服务器上同时运行多个网站，因为它们通常是轻量级的，可以并行运行多个。然而，这给域名解析测试带来了问题，因为使用公共域名服务来测试和临时网站可能会变得昂贵和耗时。
- en: One solution to this problem is to use the `/etc/hosts` file (on Linux and Unix
    systems) instead.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的一个方法是使用`/etc/hosts`文件（在Linux和Unix系统上）。
- en: 'A default `/etc/hosts` file might look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的`/etc/hosts`文件可能如下所示：
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You could add an additional line to this file, as follows:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照以下方式向该文件添加一行：
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now when you go to `mysupersite.com` in your browser, the name will be resolved
    to the IP address you specified, instead of going out to an external DNS server
    for name resolution.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当你在浏览器中输入`mysupersite.com`时，名称将被解析为你指定的IP地址，而不是向外部DNS服务器进行名称解析。
- en: In this way, you can have multiple "virtual hosts" on your Apache web server,
    and because your browser is requesting named sites (even if they're all on the
    same IP address), you will get different content depending on the name you connected
    with.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，你可以在Apache Web服务器上拥有多个“虚拟主机”，因为你的浏览器请求的是具名站点（即使它们都在同一个IP地址上），你将根据你连接的名称获得不同的内容。
- en: The only issue with people mucking around with their `/etc/hosts` file is when
    they forget to change them back and get confused when they can't connect to the
    "real" site anymore.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 人们在他们的`/etc/hosts`文件中胡乱更改的唯一问题是，当他们忘记改回去并且困惑为什么无法连接到“真正的”站点时。
- en: Basic Nginx configuration
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本的Nginx配置
- en: Heading on to our Debian server now, we're going to have a look at the default
    Nginx page that we can see when we visit `http://127.0.0.1:8181/`, and we're going
    to replace this text with our own message.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在前往我们的Debian服务器，我们将查看默认的Nginx页面，当我们访问“http://127.0.0.1:8181/”时可以看到，并且我们将用我们自己的消息替换这个文本。
- en: Nginx, as we stated previously, is growing in popularity. It has become the
    go-to web server because of its ease-of-use and flexibility when required—not
    that this is a marketing pitch; they're both open source and free.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所述，Nginx越来越受欢迎。它已经成为首选的Web服务器，因为它在需要时易于使用和灵活性——并不是市场营销的宣传；它们都是开源和免费的。
- en: Getting ready
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we're going to use the `Vagrantfile` from the first section.
    If you haven't already installed Nginx on the Debian VM, do so at this point.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一部分，我们将使用第一部分的“Vagrantfile”。如果您还没有在Debian VM上安装Nginx，请在此时进行安装。
- en: 'Connect to your Debian box:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到您的Debian盒子：
- en: '[PRE20]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How to do it...
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Our default Nginx page doesn't have any pointers on where to look for configuration
    changes, only pointing you to the official documentation (which is well worth
    a peruse) and a commercial support offering.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的默认Nginx页面没有任何指针指向配置更改的位置，只是指向官方文档（这是值得一读的）和商业支持提供。
- en: 'This default page actually lives in a very similar location to the one we''ve
    just been examining on CentOS:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这个默认页面实际上与我们刚刚在CentOS上检查的位置非常相似：
- en: '[PRE21]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note that this file is called `index.nginx-debian.html` and that it's the only
    file in `/var/www/html` to begin with.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此文件称为“index.nginx-debian.html”，并且它是“/var/www/html”中的唯一文件。
- en: Like Apache, Nginx has a concept of virtual hosts, which we're going to configure
    in `/etc/nginx/conf.d/`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 与Apache一样，Nginx有虚拟主机的概念，我们将在“/etc/nginx/conf.d/”中进行配置。
- en: 'Let''s start by creating some content:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先创建一些内容：
- en: '[PRE22]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now we can add to our chosen virtual hosts directory:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以添加到我们选择的虚拟主机目录：
- en: '[PRE23]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then, we need to load Nginx:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要加载Nginx：
- en: '[PRE24]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now we should be able to see our question in our browser when pointing to the
    forwarded port we set up:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当指向我们设置的转发端口时，我们应该能在浏览器中看到我们的问题：
- en: '![](img/f209f3e9-6460-4ea9-8e6e-774c67f0a3fb.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f209f3e9-6460-4ea9-8e6e-774c67f0a3fb.png)'
- en: Cool!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 酷！
- en: How it works...
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Our default Nginx configuration file is located at `/etc/nginx/nginx.conf`
    and it sets things like the process ID location, along with the user that Nginx
    will run as ( `www-data` here), on this Debian installation:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的默认Nginx配置文件位于“/etc/nginx/nginx.conf”，它设置了诸如进程ID位置以及Nginx将作为哪个用户运行（这里是“www-data”）等内容，在这个Debian安装中：
- en: '[PRE25]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Within this file, there also exists the following block of configuration:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件中，还存在以下配置块：
- en: '[PRE26]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note that the top directory is the one we chose to use for our configuration.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，顶级目录是我们选择用于我们的配置的目录。
- en: When we placed the `fenchurch.conf` configuration in the `/etc/nginx/conf.d/`
    directory, we were instructing Nginx to load this configuration, along with everything
    else it loads at launch.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将“fenchurch.conf”配置放在“/etc/nginx/conf.d/”目录中时，我们指示Nginx加载此配置，以及它在启动时加载的所有其他内容。
- en: 'Let''s look at our configuration:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们的配置：
- en: '[PRE27]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The `listen` directives are fairly straightforward, but if you had multiple
    IP addresses on a box, they might be expanded to include a specific entry.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: “listen”指令非常简单，但如果您在一个盒子上有多个IP地址，它们可能会扩展到包括特定条目。
- en: Next, our `root` entry is the root location of website files. Here, it's set
    to the one we chose to create for our great question.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们的“root”条目是网站文件的根位置。在这里，它设置为我们选择为我们的问题创建的位置。
- en: '`index` is the name of the file to load when Nginx enters the directory. The
    standard `index.html` is used here.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: “index”是Nginx进入目录时要加载的文件的名称。这里使用了标准的“index.html”。
- en: 'And, like Apache, `server_name` is the domain name or IP address that the end
    user is hoping to receive content for. It could be a string of names, as seen
    elsewhere:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，就像Apache一样，“server_name”是最终用户希望接收内容的域名或IP地址。它可以是一系列名称，就像其他地方看到的那样：
- en: '[PRE28]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Lastly, the `try_files` line within the `location` block means that files of
    a given link will be searched for, and if they're not found, a `404` will be given
    instead.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在“location”块中的“try_files”行意味着将搜索给定链接的文件，如果找不到，将返回“404”。
- en: 'You can test this by trying to go to a non-existent file in your browser, for
    example, `http://127.0.0.1:8181/prefect`:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过尝试在浏览器中访问不存在的文件来测试这一点，例如，“http://127.0.0.1:8181/prefect”：
- en: '![](img/4a496d98-0ae6-4b81-af14-cc6d6361a9ee.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a496d98-0ae6-4b81-af14-cc6d6361a9ee.png)'
- en: 'However, we could change the `404` to a `403` and reload the Nginx config:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们可以将“404”更改为“403”并重新加载Nginx配置：
- en: '[PRE29]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If we do this, we get a `403 Forbidden` instead:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们这样做，我们会得到“403 Forbidden”：
- en: '![](img/0c35b3a2-6221-4e1e-b58b-1373342dd2fc.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c35b3a2-6221-4e1e-b58b-1373342dd2fc.png)'
- en: '`404` is perhaps the most common code that web servers return, but you should
    be aware that there are more, and they do actually mean different things (provided
    they''ve been configured to return correctly). `200` is OK, `401` means unauthorized,
    and so on.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: “404”可能是Web服务器返回的最常见代码，但您应该知道还有更多，并且它们实际上意味着不同的事情（前提是它们已经配置正确返回）。“200”是OK，“401”表示未经授权，等等。
- en: There's more...
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You might be wondering about using `systemctl reload`, and why I chose to use
    that instead of `restart`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想知道使用“systemctl reload”的原因，以及为什么我选择使用它而不是“restart”。
- en: 'The answer should become clearer when we `cat` the systemd unit file for Nginx:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们“cat” Nginx的systemd单元文件时，答案应该变得更清晰：
- en: '[PRE30]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: There's a specific `ExecReload` line that runs with the `-s reload` flag.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 有一行特定的“ExecReload”命令，带有“-s reload”标志。
- en: This sends the `reload` signal to Nginx (`SIGHUP`); that is, it's less disruptive
    to the running process.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这会向Nginx发送“reload”信号（SIGHUP）；也就是说，它对正在运行的进程的干扰较小。
- en: See also
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: In Debian and Debian-like distributions, the concept of a `sites-enabled` and
    `sites-available` directory has become commonplace.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian和类似Debian的发行版中，“sites-enabled”和“sites-available”目录的概念已经变得司空见惯。
- en: Theoretically, any sites you have on your box could go in the `sites-available`
    directory, and once you're happy with them, you create a symlink to the `sites-enabled`
    directory.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 从理论上讲，您在服务器上拥有的任何网站都可以放在`sites-available`目录中，一旦您对它们满意，就可以创建到`sites-enabled`目录的符号链接。
- en: Personally, I find this setup a bit confusing and somewhat outdated for an automated
    world, but if that's your jam, then maybe the Debian way of doing things is for
    you. I won't judge.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我发现这种设置有点令人困惑，而且在自动化的世界中有些过时，但如果这是您的菜，那么也许Debian的做法适合您。我不会评判。
- en: SSL, TLS, and LetsEncrypt
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL、TLS和LetsEncrypt
- en: We haven't talked about the "S" part of the HTTP equation yet. Specifically,
    the S stands for security, unlike Superman's, which apparently isn't an S, and
    is actually the crest of the House of El.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有讨论HTTP方程式中的“S”部分。具体来说，S代表安全，与超人的S不同，后者显然不是S，实际上是埃尔家族的纹章。
- en: Unlike Superman, web servers could be lying to you.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 与超人不同，Web服务器可能会对您撒谎。
- en: When you visit a website, you like to know that the website you're hitting is
    legitimately owned and operated by the company you believe it to be. If you go
    to Amazon, Apple, or PayPal, you want to know that they are who they say they
    are before you hand over your digital cash.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当您访问一个网站时，您希望知道您正在访问的网站是否真正由您认为的公司拥有和运营。如果您去亚马逊、苹果或PayPal，您希望在交出您的数字现金之前知道它们是真实的。
- en: However, you also want the website to be able to take your credit card information
    in a secure fashion so that those digits and secrets don't get spread over the
    internet in plain text format for anyone to read.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您还希望网站能够以安全的方式接收您的信用卡信息，以便这些数字和秘密不以纯文本格式在互联网上传播供任何人阅读。
- en: 'Look out for the padlock:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 留意挂锁：
- en: '![](img/c46c495d-10e3-4b82-80ab-54d45287107e.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c46c495d-10e3-4b82-80ab-54d45287107e.png)'
- en: Most browsers (if not all) should show a little padlock when you visit a secure
    site, and as long as the site isn't fraudulent, you shouldn't get a warning about
    potential problems.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数浏览器（如果不是全部）在您访问安全网站时应该显示一个小挂锁，只要网站不是欺诈性的，您就不应该收到有关潜在问题的警告。
- en: HTTPS is absolutely not perfect, as has been displayed previously by security
    researchers. It's possible to get legitimate certificates for companies you've
    set up that just happen to have the same or similar name to existing brands. Be
    absolutely sure that who you're sending your credit card information to is the
    real deal.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPS绝对不是完美的，正如安全研究人员之前展示的那样。有可能为您设置的公司获得合法证书，这些公司恰好与现有品牌具有相同或相似的名称。务必确保您发送信用卡信息的对象是真正的。
- en: 'You can click on this padlock and get information about the `Certificate` that
    the site is using to communicate with you, detailing things such as the owner
    of the cert, the website in question, and the internet body that verified it:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以点击这个挂锁并获取有关网站用于与您通信的`证书`的信息，详细说明证书的所有者、相关网站以及验证它的互联网机构：
- en: '![](img/5ef2be1a-cca1-4043-bf61-12064a2ecf5a.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ef2be1a-cca1-4043-bf61-12064a2ecf5a.png)'
- en: In this section, we're going to set up our site to listen for HTTPS connections
    instead of HTTP, and we're going to discuss a body known as `Let's Encrypt`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置我们的网站以监听HTTPS连接，而不是HTTP，并讨论一个名为`Let's Encrypt`的机构。
- en: Getting ready
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In this section, we're going to use our Debian VM.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的Debian虚拟机。
- en: If you haven't already, it would be a good idea to set up Nginx as described
    in the previous sections, including your virtual hosts entry.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有，最好按照前面的部分设置Nginx，包括您的虚拟主机条目。
- en: If you've not done already, set up your virtual host on your Debian VM using
    Nginx.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有在Debian虚拟机上使用Nginx设置虚拟主机，请立即设置。
- en: Everything we do in this section is also possible in Apache, though with a different
    configuration.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节中所做的一切在Apache中也是可能的，尽管配置不同。
- en: 'Ensure that you''re forwarding your connection to your VM, this time using
    a new port:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您将连接转发到您的虚拟机，这次使用一个新端口：
- en: '[PRE31]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: How to do it...
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Assuming your site is currently up and running on port `80`, inside your VM,
    you should be able to make the following changes to your files to enable HTTPS
    communication:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的网站当前正在虚拟机上的端口`80`上运行，您应该能够对文件进行以下更改以启用HTTPS通信：
- en: '[PRE32]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Ensure that your file looks similar to the following by using `cat`:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`cat`确保您的文件看起来类似于以下内容：
- en: '[PRE33]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now ensure that the `snake oil` certificates are available by installing the
    `ssl-cert` package:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 现在确保通过安装`ssl-cert`软件包可用`蛇油`证书：
- en: '[PRE34]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Then, reload our configuration:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新加载我们的配置：
- en: '[PRE35]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You should now be able to visit the `https://127.0.0.1:8484` address in your
    browser, and hopefully see a warning such as the following:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该能够在浏览器中访问`https://127.0.0.1:8484`地址，并希望看到以下警告：
- en: '![](img/1a774ac2-01c3-4754-a0af-b8f3da9f9d4d.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a774ac2-01c3-4754-a0af-b8f3da9f9d4d.png)'
- en: 'This means that while the server is configured to listen on HTTPS and you can
    connect to it, the browser doesn''t think the certificate is legitimate (because
    it isn''t) and as a result it will warn you before you try to go any further:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着虽然服务器配置为监听HTTPS并且您可以连接到它，但浏览器认为证书不合法（因为它确实不合法），因此在您尝试进一步操作之前会警告您：
- en: '![](img/c1ba3410-c6c0-4362-bfb3-c094650b3772.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1ba3410-c6c0-4362-bfb3-c094650b3772.png)'
- en: At this point, you could press Add Exception... and trust the self-signed certificate,
    enabling you to visit the website. However, unless you're absolutely sure that
    you should be seeing the warning, and you're OK with it (because you're testing),
    it's not a good habit to get into.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，您可以按“添加异常...”并信任自签名证书，从而使您能够访问该网站。但是，除非您绝对确定应该看到警告，并且您对此没有问题（因为您正在测试），否则这不是一个好习惯。
- en: How it works...
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The following is a BIG SUPER WARNING:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个非常重要的警告：
- en: The certificates used here are for example only, hence the name "snake oil".
    They should **NEVER** be used in production, by anyone, even for a joke. You should
    only use legitimate certificates for any servers you set up (outside of testing
    and development, which shouldn't be public facing anyway).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的证书仅供示例，因此被称为“蛇油”。它们**绝对不应该**在生产中使用，甚至开玩笑也不行。您应该只为您设置的任何服务器使用合法的证书（除了测试和开发，这些本来就不应该面向公众）。
- en: 'Now that that''s out of the way, let''s look at what we''ve got here:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 既然这些都说清楚了，让我们看看我们在这里有什么：
- en: '[PRE36]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: We used a couple of `sed` commands to change this file, but we could have just
    copied the contents into the file instead if we wanted.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了几个`sed`命令来更改这个文件，但如果愿意，我们也可以将内容复制到文件中。
- en: 'We changed the `listen` port to `443` (from `80`) and added an `ssl` directive.
    We also included a snippet example file, in this case, `snakeoil.conf`:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`listen`端口从`80`更改为`443`，并添加了一个`ssl`指令。我们还包括了一个片段示例文件，这里是`snakeoil.conf`：
- en: '[PRE37]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: So, our little virtual host has access to an SSL certificate and a certificate
    key.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的小虚拟主机可以访问SSL证书和证书密钥。
- en: Reloading our configuration meant that these settings were applied and that
    we could then hit our site on `443`, inside Firefox.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载我们的配置意味着这些设置已经生效，然后我们可以在Firefox中访问我们的网站`443`端口。
- en: We then got the scary message about the cert being bogus, but we expected that
    to happen.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们收到了关于证书伪造的可怕消息，但我们预料到会发生这种情况。
- en: We also use the terms SSL and TLS interchangeably quite a bit in this profession
    (even I'm guilty of it), and that's technically incorrect (the worst kind of incorrect).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个行业中，我们经常交替使用SSL和TLS这两个术语（包括我自己），这在技术上是不正确的（最糟糕的错误）。
- en: '**Secure Sockets Layer** (**SSL**) is a long deprecated protocol that''s been
    replaced by **Transport Layer Security** (**TLS**), which is now the standard
    and usually default for providing security of data in transit.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全套接字层**（**SSL**）是一个长期废弃的协议，已被**传输层安全性**（**TLS**）取代，这现在是提供数据传输安全性的标准和通常默认的协议。'
- en: 'There''s been several versions of both protocols:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个协议都有几个版本：
- en: 'SSL 1.0: Never Published'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL 1.0：从未发布
- en: 'SSL 2.0: 1995'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL 2.0：1995
- en: 'SSL 3.0: 1996'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL 3.0：1996
- en: 'TLS 1.0: 1999'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 1.0：1999
- en: 'TLS 1.1: 2006'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 1.1：2006
- en: 'TLS 1.2: 2008'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 1.2：2008
- en: 'TLS 1.3: 2018'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 1.3：2018
- en: Realistically, you should be using only TLS 1.2 these days, and when 1.3 becomes
    ubiquitous, I'd recommend flipping to that too.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，您现在应该只使用TLS 1.2，当1.3变得普遍时，我建议您也转换到那个版本。
- en: There's entire articles about the various attacks that can be used against some
    of these protocols, and I would always advise reading up on the recommendations
    of the day when you're setting up a web server.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 有关一些协议可能遭受的各种攻击的整篇文章，我建议您在设置Web服务器时，始终阅读当天的建议。
- en: Heartbleed is usually a good place to start reading up on SSL/TLS vulnerabilities.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Heartbleed通常是了解SSL/TLS漏洞的好地方。
- en: Some older operating systems don't support newer protocols, meaning that you
    sometimes get websites using long-dead and insecure protocols just to appease
    the XP users of the world. If your boss demands you use SSL (any version) or a
    TLS earlier than 1.2, I would suggest a nice sit-down over a cup of tea so that
    you can explain why that would be a bad idea.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 一些较旧的操作系统不支持较新的协议，这意味着有时您会看到一些网站使用已经过时且不安全的协议，只是为了迎合世界上的XP用户。如果您的老板要求您使用SSL（任何版本）或TLS早于1.2，我建议您坐下来喝杯茶，解释为什么这是一个坏主意。
- en: There's more...
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are a couple of other things, just to make sure you've got a good jumping-off
    point.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他事情，确保您有一个良好的起点。
- en: Let's Encrypt
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Let's Encrypt
- en: If you don't want to use your own CA, you might consider using Let's Encrypt,
    a certificate authority that provides free certificates.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想使用自己的CA，您可以考虑使用Let's Encrypt，这是一个提供免费证书的证书颁发机构。
- en: Usually, certificates cost money—a lot of money in some cases (such as Extended
    Validation certificates)—so it's nice to be able to secure your sites using a
    free offering.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，证书是要花钱的——在某些情况下是很多钱（比如扩展验证证书），所以能够使用免费的服务来保护您的网站是件好事。
- en: The certificates are only valid for 90 days, which is something of a drawback,
    but it's perfectly possible to implement auto-renewal to combat this perceived
    problem.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 证书只有效期90天，这有点不方便，但可以实现自动更新来解决这个问题。
- en: Deployment and renewal can be accomplished by various tools that are available
    in a lot of distributions. On Debian boxes, you might consider installing the
    `certbot` package and having a go at configuring a web server of your own.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 部署和更新可以通过各种工具来完成，在许多发行版中都有。在Debian系统上，您可以考虑安装`certbot`软件包，并尝试配置自己的Web服务器。
- en: Work environment certificates
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作环境证书
- en: It's worth noting that the only thing that makes a certificate "trusted" in
    the traditional sense is that you know who signed it. Some browsers and most operating
    systems come with a list of "trusted" **certificate authorities** (**CAs**) that
    verify that a certificate is legitimate.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，使证书在传统意义上“受信任”的唯一因素是您知道是谁签发了它。一些浏览器和大多数操作系统都附带了一个“受信任”的**证书颁发机构**（**CA**）列表，用于验证证书的合法性。
- en: 'The same is true for workplaces: What you tend to see (especially in bigger
    companies) are in-house certificate authorities whose integrity-checking certificate
    is installed on every laptop and desktop the company owns. The net result of this
    is that it''s much easier for a company to sign certificates for internal use,
    but they''ll still show a warning if any of those systems are accessed from outside
    (as the outside device won''t have the company CA installed).'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 对于工作场所也是如此：您通常会看到（尤其是在大公司中）内部证书颁发机构，其完整性检查证书已安装在公司拥有的每台笔记本电脑和台式电脑上。这样做的结果是公司更容易为内部使用签发证书，但如果从外部访问这些系统，仍会显示警告（因为外部设备没有安装公司CA）。
- en: You may find that your own employer has a CA on your company laptop, installed
    alongside the bigwigs from America, China, and a few governments, too.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会发现您自己的雇主在您的公司笔记本电脑上安装了CA，与美国、中国和一些政府的大人物一起安装在一起。
- en: See also
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: It's nice to talk about security in the abstract, but the simple fact of the
    matter is that it's actually quite a confusing topic, and one that the general
    public isn't that well versed in.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 谈论安全性是件好事，但事实上，这是一个相当令人困惑的话题，一般公众对此并不是很熟悉。
- en: You'd like to think that when an end user is presented with a big, scary banner
    telling them that the site they're trying to hit isn't legitimate and that they'd
    click away as fast as they can... but this doesn't happen in a lot of cases.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能认为，当终端用户看到一个大而可怕的横幅，告诉他们他们试图访问的网站不是合法的，并且他们会尽快点击离开...但在很多情况下并不是这样。
- en: In reality, an unhealthy number of end users just get annoyed at having to click
    through a few warning, before they reach the site they want (or the site pretending
    to be the site they want).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，有很多终端用户只是因为不得不点击几次警告而感到恼火，然后才能到达他们想要的网站（或者假装是他们想要的网站）。
- en: Recent years have seen various attempts at damage limitation when it comes to
    users blindly accepting fake certificates, such as browsers making it mildly more
    annoying to add exceptions for websites, but still it happens.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，针对用户盲目接受假证书的各种尝试都在进行损害限制，例如浏览器使为网站添加例外变得更加烦人，但仍然会发生这种情况。
- en: This highlights a problem you will come across time and time again as a sysadmin,
    that of user-education, and making sure your users have a basic understanding
    of website security.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这突显了您作为系统管理员会一次又一次遇到的问题，即用户教育的问题，以及确保您的用户对网站安全有基本的了解。
- en: Basic MySQL or MariaDB Installation
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本的MySQL或MariaDB安装
- en: Databases are great—they keep **Database Administrators** (**DBAs**) in jobs,
    and they provide a convenient way of storing data on a system that isn't a series
    of randomly sized flat files in a directory.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库非常棒——它们让**数据库管理员**（**DBA**）有了工作，并且提供了一种在不是一个随机大小的平面文件系列的系统上存储数据的便捷方式。
- en: Traditionally, databases have been a great place to store ordered data of specific
    type and size, meaning that you get databases backing all sorts of things, from
    bank transaction records to website inventory numbers.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，数据库一直是存储特定类型和大小的有序数据的好地方，这意味着您可以在各种事物中找到支持数据库，从银行交易记录到网站库存数量。
- en: SQL databases are what people are most familiar with (more on NoSQL databases
    later), and one of the most common is MariaDB, which is a fork of MySQL.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: SQL数据库是人们最熟悉的数据库（稍后会介绍更多关于NoSQL数据库），其中最常见的之一是MariaDB，它是MySQL的一个分支。
- en: MariaDB was forked from MySQL after the acquisition of the latter by Oracle.
    This is perhaps an understandable concern, as a lot of people in the open source
    space view Oracle as evil, though naturally I have no strong feelings one way
    or the other.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: MariaDB是在Oracle收购MySQL后从MySQL分叉出来的。这可能是一个可以理解的担忧，因为开源领域的很多人认为Oracle是邪恶的，尽管我对此并没有强烈的感觉。
- en: If you run a Wordpress site, you may have already come across MariaDB or MySQL
    because they're the databases of choice for most people when setting up that particular
    blogging platform.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运行一个Wordpress网站，您可能已经遇到了MariaDB或MySQL，因为它们是大多数人在设置特定博客平台时的首选数据库。
- en: Getting ready
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In this section, we're going to be using our CentOS VM.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的CentOS虚拟机。
- en: We're leaving web servers for now, meaning that you don't have to worry about
    having completed the previous sections to proceed.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在暂时离开Web服务器，这意味着您无需担心必须完成前面的部分才能继续。
- en: 'Let''s hop on to our CentOS VM:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们跳到我们的CentOS虚拟机：
- en: '[PRE38]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: How to do it...
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'It''s considered a good practice to install software before you try to interact
    with it. Bearing this in mind, `install mariadb-server`:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试与其交互之前，安装软件被认为是一个好习惯。记住这一点，`install mariadb-server`：
- en: '[PRE39]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Next, ensure that it''s started and configured to start at boot (this can take
    a few seconds):'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，确保它已启动并配置为在启动时启动（这可能需要几秒钟）：
- en: '[PRE40]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Before we go any further, run the `mysql_secure_installation` script:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，运行`mysql_secure_installation`脚本：
- en: '[PRE41]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This will present you with a series of prompts. Answer them as follows:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为您提供一系列提示。回答如下：
- en: 'Enter current password for root (enter for none): `<BLANK, HIT ENTER>`'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入root的当前密码（如果没有，请按回车）：`<BLANK, HIT ENTER>`
- en: Set root password? `Y`
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置root密码？ `Y`
- en: 'New password: `examplerootpassword`'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新密码：`examplerootpassword`
- en: Remove anonymous users? `Y`
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除匿名用户？ `Y`
- en: Disallow root login remotely? `Y`
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁止远程登录root？ `Y`
- en: Remove test database and access to it? `Y`
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除测试数据库及其访问权限？ `Y`
- en: Reload privilege tables now? `Y`
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在重新加载权限表？ `Y`
- en: 'Remember: these are just examples for this book. There may be reasons why you
    need some of these settings, and you should always set a secure root password
    in the real world.'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：这些只是本书的示例。您可能有一些需要这些设置的原因，在现实世界中，您应该始终设置一个安全的root密码。
- en: 'Next, log in to your database:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，登录到您的数据库：
- en: '[PRE42]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: We gave the password directly on the command line here, for display purposes,
    however you can omit the actual password entirely, and instead have MariaDB prompt
    you for the password (this way it won't show up in your Bash history).
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里直接在命令行上给出了密码，仅供显示目的，但是您可以完全省略实际密码，并让MariaDB提示您输入密码（这样它就不会出现在您的Bash历史记录中）。
- en: Listing, creating, and selecting databases and tables
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出、创建和选择数据库和表
- en: 'From inside your new prompt, you''re now able to list the databases within
    `MariaDB` (confusing I know, but the database server (`MariaDB`) can have multiple
    databases that it manages):'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 从您的新提示符内部，您现在可以列出`MariaDB`中的数据库（我知道这有点混乱，但是数据库服务器（`MariaDB`）可以有多个它管理的数据库）：
- en: '[PRE43]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'We want to take a look at the built-in `mysql` database, so let''s flip to
    that:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要查看内置的`mysql`数据库，所以让我们切换到那里：
- en: '[PRE44]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Once we''re using this database, we can list the tables inside it:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们使用了这个数据库，我们就可以列出其中的表：
- en: '[PRE45]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now we can get information about specific tables. Here, we''re getting the
    `Host`, `User`, and `Password` from the `user` table:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以获取特定表的信息。在这里，我们从`user`表中获取`Host`、`User`和`Password`：
- en: '[PRE46]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: On top of this, we can create our own database and tables, too.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我们也可以创建自己的数据库和表。
- en: 'Let''s create `exampledb` as a database:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建`exampledb`作为一个数据库：
- en: '[PRE47]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'We can then `use` this database and add a table:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以`use`这个数据库并添加一个表：
- en: '[PRE48]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Let''s `describe` the table we just created, looking at our fields:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们`describe`一下我们刚刚创建的表，看看我们的字段：
- en: '[PRE49]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Next, populate it with some data:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，用一些数据填充它：
- en: '[PRE50]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now we can see what we''ve just put into our table by `selecting` the contents:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以通过`select`来查看我们刚刚放入表中的内容：
- en: '[PRE51]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'To exit your database, type `exit` (or hit *CTRL* + *D*):'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出你的数据库，输入`exit`（或按下*CTRL* + *D*）：
- en: '[PRE52]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: How it works...
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We installed MariaDB on our system and started it. As a result of that, we
    created several databases and associated data in the `/var/lib/mysql` directory:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在系统上安装了MariaDB并启动了它。作为结果，我们在`/var/lib/mysql`目录中创建了几个数据库和相关数据：
- en: '[PRE53]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After running through the `secure setup` script, we then entered our database
    using the password we''d just set:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`secure setup`脚本，然后使用刚刚设置的密码进入我们的数据库：
- en: '[PRE54]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: This dropped us into a completely different shell, one within the `MariaDB`
    program, which enabled us to manipulate the databases that `MariaDB` controls.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我们进入了一个完全不同的shell，一个在`MariaDB`程序内部的shell，它使我们能够操纵`MariaDB`控制的数据库。
- en: 'We created a database and a table inside it after a bit of poking around:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在四处探索后创建了一个数据库和其中的一个表：
- en: '[PRE55]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The table we specifically created had the name `exampletable`. We gave it two
    fields: a `food` field and a `goodbad` field.'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 我们特别创建的表名为`exampletable`。我们给它添加了两个字段：一个`food`字段和一个`goodbad`字段。
- en: 'We then inserted some data into the database:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们向数据库中插入了一些数据。
- en: '[PRE56]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'As it happens, because we set the `food` field to be a varchar of `10`, the
    strawberries entry was too long, leading it to be cut off:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将`food`字段设置为`10`的varchar，所以草莓条目太长，导致它被截断：
- en: '[PRE57]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: This highlights one of the good things about traditional SQL databases, where
    you can be very granular about the type of data that's stored in each field and
    how much data you can store there.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这突显了传统SQL数据库的一个好处，你可以非常精细地控制每个字段中存储的数据类型以及你可以在其中存储多少数据。
- en: 'This database now exists on our filesystem, as seen when we listed the `mysql`
    directory previously:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据库现在存在于我们的文件系统中，就像我们之前列出`mysql`目录时看到的那样：
- en: '[PRE58]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: When you reboot your system, the changes you made to the database will continue
    to exist.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 当你重新启动系统时，你对数据库所做的更改将继续存在。
- en: There's more...
  id: totrans-345
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As hinted at in the opening blurb, MariaDB is a fork of MySQL, which is the
    reason that while we installed `MariaDB` here, we also used the `mysql` series
    of commands for interacting with it. This was to ensure backwards compatibility.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 正如开头所暗示的，MariaDB是MySQL的一个分支，这就是为什么我们在这里安装了`MariaDB`，但我们也使用了与之交互的`mysql`系列命令。这是为了确保向后兼容。
- en: See also
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: There are also database permissions, which we haven't covered, and which are
    just as crucial as regular filesystem permissions. You don't want two Wordpress
    installations on the same host to be able to read the database of each other,
    so you would create a dedicated user for each and give them their own DB within
    Maria.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 还有数据库权限，我们还没有涉及，它们和常规文件系统权限一样重要。你不希望同一主机上的两个Wordpress安装能够读取彼此的数据库，所以你会为每个创建一个专用用户，并为他们分配自己的MariaDB。
- en: Basic PostgreSQL installation
  id: totrans-349
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本的PostgreSQL安装
- en: There's another popular SQL database out there, and I'm not talking about MSSQL
    (which is OK, and it even works on Linux these days!).
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一个流行的SQL数据库，我不是在说MSSQL（它还可以，在Linux上也可以运行！）。
- en: PostgreSQL (pronounce it however you want; everyone else does) has been around
    since 1996, and a lot of people swear by it as a vastly superior product to MySQL
    or MariaDB.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: PostgreSQL（无论你想怎么发音；其他人都这么做）自1996年以来一直存在，很多人都发誓它是比MySQL或MariaDB优秀得多的产品。
- en: Personally, I don't get all that excited about databases, so these sort of conversations
    usually pass me by in a haze of wondering-where-my-next-coffee-is-going-to-come-from.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 就我个人而言，我对数据库并不感到兴奋，所以这些对话通常会让我感到困惑，我会想下一杯咖啡从哪里来。
- en: Like MySQL and MariaDB, Postgres is available in a lot of default repositories,
    and a lot of popular software will give you the option of using Postgres as a
    backend instead of MariaDB.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 像MySQL和MariaDB一样，Postgres在很多默认仓库中都有，很多流行的软件都会给你选择使用Postgres作为后端而不是MariaDB的选项。
- en: Getting ready
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to use our CentOS machine once more.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将再次使用我们的CentOS机器。
- en: 'Hop on to our CentOS VM (or stay on it if you''re there already):'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 进入我们的CentOS虚拟机（或者如果你已经在那里就留在那里）：
- en: '[PRE59]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: How to do it...
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Like Maria, we actually have to install the software first:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Maria一样，我们实际上必须先安装软件：
- en: '[PRE60]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Unlike Maria, we have to set Postgres up before we can use it:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 与Maria不同，我们必须在使用Postgres之前设置它：
- en: '[PRE61]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'However, once that''s done, you can start and enable the server:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，一旦完成，你就可以启动并启用服务器了：
- en: '[PRE62]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Now, log into your database (in a slightly different fashion than Maria):'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，以一种略有不同的方式登录到你的数据库：
- en: '[PRE63]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Listing, creating, and selecting databases and tables
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出、创建和选择数据库和表
- en: Some people find it easier to remember Postgres commands and syntax compared
    to MariaDB and MySQL. Personally, I always have to look them up, which results
    in liberal use of `\?`, which drops you into the `help` menu.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人发现记住Postgres的命令和语法比记住MariaDB和MySQL更容易。就我个人而言，我总是不得不查找它们，这导致我频繁使用`\?`，这会让你进入`help`菜单。
- en: 'Starting at the basics, use `\l` to list all databases that Postgres manages:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 从基础开始，使用`\l`列出Postgres管理的所有数据库：
- en: '[PRE64]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'To create a database, we''re going to copy one of the two templates available
    to us:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个数据库，我们将复制我们可以使用的两个模板之一：
- en: '[PRE65]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'To change to our new database, use `\c`:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换到我们的新数据库，使用`\c`：
- en: '[PRE66]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: You might think that to list tables we would use `\t`, or perhaps `\lt`, but
    you'd be incorrect.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会认为要列出表，我们会使用`\t`，或者`\lt`，但你是错误的。
- en: 'To list tables in the current database, use `\dt`:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出当前数据库中的表，请使用`\dt`：
- en: '[PRE67]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'There''s none in this DB, so let''s create one:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数据库中没有，所以让我们创建一个：
- en: '[PRE68]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'We also need to populate it:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要填充它：
- en: '[PRE69]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Then, we need to describe it:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要描述它：
- en: '[PRE70]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Finally, we need to select from it:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要从中进行选择：
- en: '[PRE71]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Exit Postgres with `\q` or *CTRL* + *D*:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`\q`或*CTRL* + *D*退出Postgres：
- en: '[PRE72]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: How it works...
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'After installing Postgres, we end up with data in `/var/lib/pgsql`, like so:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Postgres后，我们会在`/var/lib/pgsql`中得到数据，如下所示：
- en: '[PRE73]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'We then logged into our database, using the user that was created for us during
    installation:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用在安装过程中为我们创建的用户登录到我们的数据库中：
- en: '[PRE74]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Once inside, we proceeded to create a database of our own, using `template1`
    as a template:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入，我们就开始创建我们自己的数据库，使用`template1`作为模板：
- en: '[PRE75]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '`template1` can be modified so that you can have a consistent starting point
    for new systems, though, again, I find that this is easier to store in `infrastructure
    as code` repositories nowadays.'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`template1`可以进行修改，以便您可以为新系统拥有一个一致的起点，尽管我发现这在当今更容易存储在`基础设施即代码`存储库中。'
- en: 'We created a table inside our database (after changing to it):'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在我们的数据库中创建了一个表（在切换到它之后）：
- en: '[PRE76]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Note that again we're defining specific fields, with types that are associated
    (`varchar` is a very flexible data type, but it's not a good idea to use it for
    everything. Using proper types for the sort of data you want to associate with
    a field is better for performance).
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 再次注意，我们正在定义特定字段，与相关的类型（`varchar`是一种非常灵活的数据类型，但不建议将其用于所有内容。对于与字段关联的数据类型使用适当的类型对于性能更好）。
- en: 'We populated our table with content, described, and selected from it:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用内容填充了我们的表，描述了它，并从中进行了选择。
- en: '[PRE77]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Hopefully, you've noted that a lot of the syntax we used in this section is
    the exact same as the syntax that was used in the MariaDB installation. There's
    a reason for this, and it's because of the name `SQL` that both of these databases
    carry.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 希望您已经注意到，我们在本节中使用的许多语法与MariaDB安装中使用的语法完全相同。这是有原因的，因为这两个数据库都带有`SQL`这个名称。
- en: Structured Query Language is reasonably consistent, but it's not the case that
    a command used in one SQL DB will be copy-and-pastable into another DB. Sadly,
    that's a pipe dream for the most part.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化查询语言是相当一致的，但并不是在一个SQL数据库中使用的命令可以直接复制到另一个数据库中。遗憾的是，这在大多数情况下都是一个白日梦。
- en: Outside of the table and database manipulation commands (`\l`, `\dt`, and so
    on), you'd be forgiven for confusing Postgres and Maria syntax, but it's sometimes
    just different enough to be annoying.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 除了表和数据库操作命令（`\l`，`\dt`等），您可能会因为混淆Postgres和Maria语法而受到宽恕，但有时它们之间的差异足够让人讨厌。
- en: We've also not added MSSQL into the mix.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有将MSSQL加入其中。
- en: If you ever hear someone refer to SQL as seeqwel, instead of S.Q.L., there's
    a good chance they've picked up the name from a Windows DBA, or someone old enough
    to remember SQL was originally the "Structured English Query Language". It no
    longer has an "e" in the name, but some people insist on creating this ephemeral
    "e" when they pronounce the acronym.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你听到有人将SQL称为seeqwel，而不是S.Q.L.，那么他们很可能是从Windows数据库管理员那里学来的，或者是足够老以至于记得SQL最初是“结构化英语查询语言”。它的名字不再有“e”，但有些人坚持在发音时加上这个短暂的“e”。
- en: Holy wars...
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 圣战...
- en: Local MTA usage and configuration (Postfix)
  id: totrans-407
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地MTA使用和配置（Postfix）
- en: Email still exists, and while this is a travesty in itself, it also offers us
    the opportunity to look at why you might find yourself interacting with a mail
    server in your day-to-day job.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件仍然存在，虽然这本身就是一种悲剧，但它也为我们提供了机会，让我们看看为什么您可能会在日常工作中与邮件服务器进行交互。
- en: Traditionally, servers sometimes ran a series of checks on a nightly or weekly
    basis before compiling the results into a document and firing it off to the sysadmin,
    who could then peruse the report and pick up on anomalies or unexpected behavior.
    Mostly, this is a forgotten art, and very few people ever bother to configure
    the default mailing location on their system to be anything other than `root@localhost`.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，服务器有时会在每晚或每周进行一系列检查，然后将结果编制成文档并发送给系统管理员，然后管理员可以查看报告并发现异常或意外行为。大多数情况下，这已经是一种被遗忘的艺术，很少有人会费心去配置系统上的默认邮件位置，使其不再是`root@localhost`。
- en: It's for this reason that you occasionally see `you have new mail` or a similar
    notification when you log into a console. The mail in there is usually something
    that you don't care too much about, from a program that informed you it was broken
    in a different way five days before.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 正是因为这个原因，你偶尔会看到`you have new mail`或类似的通知，当你登录控制台时。那里的邮件通常是你不太在意的东西，来自一个在五天前以不同方式通知你它出了问题的程序。
- en: That's not to say that mail isn't important—it's still actively used by monitoring
    systems as a first "alert" method, and, as surprising as it sounds, some people
    really do still run their own mail servers (though, these days, you're more likely
    to find a company using an off-the-shelf solution such as ProtonMail, configured
    with their own domain records).
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说邮件不重要——它仍然被监控系统作为第一种“警报”方法积极使用，而且，尽管听起来令人惊讶，一些人确实仍然在运行他们自己的邮件服务器（尽管如今，您更有可能发现一家公司使用ProtonMail等现成解决方案，并配置了他们自己的域记录）。
- en: Email has issues, even when used as an alerting method in a monitoring system.
    I've lost count of the number of places I've been who've had a Nagios, Icinga2,
    or Zabbix set up, configured to email out when there's a problem, but also when
    the problem goes away, or when there might possibly be a problem that someone
    should look at. An alert email can mount up fast, resulting in alert fatigue when
    engineers simply pipe their email to a `junk` folder and never check it (except
    when it gets too full and they occasionally empty it out). Text messages are a
    much more annoying method of alerting—try those.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件存在问题，即使在监控系统中用作警报方法时也是如此。我已经失去了对我去过的许多地方的数量，他们都设置了Nagios、Icinga2或Zabbix，配置为在出现问题时发送电子邮件，但也在问题消失时发送，或者在可能出现问题时应该查看时发送。警报邮件可能会迅速增加，导致工程师产生警报疲劳，他们只是将他们的电子邮件发送到`junk`文件夹中，并且从不检查它（除非它变得太满，他们偶尔清空它）。短信是一种更烦人的警报方法-尝试一下。
- en: Getting ready
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to use our CentOS VM, mostly because Postfix is
    installed by default on CentOS boxes.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的CentOS虚拟机，主要是因为CentOS默认安装了Postfix。
- en: 'Log on to your CentOS box and make sure that Postfix is running:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到您的CentOS服务器，并确保Postfix正在运行：
- en: '[PRE78]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'If it''s not installed and not running, you can simply install the `postfix`
    package:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它没有安装并且没有运行，您可以简单地安装`postfix`软件包：
- en: '[PRE79]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: How to do it...
  id: totrans-419
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Mostly, you'll find that Postfix is already installed and configured, so let's
    trawl through what we've got out of the box and look at some common utilities.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，您会发现Postfix已经安装和配置好了，所以让我们浏览一下我们已经准备好的内容，并查看一些常见的实用程序。
- en: 'First, let''s check which MTA your system is configured to use by using the
    `alternatives` command:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用`alternatives`命令检查系统配置为使用哪个MTA：
- en: '[PRE80]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: This tells us that the system is utilizing Postfix to send mail.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们系统正在使用Postfix发送邮件。
- en: 'Try sending some mail to an example address. For this, we first need to install
    a small command line, that is, `mailx`:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试向示例地址发送一些邮件。为此，我们首先需要安装一个小的命令行，即`mailx`：
- en: '[PRE81]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'You can now run the following mail command, writing whatever you want into
    the newlines (and ending the email with a single `.` on the last line):'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以运行以下邮件命令，将您想要的内容写入新行（并在最后一行以单个`.`结束邮件）：
- en: '[PRE82]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'If we now type `mail` again, we get dropped into the mail shell:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在再次输入`mail`，我们将进入邮件shell：
- en: '[PRE83]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Note what we're informed that we have one message, one of which is unread, and
    below that we get the emboldened line, with the subject in quotes.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们被告知我们有一条消息，其中有一条未读消息，然后我们看到了加粗的行，主题用引号括起来。
- en: 'To open the message, type in the number corresponding to the message in question:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开消息，请输入与问题消息对应的数字：
- en: '![](img/0f6609d1-30b9-40b0-97de-f17a22a38e87.png)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f6609d1-30b9-40b0-97de-f17a22a38e87.png)'
- en: You're dropped into a pager, which allows you to scroll through your message.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 您将进入一个分页器，可以让您滚动查看消息。
- en: You can see a few important things in this message, the first of which being
    that the responding system is `MAILER-DAEMON@centos1.localdomain` (mail delivery
    system), which suggests that our message didn't get very far.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 在这条消息中，您可以看到一些重要的内容，首先是响应系统是`MAILER-DAEMON@centos1.localdomain`（邮件传递系统），这表明我们的消息并没有传得很远。
- en: The email then suggests some things you can do to help alleviate your issue,
    the first of which is contact `the postmaster`, who, like the pagemaster from
    the film of the same name, tends to have a certain ethereal quality.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，电子邮件建议您可以采取一些措施来帮助缓解您的问题，其中首先是联系`邮件管理员`，就像同名电影中的页码大师一样，往往具有一定的超凡品质。
- en: At the bottom, you get a snippet of your email.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 在底部，您会看到您的电子邮件的一部分。
- en: What does this tell us? Well, first and foremost, it tells us that your mail
    server can't send the message you just attempted to email.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们什么？首先，它告诉我们您的邮件服务器无法发送您刚刚尝试发送的消息。
- en: Next, it tells us that Postfix is functioning enough to process mail, because
    a bounce is still mail.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，它告诉我们Postfix正在运行足够处理邮件，因为退信仍然是邮件。
- en: main.cf
  id: totrans-439
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: main.cf
- en: Postfix uses a primary configuration file at `/etc/postfix/main.cf`.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix使用主配置文件`/etc/postfix/main.cf`。
- en: This file contains a lot of configuration options, but out of the box, it's
    not configured to do much of anything (it won't accept incoming mail from another
    system, for example).
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件包含了很多配置选项，但是默认情况下，它没有配置为执行任何操作（例如，它不会接受来自另一个系统的传入邮件）。
- en: /etc/aliases
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: /etc/aliases
- en: This is the database, or map, of accounts that receive certain mail.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 这是接收某些邮件的帐户的数据库或映射。
- en: 'Generally, the only configuration change made in this file is the destination
    for the root''s mail. On a local system, you could map this to your user:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在此文件中进行的唯一配置更改是root邮件的目的地。在本地系统上，您可以将此映射到您的用户：
- en: '[PRE84]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Then, you run `newaliases` to apply this change:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您运行`newaliases`来应用此更改：
- en: '[PRE85]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Again, it's not done frequently, but some people still like to grab emails that
    are intended for root just to make sure that random programs aren't dying and
    screaming into the void as they're claimed by the reaper.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不经常这样做，但有些人仍然喜欢获取发送给root的电子邮件，以确保没有随机程序死掉并在被收割者夺走时尖叫。
- en: How it works...
  id: totrans-449
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'For more detailed output on what''s going on when your message fails to send,
    you can usually check `/var/log/maillog`:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关消息发送失败时发生的情况的更详细输出，通常可以检查`/var/log/maillog`：
- en: '[PRE86]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Here, we get a bit of detail around what happened, and if we find the message
    we want, we can follow the `message-id` through the thread of the message.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到发生了什么，并且如果我们找到想要的消息，我们可以通过消息的`message-id`跟踪消息的线程。
- en: 'First, we can see the message being picked up by Postfix:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以看到Postfix正在接收消息：
- en: '[PRE87]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Next, the daemon processes the message before passing it to the mail queue:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，守护进程在将消息传递到邮件队列之前处理消息：
- en: '[PRE88]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'We learn that the message is on the queue, waiting to be sent:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得知消息在队列中，等待发送：
- en: '[PRE89]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Finally (for this message), SMTP tries to process the mail:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 最后（对于这条消息），SMTP尝试处理邮件：
- en: '[PRE90]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: It immediately fails because the domain isn't real.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 它立即失败，因为域名不真实。
- en: 'A bounce message is created, that is, `A88F7206B118`, and processed (while
    the original message, `8E9A1206B117`, is removed):'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个退信消息，即`A88F7206B118`，并进行处理（原始消息`8E9A1206B117`被删除）：
- en: '[PRE91]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'This is done before being sent to the local user, who initiated the mail attempt
    in the first place:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 在发送给本地用户之前完成此操作，该用户最初发起了邮件尝试：
- en: '[PRE92]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'It lands in `/var/spool/mail/vagrant`, as denoted by this friendly message:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 它会落在`/var/spool/mail/vagrant`，如下友好的消息所示：
- en: '[PRE93]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Each of the steps here is done by Postfix, with one master daemon being responsible
    for a lot of little daemons, each of which has a specific job.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的每个步骤都是由Postfix完成的，一个主守护进程负责许多小守护进程，每个守护进程都有一个特定的工作。
- en: 'If we run `ps` and look for the `postfix` daemon, you''ll find something such
    as this:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行`ps`并查找`postfix`守护程序，你会发现类似这样的东西：
- en: '[PRE94]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '`qmgr`, as the name suggests, is the queue manager, and pickup is for local
    mail pickup.'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '`qmgr`，顾名思义，是队列管理器，而pickup是用于本地邮件接收的。'
- en: 'To view the queue, you can use the `postqueue` command:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看队列，可以使用`postqueue`命令：
- en: '[PRE95]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Here, you can see a message I sent to `contact@nasa.com`. This doesn't work
    because our connection attempt gets refused.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到我发送给`contact@nasa.com`的消息。这不起作用，因为我们的连接尝试被拒绝了。
- en: Also, note port `25`, a traditional mail-receiving port.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意端口`25`，这是一个传统的邮件接收端口。
- en: 'If you wanted to empty the queue, you''d use `postsuper`, like so:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想清空队列，可以使用`postsuper`，如下所示：
- en: '[PRE96]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: You can also `flush` mail queues, which attempts redelivery of the mail in them.
    Generally, though, unless you've fixed the problem that caused undeliverable mail
    in the first place, you've just caused the mail to fail again. What's more, you've
    probably ground your server to a halt in the process.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以`flush`邮件队列，尝试重新投递其中的邮件。不过，通常情况下，除非您已解决了导致邮件无法投递的问题，否则您只是导致邮件再次失败。更重要的是，您可能在这个过程中使您的服务器陷入停滞。
- en: There's more...
  id: totrans-479
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Postfix is a **Mail Transport Agent** (**MTA**).
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix是一个邮件传输代理（MTA）。
- en: Sadly, this isn't a book on configuring mail servers, because there are many,
    many books on this subject already. All you need to be aware of is how to interact
    with a default Postfix installation, should you ever come across one in the wild.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，这不是一本关于配置邮件服务器的书，因为这个主题已经有很多很多书了。你只需要知道如何与默认的Postfix安装进行交互，如果你在野外遇到它，那么你就需要知道。
- en: If you want to know more about Postfix, or want to run your own mail server,
    I would advise against it. However, if you came back and said you really, really
    wanted to run your own mail server, I would suggest sitting down with Postfix
    for a weekend, reading up on best practices (don't create an open-relay, for example),
    and trying not to give up immediately. All power to you.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于Postfix的信息，或者想运行自己的邮件服务器，我建议您不要这样做。不过，如果您回来说您真的非常想运行自己的邮件服务器，我建议您花一个周末时间研究一下Postfix，了解最佳实践（例如，不要创建开放中继），并尽量不要立即放弃。祝您好运。
- en: Really, though, most companies these days either use some form of Exchange server,
    or they're just using Google, ProtonMail, FastMail, and so on instead.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，如今大多数公司要么使用某种形式的Exchange服务器，要么只是使用Google、ProtonMail、FastMail等。
- en: See also
  id: totrans-484
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: It's worth reading up on email because there actually is a good chance that
    you'll find yourself opening an email one day to look at the headers. Understanding
    why email works in the way it does (that is, handing off a message to the next
    mail server in a chain, until it eventually gets to the end user) can be very
    valuable in this context.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 值得阅读电子邮件，因为实际上有很大的机会，你会发现自己有一天要打开一封电子邮件查看标题。了解电子邮件为什么以这种方式工作（即将消息传递给链中的下一个邮件服务器，直到最终到达最终用户）在这种情况下可能非常有价值。
- en: I may expand this section in the future, if the notion of running your own email
    server sees some miraculous resurgence.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 如果自己运行邮件服务器的想法出现了奇迹般的复苏，我可能会在将来扩展这一部分。
- en: Local MTA usage and configuration (Exim)
  id: totrans-487
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地MTA使用和配置（Exim）
- en: Like Postfix, we have Exim, which is another MTA.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 与Postfix一样，我们还有Exim，这是另一个MTA。
- en: Where Postfix is powerful and has its focus on security, Exim is known for being
    extremely customizable, and with a pedigree that goes all the way back to 1995
    (inching out Postfix by three years). It's been the favorite of the Debian project
    for years, and, as a result, a lot of the documentation on setting up a mail server
    references Exim.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix强大之处在于其专注于安全性，而Exim以其极高的可定制性而闻名，其历史可以追溯到1995年（比Postfix早三年）。多年来，它一直是Debian项目的首选，因此很多关于设置邮件服务器的文档都引用了Exim。
- en: Also, like Postfix, this won't be a long section on fully configuring Exim,
    as that would require something much longer than a section, chapter, or realistically
    a book when done right. Instead, we're going to look at some configuration, the
    Exim log file, and what happens when you try to send a message from your local
    system.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 与Postfix一样，这不会是一个完全配置Exim的长篇章节，因为这需要比一个章节、一本书更长的东西。相反，我们将看一些配置、Exim日志文件以及在尝试从本地系统发送消息时会发生什么。
- en: Getting ready
  id: totrans-491
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: In this section, we're going to use our Debian machine.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的Debian机器。
- en: 'To ensure that Exim is installed on your system, run the following:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保Exim已安装在您的系统上，请运行以下命令：
- en: '[PRE97]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: There's quite a few packages in the Exim suite, and it can take some time to
    run through them all.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: Exim套件中有相当多的软件包，可能需要一些时间来运行它们。
- en: 'Check it''s running with `systemctl status`:'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`systemctl status`检查是否正在运行：
- en: '[PRE98]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: How to do it...
  id: totrans-498
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Post-installation, let's quickly test what the mail server looks like out of
    the box.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，让我们快速测试一下邮件服务器的默认外观。
- en: 'Starting by sending an example mail:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 通过发送一个示例邮件开始：
- en: '[PRE99]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'If we now run `mail` again, we''ll see our bounced message:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在再次运行`mail`，我们会看到我们的退信消息：
- en: '[PRE100]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'Again, hitting `1` and *Enter* will load the first message:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 再次按下`1`和*Enter*将加载第一条消息：
- en: '![](img/04855435-4d86-411b-8732-5c892f134641.png)'
  id: totrans-505
  prefs: []
  type: TYPE_IMG
  zh: '![](img/04855435-4d86-411b-8732-5c892f134641.png)'
- en: Here, we actually get the helpful message `Mailing to remote domains not supported`
    as the server in question is incapable of doing so.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们实际上得到了有用的消息`不支持发送到远程域`，因为所涉及的服务器无法执行此操作。
- en: 'With Exim, you can also test how it might route mail to a given address with
    the `address testing mode`. When given the preceding address, it prints a familiar
    message:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Exim，您还可以测试如何将邮件路由到给定地址的`地址测试模式`。给定前面的地址时，它会打印一个熟悉的消息：
- en: '[PRE101]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'It even tells you it''s non-local, whereas if we give the same command, replacing
    the fake email with a local user, we get the following:'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 它甚至告诉你它是非本地的，而如果我们用相同的命令，用本地用户替换假电子邮件，我们会得到以下结果：
- en: '[PRE102]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The transport used is the local `mail_spool`, and there's no messages about
    mail being undeliverable.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的传输是本地`mail_spool`，没有关于邮件无法投递的消息。
- en: 'We can also use `ss` to confirm that our mail server is only listening on port
    `25` locally (`127.0.0.1 & ::1`):'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`ss`来确认我们的邮件服务器只在本地（`127.0.0.1和::1`）上监听端口`25`：
- en: '[PRE103]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: How it works...
  id: totrans-514
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Exim configuration is found in the `/etc/exim4` folder on our Debian host.
    Listing this file looks as follows:'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的Debian主机上，Exim配置位于`/etc/exim4`文件夹中。列出此文件的内容如下：
- en: '[PRE104]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: The configuration file that's being actively used is the `update-exim4.conf.conf`
    file (yes, that's `.conf` twice).
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 正在积极使用的配置文件是`update-exim4.conf.conf`文件（是的，`.conf`出现了两次）。
- en: 'This file looks as follows out of the box:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件的原始内容如下：
- en: '[PRE105]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'It can, however, be amended, as the file suggests, by using `sudo dpkg-reconfigure
    exim4-config`:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，可以根据文件的建议使用`sudo dpkg-reconfigure exim4-config`进行修改：
- en: '[PRE106]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'This will drop you into a TUI, which looks like this:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使您进入一个TUI，看起来像这样：
- en: '![](img/ab2b9dcd-4a4f-4ae3-a584-717ccb099dda.png)'
  id: totrans-523
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab2b9dcd-4a4f-4ae3-a584-717ccb099dda.png)'
- en: Here, you can reconfigure your mail server to your liking, including setting
    it up as an internet mail server.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以根据自己的喜好重新配置邮件服务器，包括将其设置为Internet邮件服务器。
- en: Once done to your liking, you will find that the configuration file has been
    updated to reflect those settings.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦按照您的喜好完成，您会发现配置文件已经更新以反映这些设置。
- en: 'If you want to know whether certain configuration settings have taken effect,
    you can use the `exiwhat` command, as follows:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想知道某些配置设置是否生效，可以使用`exiwhat`命令，如下所示：
- en: '[PRE107]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Exim, like Postfix, also supplies a helpful `maillog`, though in the case of
    Exim, it''s called the `mainlog` and it''s generally in a specific `exim` directory:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: Exim，像Postfix一样，还提供了一个有用的`maillog`，尽管在Exim的情况下，它被称为`mainlog`，通常位于特定的`exim`目录中：
- en: '[PRE108]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'The contents is relatively familiar:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 内容相对熟悉：
- en: '[PRE109]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'We can see some fairly obvious lines in here that we can expand on, too:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在这里看到一些相当明显的行，我们也可以对其进行扩展：
- en: '[PRE110]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'The following message has arrived `from vagrant@debian1` (`<=`):'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 已经收到了以下消息`from vagrant@debian1`（`<=`）：
- en: '[PRE111]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The delivery of the message failed, as the address bounced (`**`):'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 邮件传递失败，因为地址被退回（`**`）：
- en: '[PRE112]'
  id: totrans-537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'A new message has been received from Debian-exim:'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 从Debian-exim收到了一条新消息：
- en: '[PRE113]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'The original message''s journey has come to an end:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 原始消息的旅程已经结束：
- en: '[PRE114]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'The new message has gone out to the vagrant user (`=>`):'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 新消息已发送给vagrant用户（`=>`）：
- en: '[PRE115]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: The new message's journey has now ended too.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 新消息的旅程现在也已经结束了。
- en: There's more...
  id: totrans-545
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: I've got to give a shout out here to an indispensable site for Exim troubleshooting: [http://bradthemad.org/tech/notes/exim_cheatsheet.php](http://bradthemad.org/tech/notes/exim_cheatsheet.php).
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须在这里向Exim故障排除提供一个不可或缺的网站的赞扬：[http://bradthemad.org/tech/notes/exim_cheatsheet.php](http://bradthemad.org/tech/notes/exim_cheatsheet.php)。
- en: If you ever find yourself stuck on that one thing you know Exim can do, or you're
    certain there's a specific query for the information you're trying to glean, check
    out Brad's Exim Cheatsheet—you won't be the first.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现自己卡在Exim可以执行的某个操作上，或者确定有特定的查询可以获取您要获取的信息，请查看Brad的Exim备忘单-您不会是第一个。
- en: Thanks Brad, for helping administrators everywhere.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢Brad，帮助所有管理员。
- en: NoSQL documents (MongoDB example)
  id: totrans-549
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NoSQL文档（MongoDB示例）
- en: We took a look at **Structured Query Language** (**SQL**) services earlier,
    in the form of MariaDB and PostgreSQL. Now we're going to look at the "newer"
    way of storing data in a database, in a NoSQL fashion.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前已经看过**结构化查询语言**（**SQL**）服务，以MariaDB和PostgreSQL的形式。现在我们将看看以NoSQL方式在数据库中存储数据的“新”方式。
- en: Unlike the table-based relationships of more traditional databases, NoSQL databases
    store data in other ways (such as key-value stores, tuple stores, or document
    stores). They've come to prominence in recent years due to the sudden and abrupt
    influx of big data products to the market, which rely on such databases for storage
    a lot of the time.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统数据库的基于表的关系不同，NoSQL数据库以其他方式存储数据（如键值存储、元组存储或文档存储）。由于市场上突然涌入大量大数据产品，这些数据库在最近几年变得突出，这些产品大多时候依赖这些数据库进行存储。
- en: NoSQL databases can take a few different forms, as hinted at previously, and
    we'll be taking a look at an example of one in the next section (Redis).
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL数据库可以采用几种不同的形式，如先前暗示的，我们将在下一节中看一个示例（Redis）。
- en: When thinking about why you might use a NoSQL database in place of a traditional
    one, you might consider aspects such as scalability, flexibility, and speed, all
    of which can be features of good NoSQL setups.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑为什么要使用NoSQL数据库代替传统数据库时，您可能会考虑可伸缩性、灵活性和速度等方面，所有这些都可以是良好NoSQL设置的特点。
- en: The term **database** is perhaps more loosely and accurately applied to NoSQL
    setups, which can be a base for data, but that might not require the use of structured
    storage for the data they contain.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**数据库**可能更松散和准确地应用于NoSQL设置，这可能是数据的基础，但可能不需要为其包含的数据使用结构化存储。
- en: We're going to install MongoDB in this section, and take a look at the way data
    is stored in its databases.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将安装MongoDB，并查看其数据库中存储数据的方式。
- en: 'LARGE DISCLAIMER:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 大免责声明：
- en: 'MongoDB is perhaps infamous for being a target for unscrupulous members of
    hacking society. This is because MongoDB can be installed with default settings
    that let it listen on the internet, on an open port, without any sort of access
    requirements enabled. THIS IS BAD, and you should always consider the security
    implications of what you''re doing, prior to doing them. As with any application,
    security is primarily the responsibility of the administrator doing the installation
    and management. I go on and on about security in certain sections of this book,
    but it''s important to hammer the point home. Too often, I''ve seen lackadaisical
    approaches to deploying servers (of all kinds) that result in a great big hole
    in your network. When given free reign, I''ve seen some very intelligent people
    do very silly things without thinking about it (such as leaving default admin
    credentials set on a public-facing build server), and Hanlon''s razor always applies:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB可能因为成为黑客社会不道德成员的目标而臭名昭著。这是因为MongoDB可以使用默认设置安装，让它在互联网上监听，开放端口，而没有启用任何形式的访问要求。这是不好的，你应该在做任何事情之前考虑安全问题。与任何应用程序一样，安全性主要是管理员安装和管理的责任。我在本书的某些部分详细讨论了安全性，但强调这一点很重要。我经常看到对部署服务器（各种类型的服务器）采取漫不经心的方法，导致网络中出现一个很大的漏洞。在有自由裁量权的情况下，我看到一些非常聪明的人在不考虑后果的情况下做了一些非常愚蠢的事情（比如在面向公众的构建服务器上保留默认的管理员凭据），汉隆剃刀定律总是适用的：
- en: '"Never attribute to malice that is adequately explained by stupidity."'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: “永远不要归因于恶意，那可以充分解释为愚蠢。”
- en: Getting ready
  id: totrans-559
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'In this section, we''re going to be using our CentOS machine, SSH to it:'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的CentOS机器，通过SSH连接到它：
- en: '[PRE116]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Install the EPEL repository, and then MongoDB:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 安装EPEL存储库，然后安装MongoDB：
- en: '[PRE117]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: We're using the EPEL repository for convenience here, but there are more ways
    to install MongoDB. Specifically, using the official repositories is the recommended
    approach for production systems.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用EPEL存储库是为了方便，但安装MongoDB还有更多的方法。具体来说，使用官方存储库是生产系统的推荐方法。
- en: How to do it...
  id: totrans-565
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Once installed, you can start and enable MongoDB with the `mongod` daemon:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，你可以使用`mongod`守护进程启动和启用MongoDB：
- en: '[PRE118]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'By default, MongoDB will start on localhost port 27017, but confirm this using
    `ss` or other tools:'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，MongoDB将在本地主机端口27017上启动，但使用`ss`或其他工具进行确认：
- en: '[PRE119]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'Once started, you can connect to your database using the `mongo` command-line
    tool:'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动，你可以使用`mongo`命令行工具连接到你的数据库：
- en: '[PRE120]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'The output of the preceding command is as follows:'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下：
- en: '![](img/f758a9d2-40e5-4b76-b3f2-de17647abac0.png)'
  id: totrans-573
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f758a9d2-40e5-4b76-b3f2-de17647abac0.png)'
- en: 'Note that we connected to `test` by default. We can confirm what DB we''re
    connected to (if we missed the notification) with the `db` command:'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们默认连接到了`test`。如果我们错过了通知，我们可以用`db`命令确认我们连接到了哪个数据库：
- en: '[PRE121]'
  id: totrans-575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'We can change databases easily (and in familiar fashion) by using `use`:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`use`轻松地（并且以熟悉的方式）切换数据库：
- en: '[PRE122]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Within our current database, we can see the collections. Because we''ve switched
    to `local`, these look as follows:'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们当前的数据库中，我们可以看到集合。因为我们切换到了`local`，所以它们看起来是这样的：
- en: '[PRE123]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'The syntax for working with collections is `db.<collection name>.<blah>`, so
    if we wanted to query everything within the `startup_log` collection, we could
    do the following:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 与集合一起工作的语法是`db.<collection name>.<blah>`，所以如果我们想查询`startup_log`集合中的所有内容，我们可以这样做：
- en: '[PRE124]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'Obviously, this is a bit messy, so we can use `.pretty()` to make it nicer
    to read:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这有点混乱，所以我们可以使用`.pretty()`使其更易于阅读：
- en: '[PRE125]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: You should already be seeing similarities with SQL databases, though the syntax
    is wildly different in a lot of cases.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经看到与SQL数据库的相似之处，尽管在许多情况下语法有很大的不同。
- en: 'Let''s flip back to our `test` database and create a collection of our own:'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的`test`数据库，并创建一个我们自己的集合：
- en: '[PRE126]'
  id: totrans-586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Now, by performing a find on this collection, we should see the data we just
    shoved in:'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过对这个集合进行查找，我们应该看到我们刚刚插入的数据：
- en: '[PRE127]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Let''s add another line, this time with some more fields:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再添加一行，这次加上更多的字段：
- en: '[PRE128]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'Let''s perform our find again:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次执行我们的查找：
- en: '[PRE129]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Note that while our insert was fine, the `2.0` from the `first_version` field
    has been simplified to an integer.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，虽然我们的插入是正常的，但`first_version`字段中的`2.0`已经简化为整数。
- en: 'If we wanted to narrow down our search, we could specifically search for entries
    with the `name` of Ubuntu:'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想缩小我们的搜索范围，我们可以专门搜索`name`为Ubuntu的条目：
- en: '[PRE130]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Alternatively, if we wanted to print specific values only (just the names here),
    we could use the following:'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果我们只想打印特定的值（这里只是名称），我们可以使用以下命令：
- en: '[PRE131]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Note the odd structure of this query, where we've specified `1` to include the
    name, but `0` to omit the `_id`, which is included by default.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这个查询的奇怪结构，我们指定了`1`来包括名称，但指定了`0`来省略`_id`，这是默认包含的。
- en: 'There''s plenty of other things you can do, including searching by a specific
    query (in this case, looking for all entries with an `initial_year` greater than
    `2004`):'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多其他事情可以做，包括按特定查询搜索（在这种情况下，查找所有`initial_year`大于`2004`的条目）：
- en: '[PRE132]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Specifically, though, we're interested in differences between this method of
    storing data and a traditional method.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们对存储数据的这种方法和传统方法之间的区别感兴趣。
- en: How it works...
  id: totrans-602
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Since we're working with `documents` and things are being created on the fly
    (rather than having tables that are populated with a strict dataset), our preceding
    commands can seem a lot more ad hoc than traditional databases would perform.
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在处理`文档`，并且事情是即兴创建的（而不是有一个严格数据集的表），我们之前的命令似乎比传统数据库更加临时。
- en: 'When we created our collection, we didn''t have to define anything. We simply
    started writing data inside our test database:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们创建我们的集合时，我们不必定义任何东西。我们只是在我们的测试数据库中写入数据：
- en: '[PRE133]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: From there, we were able to add more data, only to then start querying what
    we'd just written.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里，我们能够添加更多的数据，然后开始查询我们刚刚写入的数据。
- en: The data we added subsequently didn't really matter, and while there were correlations
    in the documents we wrote, such as the name, developer, and `initial_year` fields,
    there were some fields that were unique to our second insert. The database didn't
    care.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 随后添加的数据并不重要，虽然我们写入的文档中存在一些关联，比如名称、开发者和“initial_year”字段，但也有一些字段是唯一的。数据库并不在乎。
- en: Because of this method of storing data in a database, NoSQL systems can be seen
    as a lot more flexible in terms of input.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这种存储数据的方法，NoSQL系统在输入方面可以被视为更加灵活。
- en: This data is now stored within MongoDB, ready to be accessed quickly and easily
    by any program that wants to query it (commonly something such as a Node.js application).
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据现在存储在MongoDB中，任何想要查询它的程序都可以快速轻松地访问（通常是诸如Node.js应用程序之类的东西）。
- en: 'We can see exactly where the `dbPath` value is using another query:'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用另一个查询准确查看“dbPath”值的位置：
- en: '[PRE134]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'This means that we can also view it on our host system:'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们也可以在我们的主机系统上查看它：
- en: '[PRE135]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: There's more...
  id: totrans-614
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: I suggested the EPEL version of MongoDB is old. At the time of writing this
    is true, so it's a good idea to try the most recent version from the upstream
    repositories, if you'd like to use MongoDB for your own systems.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议使用的MongoDB的EPEL版本已经过时。在撰写本文时是如此，因此，如果您想要为自己的系统使用MongoDB，最好从上游存储库中尝试最新版本。
- en: Again, I would hammer the point home that enabling some sort of security on
    your system is also a must if you plan on using it in production.
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次强调，如果您计划在生产中使用它，启用某种安全性也是必须的。
- en: Also, if you're still trying to think of a situation where NoSQL databases could
    be more useful than traditional PostgreSQL or MySQL setups, think of something
    such as logging.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您仍在尝试考虑NoSQL数据库何时可能比传统的PostgreSQL或MySQL设置更有用，请考虑诸如日志记录之类的情况。
- en: You would hope that a log file is consistent, with the same fields, and the
    same type of data in each. However, log files might change, their order could
    be different, the types could suddenly change, and the number of fields could
    increase.
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望日志文件是一致的，具有相同的字段和相同类型的数据。但是，日志文件可能会发生变化，它们的顺序可能会不同，类型可能会突然改变，字段的数量可能会增加。
- en: If you're using a traditional database as the backend for these logs (perfectly
    possible), you would have to add new tables in the best case, or use a different
    database entirely in the worst case.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将传统数据库用作这些日志的后端（完全可能），您将不得不在最好的情况下添加新表，或者在最坏的情况下完全使用不同的数据库。
- en: Piping these same logs into a NoSQL system, one specifically designed to deal
    with documents, shouldn't impact the running of the system at all, as the collection
    will simply adapt to the new information you've provided.
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些相同的日志导入NoSQL系统，一个专门设计用于处理文档的系统，不应该对系统的运行产生影响，因为集合将简单地适应您提供的新信息。
- en: NoSQL KV (Redis example)
  id: totrans-621
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NoSQL KV（Redis示例）
- en: We've had a look at one type of NoSQL database already, in the form of MongoDB
    (a document-specific instance). Now we're going to look at a different type of
    NoSQL database, specifically Redis, which is a **key-value** (**KV**) offering.
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过一种类型的NoSQL数据库，即MongoDB（一个特定于文档的实例）。现在我们将看一看另一种类型的NoSQL数据库，具体来说是Redis，它是一种**键-值**（**KV**）数据库。
- en: Its unique selling point is the fact it's an entirely in-memory database (with
    some writing out to disk periodically, if desired). This means that Redis is not
    only a great cache for storing the data you're manipulating or using, but it's
    also extremely fast.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 它的独特卖点是它是一个完全的内存数据库（如果需要，定期写入磁盘）。这意味着Redis不仅是一个用于存储您正在操作或使用的数据的缓存，而且速度非常快。
- en: Because of Redis's design, it is a commonly seen component in web stack setups,
    where speed is important for processing requests efficiently.
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Redis的设计，它常见于Web堆栈设置中，速度对于高效处理请求非常重要。
- en: Of note is one criticism of NoSQL databases that is used in regard to Redis
    and others, where data can be lost easily under specific scenarios. Because Redis
    stores its data primarily in memory, writing out to disk occasionally, there is
    a chance that the catastrophic failure of a node can result in loss of data, even
    if it is only a few seconds worth.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，对于Redis和其他NoSQL数据库，有一个批评是在特定情况下数据很容易丢失。因为Redis主要将数据存储在内存中，偶尔写入磁盘，所以即使只有几秒钟的时间，节点的灾难性故障也可能导致数据丢失。
- en: Getting ready
  id: totrans-626
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to use our CentOS VM again.
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将再次使用我们的CentOS虚拟机。
- en: 'SSH to your CentOS machine:'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: SSH到您的CentOS机器：
- en: '[PRE136]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'Install the EPEL repository, and then MongoDB:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 安装EPEL存储库，然后安装MongoDB：
- en: '[PRE137]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: Again, we're using EPEL for convenience, but more up-to-date offerings are out
    there, and one of the most preferred ways of running Redis is in Docker containers.
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，出于方便起见，我们使用EPEL，但是有更更新的选择，而运行Redis的最受欢迎的方法之一是在Docker容器中。
- en: How to do it...
  id: totrans-633
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Out of the box, systemd will start the redis-server binary by using the `/etc/redis.conf`
    configuration file. Let''s go ahead and do that now:'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，systemd将使用“/etc/redis.conf”配置文件启动redis-server二进制文件。现在让我们继续做这个：
- en: '[PRE138]'
  id: totrans-635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'The default port being used is `6379`, which we can again check using `ss`:'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 默认端口是“6379”，我们可以再次使用“ss”来检查：
- en: '[PRE139]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'Here, we''re listening on localhost, port `6379`:'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们监听localhost，端口“6379”：
- en: 'The same warning as ever applies: If you start opening any of your installed
    services, make sure they''re secure and aren''t about to let bad actors steal
    your data.'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 与以往一样，同样的警告适用：如果您开始打开任何已安装的服务，请确保它们是安全的，不会让不良行为者窃取您的数据。
- en: 'Connecting to an instance is achieved using `redis-cli` from the command line,
    and simply invoking it should land you inside the Redis shell:'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 通过命令行使用“redis-cli”连接到实例，简单地调用它应该会让您进入Redis shell：
- en: '[PRE140]'
  id: totrans-641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'Redis recommends using `ping` to see whether Redis is responding properly:'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: Redis建议使用“ping”来查看Redis是否正常响应：
- en: '[PRE141]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Because Redis is a KV store, the syntax for interacting with it can be incredibly
    simple. The following example creates a key with a string value:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 因为Redis是一个KV存储，与其交互的语法可能非常简单。以下示例创建了一个具有字符串值的键：
- en: '[PRE142]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'To retrieve that data, we use `get`:'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检索数据，我们使用`get`：
- en: '[PRE143]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'If we wanted to set an integer value, we simply specify it:'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想设置一个整数值，我们只需指定它：
- en: '[PRE144]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'We could then increment it whenever a new Linux distribution is created:'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 每当创建一个新的Linux发行版时，我们就可以递增它：
- en: '[PRE145]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'You''re not limited to one get at a time either with `mget`:'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 您也不仅限于一次获取`mget`：
- en: '[PRE146]'
  id: totrans-653
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: You might be wondering what utility this could have. I mean, sure, it's quick,
    but is it really so good that it becomes an indispensable part of any decent web
    stack?
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会想知道这有什么用。我的意思是，当然，它很快，但它真的很好吗，以至于成为任何体面的Web堆栈的不可或缺的一部分吗？
- en: Redis can do a lot more, including storing binary data (such as images) as the
    value to a key; it can create keys with a short time to live, meaning it could
    be used for temporary caching; and it can be clustered.
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: Redis还可以做很多其他事情，包括将二进制数据（例如图像）存储为键的值；它可以创建具有短生存期的键，这意味着它可以用于临时缓存；它可以进行集群化。
- en: How it's used is generally up to the programmer of an application, and not up
    to the admin who's tasked with setting it up. However, that doesn't mean you can't
    suggest it if your developers are all sat around a table scratching their heads,
    trying to think of an in-memory key-value store that they can use as a cache for
    website data.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 它的使用通常取决于应用程序的程序员，而不是负责设置它的管理员。但是，这并不意味着如果您的开发人员都坐在一张桌子周围，试图想出一个可以用作网站数据缓存的内存键值存储，您就不能建议它。
- en: How it works...
  id: totrans-657
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: We started Redis as a service, using `/etc/redis.conf` as the configuration
    file (the default).
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将Redis作为服务启动，使用`/etc/redis.conf`作为配置文件（默认）。
- en: 'The default settings shipped with the EPEL version, at the time of writing,
    mean that when it starts, it''s on the localhost address (`127.0.0.1`) and port
    `6379`:'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，EPEL版本附带的默认设置意味着它在启动时位于本地主机地址（`127.0.0.1`）和端口`6379`上：
- en: '[PRE147]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'The settings in here also set the mode (protected by default) that dictates
    how Redis can start when listening on other ports:'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的设置还设置了模式（默认受保护），该模式规定了Redis在监听其他端口时如何启动：
- en: '[PRE148]'
  id: totrans-662
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Sensible!
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 明智的选择！
- en: We know Redis is in-memory, but there's also that fact about it writing out
    to disk occasionally.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道Redis是内存中的，但也有关于它偶尔写入磁盘的事实。
- en: 'This DB dump is viewable in the given directory from the config file:'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 此DB转储可以在配置文件的给定目录中查看：
- en: '[PRE149]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Unless the `appendonly` value is set, this database file lags a little behind
    the running instance, meaning that if Redis or the server crash, you can lose
    a few seconds of data.
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 除非设置了`appendonly`值，否则此数据库文件会稍微滞后于运行实例，这意味着如果Redis或服务器崩溃，您可能会丢失几秒钟的数据。
- en: How robust you want your data to be is generally up to the application developers.
    If they don't mind the possibility that you might lose a second or two of data,
    meaning a value might not be cached or similar, then you might want to not take
    the performance impact of writing everything to disk as fast as you can.
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望数据有多健壮通常取决于应用程序开发人员。如果他们不介意可能会丢失一两秒的数据，这意味着某个值可能不会被缓存或类似的情况，那么您可能不希望承受将所有数据尽快写入磁盘的性能影响。
- en: Messaging brokers and queues (RabbitMQ example)
  id: totrans-669
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息代理和队列（RabbitMQ示例）
- en: Moving on from databases of all shapes and sizes, in this section, we're going
    to look at something very different, in the form of a messaging software called
    RabbitMQ.
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: 在各种形状和大小的数据库之后，在本节中，我们将看一些非常不同的东西，即一种名为RabbitMQ的消息软件。
- en: Like Redis, RabbitMQ is a staple of a lot of modern web applications, because
    of its open source and wel-documented nature.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 与Redis一样，RabbitMQ是许多现代Web应用程序的重要组成部分，因为它是开源的并且有很好的文档。
- en: '"*But what is a messaging queue?*"'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: “*但是什么是消息队列？*”
- en: I knew you'd ask that, unless you already know, in which case this section might
    be a bit useless to you.
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道你会问这个问题，除非你已经知道，如果是这样，那么这一节对你来说可能有点无用。
- en: A **messaging queue**, usually utilizing the **Advanced Message Queuing Protocol**
    (**AMQP**), is part of a message broker, which is software that's used to send
    and receive messages as part of an application stack.
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '**消息队列**通常使用**高级消息队列协议**（**AMQP**），是消息代理的一部分，用于作为应用程序堆栈的发送和接收消息的软件。'
- en: These messages are usually sent from different components that can talk and
    listen in different ways. The messaging broker is there to facilitate the conversation
    between these components.
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: 这些消息通常来自可以以不同方式进行交谈和监听的不同组件。消息代理用于促进这些组件之间的对话。
- en: You'll commonly find that messaging brokers and queues start to come into conversations
    about "decoupling", which is a fancy way of suggesting different elements of an
    application stack shouldn't be so reliant on one another.
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 您通常会发现消息代理和队列开始在“解耦”方面进行讨论，这是一种提出应用程序堆栈的不同元素不应该如此依赖彼此的花哨方式。
- en: Think of a web server, talking to a processing application for data. In the
    old world, the web server would talk to the processing application directly, firing
    messages backward and forward while waiting for responses. This can be good in
    a flat design, but you run the risk of things such as the frontend website locking
    up, while the backend-processing application gets stuck on a tricky task.
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，一个Web服务器正在与处理数据的应用程序交谈。在旧世界中，Web服务器会直接与处理应用程序交谈，来回发送消息，同时等待响应。这在扁平设计中可能很好，但您可能会面临诸如前端网站锁定，而后端处理应用程序在处理棘手的任务时被卡住等风险。
- en: Instead of this direct communication, message brokers can be used, and while
    it does rely on the web developers writing code that doesn't rely on a direct
    or immediate response from the backend, it effectively decouples the hard dependency
    of the backend application working (or being there at all).
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是直接通信，可以使用消息代理，虽然它依赖于Web开发人员编写的代码，不依赖于后端的直接或即时响应，但它有效地解耦了后端应用程序的硬依赖关系（或者根本不需要后端应用程序存在）。
- en: In theory. you could rip out a database from a queue, replace it, and the frontend
    website would be none the wiser.
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，您可以从队列中删除数据库，替换它，前端网站将一无所知。
- en: You also tend to see RabbitMQ (and others) in designs for distributed and redundant
    setups, instead of one website talking to one processing the backend, several
    frontends, and several backends just talk to the queue, taking and processing
    messages as they see fit.
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会经常看到RabbitMQ（和其他）在分布式和冗余设置的设计中，而不是一个网站与一个处理后端通信，而是几个前端和几个后端只需与队列通信，根据需要接收和处理消息。
- en: Getting ready
  id: totrans-681
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to use our Debian box... just for a change.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用我们的Debian盒子...只是为了改变一下。
- en: 'Connect to `debian1`, like so:'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样连接到`debian1`：
- en: '[PRE150]'
  id: totrans-684
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Note the forwarded ports for accessing the management interface later.
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 注意后续端口以便稍后访问管理界面。
- en: 'A word of warning: RabbitMQ starts on all interfaces by default in this setup,
    so you should ensure that you have a firewall keeping those ports inaccessible
    from the outside. If you''re just working on the Vagrant test VM for this, then
    it should only be set up for a local network anyway.'
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：在此设置中，RabbitMQ默认在所有接口上启动，因此您应确保防火墙使这些端口无法从外部访问。如果您只是在Vagrant测试VM上工作，那么它应该只设置为本地网络。
- en: 'Install `rabbitmq-server` from the default repositories:'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 从默认存储库安装`rabbitmq-server`：
- en: '[PRE151]'
  id: totrans-688
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: How to do it...
  id: totrans-689
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Once installed, Rabbit should start up automatically (ah, Debian). This means
    that we can immediately see what''s running with `ps` (and the default user it
    runs as, `rabbitmq`):'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，Rabbit应该会自动启动（啊，Debian）。这意味着我们可以立即用`ps`（以及它作为默认用户运行的`rabbitmq`）看到正在运行的内容：
- en: '[PRE152]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: From this, we can immediately see that RabbitMQ uses Erlang, and that the `/usr/lib/rabbitmq/bin/rabbitmq-server` script
    is used to start the server.
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们可以立即看到RabbitMQ使用Erlang，并且`/usr/lib/rabbitmq/bin/rabbitmq-server`脚本用于启动服务器。
- en: 'First, let''s set up the RabbitMQ management interface:'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们设置RabbitMQ管理界面：
- en: '[PRE153]'
  id: totrans-694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Now, you should be able to hit this interface on your local machine.
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够在本地机器上访问此界面。
- en: 'Navigate to `http://127.0.0.1:15672` and you should see something such as the
    following:'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到`http://127.0.0.1:15672`，您应该看到类似以下的内容：
- en: '![](img/37c2bcb0-4b83-4b26-a031-781ac6aaa53f.png)'
  id: totrans-697
  prefs: []
  type: TYPE_IMG
  zh: '![](img/37c2bcb0-4b83-4b26-a031-781ac6aaa53f.png)'
- en: The default username and password are `guest`/`guest`.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 默认用户名和密码是`guest`/`guest`。
- en: Going back to my security point from earlier, this highlights the need to set
    up and configure software in a secure testing environment, with absolutely no
    production data, prior to going anywhere near a live environment.
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我之前的安全观点，这突显了在安全测试环境中设置和配置软件的必要性，绝对不要在进入实际环境之前使用任何生产数据。
- en: 'Once logged in, you should see this:'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您应该看到这个：
- en: '![](img/35e8c3a8-5a34-497f-a19f-5b5c79edb94c.png)'
  id: totrans-701
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35e8c3a8-5a34-497f-a19f-5b5c79edb94c.png)'
- en: RabbitMQ overview page
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: RabbitMQ概述页面
- en: Usually, I would suggest starting with the CLI, but it just so happens that
    this is a great way to visualize what Rabbit is, and what it's doing.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我建议从CLI开始，但碰巧这是一个很好的可视化Rabbit是什么以及它在做什么的方式。
- en: At the top of this screen, we have our Totals, which are a breakdown of the
    messages that Rabbit is currently aware of (it's idle right now).
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 在此屏幕顶部，我们有我们的总数，这是Rabbit当前知道的消息的详细信息（现在它是空闲的）。
- en: In the Nodes section, we can see straight away that we have a single node, called
    `rabbit@debian1`, and that we have a breakdown of its usage at the moment.
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点部分，我们可以立即看到我们有一个名为`rabbit@debian1`的单个节点，并且我们目前对其使用情况进行了详细说明。
- en: We also have a list of the relevant Paths that Rabbit looks for, including the
    configuration file (currently not there) and the actual database directory. There's
    also information on the various log files.
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个Rabbit查找的相关路径列表，包括配置文件（目前不存在）和实际数据库目录。还有有关各种日志文件的信息。
- en: Have a click around this interface (though you may find it a bit sparse).
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个界面上四处点击（尽管您可能会发现它有点稀疏）。
- en: Back on the command line, let's take a look at how you might query information
    on a remote server that doesn't have a web interface enabled.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 回到命令行，让我们看看如何查询没有启用Web界面的远程服务器上的信息。
- en: 'Start by listing the queues:'
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 首先列出队列：
- en: '[PRE154]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: This is empty, as we saw on the GUI (if you clicked on the Queues tab).
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: 这是空的，就像我们在GUI上看到的一样（如果您单击了队列选项卡）。
- en: 'By default, we have one `vhost`, which is a way to segment RabbitMQ (like vhosts
    in Apache and Nginx):'
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，我们有一个`vhost`，这是对RabbitMQ进行分段的一种方法（就像Apache和Nginx中的vhost一样）：
- en: '[PRE155]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'We can take a look at the configured users:'
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看已配置的用户：
- en: '[PRE156]'
  id: totrans-715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'We can also create users:'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以创建用户：
- en: '[PRE157]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Let''s create a `vhost` to go along with that:'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个`vhost`来配合：
- en: '[PRE158]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'Now let''s give our user access to said `vhost`:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们让我们的用户访问所述`vhost`：
- en: '[PRE159]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: How it works...
  id: totrans-722
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Most of what we did should be self-explanatory, with the exception of the permissions
    line:'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的大部分内容应该是不言自明的，除了权限行：
- en: '[PRE160]'
  id: totrans-724
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Here, we're specifically granting access to `configure`, `write`, and `read`
    to our user, `exampleUser`. This means that within the `exampleVhost vhost`, our
    user will have complete access to do as they please.
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们特别授予`configure`、`write`和`read`权限给我们的用户`exampleUser`。这意味着在`exampleVhost
    vhost`中，我们的用户将完全可以按照自己的意愿进行访问。
- en: Access is granted here by way of Regex, meaning that you can have more fine-grained
    control over what a user can and can't access within a `vhost`.
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 这里通过正则表达式授予访问权限，这意味着您可以更精细地控制用户在`vhost`中可以访问和不能访问的内容。
- en: Like Redis, RabbitMQ really doesn't do much without setup and without applications
    talking to it.
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 与Redis一样，RabbitMQ如果没有设置和没有应用程序与其通信，就不会做太多事情。
- en: Various languages have ways of interfacing with RabbitMQ. It's generally up
    to the developers of your company to decide how they're going to write to the
    queues, which queues they're going to write to, how they're going to read from
    those queues once done, and what language they're going to use.
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 各种语言都有与RabbitMQ进行交互的方式。通常由你公司的开发人员决定他们将如何写入队列，他们将写入哪些队列，一旦完成，他们将如何从这些队列中读取，以及他们将使用什么语言。
- en: Sadly, from an administrator's point of view, you'll very rarely have anything
    to do with the actual requests and actions of RabbitMQ. Most of your job is going
    to centre around making sure security is in place (TLS, user authentication, and
    so on) and ensuring clusters remain consistent.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，从管理员的角度来看，你很少会涉及到RabbitMQ的实际请求和操作。你的大部分工作将围绕着确保安全性（TLS、用户认证等）和确保集群保持一致。
- en: I would highly recommend going through the Rabbit documentation and having a
    go at some of their quickstart guides for interacting with Rabbit. If you have
    a developer mindset, or you just like hacking around with Python scripts, it could
    be a good way to gain a deep understanding of this messaging broker, and messaging
    brokers in general.
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议阅读Rabbit文档，并尝试一些与Rabbit互动的快速入门指南。如果你有开发者的思维，或者你只是喜欢用Python脚本进行调试，这可能是深入了解这个消息代理和消息代理的一个好方法。
- en: Roundup - web servers, databases, and mail servers
  id: totrans-731
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结 - 网络服务器、数据库和邮件服务器
- en: In this chapter, I deliberately tried to talk about some of the most popular
    technology on the market at the moment, including programs that I know for a fact
    have large minds and market share. Some of this software has been around for ages,
    near decades, but more of it has joined the scene recently, owed in large part
    to the explosion of cloud computing in the latter half of the 2010s.
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我故意试图谈论一些目前市场上最流行的技术，包括我知道确实拥有大量用户和市场份额的程序。其中一些软件已经存在了很长时间，接近几十年，但更多的是最近加入的，这在很大程度上归功于2010年代后期云计算的爆炸。
- en: When we talk about web servers, mail servers, and databases, they come in all
    shapes and sizes, meaning that it's hard to suggest sensible defaults that will
    fit absolutely all use cases. The only advice that I can give, and which is universal,
    is to not compromise security for simplicity. (You've probably read enough about
    leaks and security breaches in recent months and years that you want to make sure
    your name isn't tied to something catastrophic such as that.)
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论网络服务器、邮件服务器和数据库时，它们有各种各样的形状和大小，这意味着很难建议适合所有用例的明智默认值。我唯一能给出的建议，也是普遍适用的，就是不要为了简单而牺牲安全性。（你可能已经读了足够多关于最近几个月和几年的泄露和安全漏洞的报道，你想确保你的名字不会与这样的灾难性事件联系在一起。）
- en: That's not to say this stuff can't be fun. The weird and wonderful things people
    are doing with NoSQL databases, messaging brokers, and even mail servers are extremely
    interesting to a lot of people, one of whom might be you!
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说这些东西不能有趣。人们用NoSQL数据库、消息代理甚至邮件服务器做的奇怪而奇妙的事情对很多人来说都非常有趣，其中可能包括你！
- en: I also don't want to really take you away from the notion of running any of
    this stuff yourself, especially now that most of this stuff is available "as a
    service" from various cloud providers and third parties. It can be a great learning
    experience and teach you the good and bad of certain programs when you install
    and configure this stuff yourself.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 我也不想让你远离自己运行任何这些东西的想法，尤其是现在大部分这些东西都可以从各种云提供商和第三方作为服务提供。这可以是一个很好的学习经验，并且在你自己安装和配置这些东西时，可以教会你某些程序的优点和缺点。
- en: One other thing to note, and this is just like, my opinion, man.
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事要注意，这只是我的观点。
- en: I don't like mixing similar technologies in the same infrastructure. If you
    need an SQL database, and you've never used one in your infrastructure before,
    it's fine to think about it for a while before deciding on either MariaDB or PostgreSQL.
    Most modern software just wants some sort of SQL backend, and it doesn't care
    what software provides it.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 我不喜欢在同一基础设施中混合类似的技术。如果你需要一个SQL数据库，并且以前从未在你的基础设施中使用过，那么在决定使用MariaDB还是PostgreSQL之前，可以考虑一段时间。大多数现代软件只需要某种SQL后端，它并不在乎提供它的软件是什么。
- en: That GitLab server you're installing? Maybe you've decided to use PostgreSQL.
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在安装的GitLab服务器？也许你已经决定使用PostgreSQL。
- en: Now you've got a WordPress instance to set up? Go with PostgreSQL again.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有一个要设置的WordPress实例？再次选择PostgreSQL。
- en: You need something to connect Icinga2 to? Try PostgreSQL.
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要连接Icinga2吗？试试PostgreSQL。
- en: Imagine how much of a headache you might get into if you decide to use MariaDB
    for one thing, MySQL for another, and PostgreSQL for a third. Unless there's an
    extremely good reason to use one over the other, I'm a big fan of keeping your
    infrastructure as simple as you can. That way, when you have to learn a bit of
    SQL to properly manage your databases, you only have to worry about the intricacies
    of a certain SQL provider, rather than three different ones.
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果你决定在某件事情上使用MariaDB，另一件事情上使用MySQL，第三件事情上使用PostgreSQL，你可能会陷入多大的困境。除非有非常充分的理由选择其中一个，我非常赞成尽可能保持基础设施的简单。这样，当你不得不学习一些SQL来正确管理你的数据库时，你只需要担心某个SQL提供商的复杂性，而不是三个不同的提供商。
- en: This is across the board, too—if you've got to set up a mail server for something,
    I would always favor setting up Postfix on both Debian and CentOS machines, just
    so I know where to look in terms of logs and configuration directives, regardless
    of the OS I'm on.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是跨领域的，如果你需要为某事设置邮件服务器，我总是更倾向于在Debian和CentOS机器上都设置Postfix，这样我就知道在日志和配置指令方面该看哪里，无论我在哪个操作系统上。
- en: In fact, scratch that! Take it one step further and choose a single OS to deploy,
    scrapping any notion of a mixed Debian, CentOS, and Ubuntu deployment.
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，忘掉吧！更进一步，选择一个单一的操作系统进行部署，放弃混合Debian、CentOS和Ubuntu部署的想法。
- en: Logically, this doesn't only save your sanity when it comes to managing components,
    but it drastically cuts down on the infrastructure as code you'd have to maintain,
    the repositories you'd have to mirror, and the security mailing lists you have
    to subscribe to.
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 从逻辑上讲，这不仅在管理组件时节省了你的理智，而且大大减少了你需要维护的基础设施代码、你需要镜像的存储库，以及你需要订阅的安全邮件列表。
- en: But in your own time? Meh, that's up to you—go nuts, play, learn.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: 但在你自己的时间？嗯，那取决于你——疯狂地玩，学习。
- en: Super personal preference time!
  id: totrans-746
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超级个人偏好时间！
- en: 'If you tied me to a chair, and said I absolutely had to choose which software
    I prefer, I''d say the following:'
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把我绑在椅子上，说我一定要选择我更喜欢的软件，我会说以下的：
- en: Postfix > Exim
  id: totrans-748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Postfix > Exim
- en: Nginx > Apache
  id: totrans-749
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nginx > Apache
- en: MariaDB > PostgreSQL
  id: totrans-750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MariaDB > PostgreSQL
- en: 'Note: This is tongue-in-cheek; don''t take these to heart.'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：这是半开玩笑的；不要太认真。
