["```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n\n config.vm.define \"ubuntu1804\" do |ubuntu1804|\n   ubuntu1804.vm.box = \"ubuntu/bionic64\"\n   ubuntu1804.vm.box_version = \"20180927.0.0\"\n end\n\n config.vm.define \"centos7\" do |centos7|\n   centos7.vm.box = \"centos/7\"\n   centos7.vm.box_version = \"1804.02\"\n end\n\nend\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo lxc storage create example-pool dir\n```", "```\n$ sudo lxc launch ubuntu:18.04 example-container -s example-pool\nCreating example\nRetrieving image: rootfs: 31% (1.63MB/s)\n```", "```\n$ sudo lxc list\n+-------------------+---------+------+------+------------+-----------+\n| NAME | STATE | IPV4 | IPV6 | TYPE | SNAPSHOTS |\n+-------------------+---------+------+------+------------+-----------+\n| example-container | RUNNING | | | PERSISTENT | 0 |\n+-------------------+---------+------+------+------------+-----------+\n```", "```\n$ sudo lxc exec example-container hostname\nexample-container\n```", "```\n$ sudo lxc exec example-container bash\nroot@example-container:~# hostname\nexample-container\n```", "```\nroot@example-container:~# exit\n```", "```\n$ sudo lxc stop example-container\n$ sudo lxc delete example-container\n```", "```\n$ sudo ls /var/lib/lxd/storage-pools/example-pool\ncontainers\n```", "```\n$ sudo ls -lhA /var/lib/lxd/images/\ntotal 175M\n-rw-r--r-- 1 root root 788 Nov 4 15:44 30b9f587eb6fb50566f4183240933496d7b787f719aafb4b58e6a341495a38ad\n-rw-r--r-- 1 root root 175M Nov 4 15:47 30b9f587eb6fb50566f4183240933496d7b787f719aafb4b58e6a341495a38ad.rootfs\n```", "```\n$ ps uf -p 3908 --ppid 3908 --ppid 3919 \n```", "```\n$ systemctl status lxd\n\u25cf lxd.service - LXD - main daemon\n Loaded: loaded (/lib/systemd/system/lxd.service; indirect; vendor preset: enabled)\n Active: active (running) since Sun 2018-11-04 15:41:14 UTC; 33min ago\n Docs: man:lxd(1)\n Process: 2058 ExecStartPost=/usr/bin/lxd waitready --timeout=600 (code=exited, status=0/SUCCESS)\n Process: 2036 ExecStartPre=/usr/lib/x86_64-linux-gnu/lxc/lxc-apparmor-load (code=exited, status=0/SUCCESS)\n Main PID: 2057 (lxd)\n Tasks: 16\n CGroup: /system.slice/lxd.service\n \u2514\u25002057 /usr/lib/lxd/lxd --group lxd --logfile=/var/log/lxd/lxd.log\n```", "```\n$ sudo lxc exec example-container top\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo apt update\n```", "```\n$ wget https://download.docker.com/linux/ubuntu/gpg\n$ sudo apt-key add gpg $ sudo apt-add-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'\n```", "```\n$ sudo apt install docker-ce -y\n```", "```\n$ systemctl status docker\n\u25cf docker.service - Docker Application Container Engine\n Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)\n Active: active (running) since Sun 2018-11-04 16:56:26 UTC; 52s ago\n Docs: https://docs.docker.com\n Main PID: 11257 (dockerd)\n Tasks: 23\n CGroup: /system.slice/docker.service\n \u251c\u250011257 /usr/bin/dockerd -H fd://\n \u2514\u250011275 docker-containerd --config /var/run/docker/containerd/containerd.toml\n```", "```\n$ docker --version\nDocker version 18.06.1-ce, build e68fc7a\n```", "```\n$ sudo docker info\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 1\nServer Version: 18.06.1-ce\nStorage Driver: overlay2\n Backing Filesystem: extfs\n Supports d_type: true\n Native Overlay Diff: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host macvlan null overlay\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nInit Binary: docker-init\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\ninit version: fec3683\nSecurity Options:\n apparmor\n seccomp\n Profile: default\nKernel Version: 4.15.0-34-generic\nOperating System: Ubuntu 18.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 985.3MiB\nName: ubuntu-bionic\nID: T35X:R7ZX:MYMH:3PLU:DGXP:PSBE:KQ7O:YN4O:NBTN:4BHM:XFEN:YE5W\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nLabels:\nExperimental: false\nInsecure Registries:\n 127.0.0.0/8\nLive Restore Enabled: false\n\nWARNING: No swap limit support\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo docker run -itd --rm alpine /bin/ash\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\n4fe2ade4980c: Pull complete \nDigest: sha256:621c2f39f8133acb8e64023a94dbdf0d5ca81896102b9e57c0dc184cadaf5528\nStatus: Downloaded newer image for alpine:latest\n5396b707087a161338b6f74862ef949d3081b83bbdcbc3693a35504e5cfbccd4\n```", "```\n$ sudo docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n5396b707087a alpine \"/bin/ash\" 45 seconds ago Up 44 seconds ecstatic_lalande\n```", "```\n$ sudo docker exec -it ecstatic_lalande /bin/ash\n/ # \n```", "```\n$ sudo docker stop ecstatic_lalande\necstatic_lalande\n```", "```\n$ sudo docker ps -a\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n```", "```\n$ sudo docker run -itd --rm alpine /bin/ash\n```", "```\ndocker run\n```", "```\n-itd\n```", "```\n--rm\n```", "```\nalpine /bin/ash\n```", "```\n$ sudo docker ps\n```", "```\n$ sudo docker exec -it ecstatic_lalande /bin/ash\n```", "```\n$ sudo docker stop ecstatic_lalande\n```", "```\n$ vagrant ssh ubuntu1804 $ sudo docker run -itd --rm -p8080:8080 alpine /bin/ash\n```", "```\n$ sudo docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n0f649283dcaf alpine \"/bin/ash\" 41 seconds ago Up 39 seconds 0.0.0.0:8080->8080/tcp compassionate_boyd\n```", "```\n$ curl localhost:8080\ncurl: (56) Recv failure: Connection reset by peer\n```", "```\n$ sudo docker exec -it compassionate_boyd /bin/ash\n```", "```\n# apk add busybox-extras\n```", "```\n# touch index.html\n# echo \"I hated reading Shakespeare in school.\" > index.html\n# httpd -p8080\n# exit\n```", "```\n$ curl localhost:8080\nI hated reading Shakespeare in school.\n```", "```\n$ sudo docker stop compassionate_boyd\ncompassionate_boyd\n$ sudo docker run -itd --rm -p8080:8080 alpine /bin/ash\n592eceb397e7ea059c27a46e4559c3ce7ee0976ed90297f52bcbdb369e214921\n```", "```\n$ curl localhost:8080\ncurl: (56) Recv failure: Connection reset by peer\n```", "```\nFROM alpine\n\nMAINTAINER Your Deity of Choice\n\nRUN apk add busybox-extras\nRUN touch index.html\nRUN echo \"I really hated reading Shakespeare in school.\" > index.html\n\nEXPOSE 8080/tcp\n\nCMD [\"/usr/sbin/httpd\", \"-p8080\", \"-f\"]\n```", "```\n$ sudo docker build .\n<SNIP>\nSuccessfully built d097226c4e7c\n```", "```\n$ sudo docker run -itd -p8080:8080 d097226c4e7c\n```", "```\n$ curl localhost:8080\nI really hated reading Shakespeare in school.\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo docker run -d redis\nUnable to find image 'redis:latest' locally\nlatest: Pulling from library/redis\nf17d81b4b692: Pull complete \nb32474098757: Pull complete \n<SNIP>\n```", "```\n$ sudo docker run -d redis:alpine\nUnable to find image 'redis:alpine' locally\nalpine: Pulling from library/redis\n4fe2ade4980c: Already exists \nfb758dc2e038: Pull complete \n989f7b0c858b: Pull complete \n<SNIP>\n```", "```\n$ vagrant ssh ubuntu1804\n$ vagrant ssh centos7\n```", "```\n$ uname -a\nLinux ubuntu-bionic 4.15.0-36-generic #39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux $ uname -a\nLinux localhost.localdomain 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n```", "```\n$ lsblk\nNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\nsda 8:0 0 40G 0 disk \n\u251c\u2500sda1 8:1 0 1M 0 part \n\u251c\u2500sda2 8:2 0 1G 0 part /boot\n\u2514\u2500sda3 8:3 0 39G 0 part \n \u251c\u2500VolGroup00-LogVol00 253:0 0 37.5G 0 lvm /\n \u2514\u2500VolGroup00-LogVol01 253:1 0 1.5G 0 lvm [SWAP]\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo apt install qemu -y\n```", "```\n$ wget http://dl-cdn.alpinelinux.org/alpine/v3.8/releases/x86_64/alpine-virt-3.8.1-x86_64.iso\n```", "```\n$ qemu-img create example-disk 4G\nFormatting 'example-disk', fmt=raw size=4294967296\n```", "```\n$ qemu-system-x86_64 -drive file=example-disk,format=raw -cdrom alpine-virt-3.8.1-x86_64.iso -boot d -nographic\n```", "```\nlocalhost login: root\nWelcome to Alpine!\n\nThe Alpine Wiki contains a large amount of how-to guides and general\ninformation about administrating Alpine systems.\nSee <http://wiki.alpinelinux.org>.\n\nYou can setup the system with the command: setup-alpine\n\nYou may change this message by editing /etc/motd.\n\nlocalhost:~# \n```", "```\n# setup-alpine\n```", "```\n# poweroff\n```", "```\n$ qemu-system-x86_64 -drive file=example-disk,format=raw -nographic\n```", "```\nWelcome to Alpine Linux 3.8\nKernel 4.14.69-0-virt on an x86_64 (/dev/ttyS0)\n\nlocalhost login: root\nPassword: \nWelcome to Alpine!\n\nThe Alpine Wiki contains a large amount of how-to guides and general\ninformation about administrating Alpine systems.\nSee <http://wiki.alpinelinux.org>.\n\nYou can setup the system with the command: setup-alpine\n\nYou may change this message by editing /etc/motd.\n\nlocalhost:~# \n```", "```\n$ qemu-system-x86_64 -drive file=example-disk,format=raw -cdrom alpine-virt-3.8.1-x86_64.iso -boot d -nographic\n```", "```\nqemu-system-x86_64\n```", "```\n-drive file=example-disk,format=raw\n```", "```\n-cdrom alpine-virt-3.8.1-x86_64.iso\n```", "```\n-boot d\n```", "```\n-nographic\n```", "```\n# apk add htop\n```", "```\n$ vagrant ssh ubuntu1804 $ sudo apt update\n$ sudo apt install virtinst libvirt-clients libvirt-bin libvirt-daemon -y\n```", "```\n$ wget http://dl-cdn.alpinelinux.org/alpine/v3.8/releases/x86_64/alpine-virt-3.8.1-x86_64.iso\n```", "```\n$ fallocate -l 2G ex-alpine-2-disk\n```", "```\n$ sudo virt-install --name ex-alpine-2 --memory 512 --disk ex-alpine-2-disk --cdrom alpine-virt-3.8.1-x86_64.iso --graphics none --os-variant virtio26\n```", "```\n$ sudo virsh\nWelcome to virsh, the virtualization interactive terminal.\n\nType: 'help' for help with commands\n 'quit' to quit\n\nvirsh #\n```", "```\nvirsh # list\n Id Name State\n----------------------------------------------------\n 3 ex-alpine-2 running\n```", "```\nvirsh # console ex-alpine-2 \nConnected to domain ex-alpine-2\nEscape character is ^]\n\nlocalhost:~# \nlocalhost:~# \nlocalhost:~# \n```", "```\nvirsh # dominfo ex-alpine-2\nId: 5\nName: ex-alpine-2\nUUID: 80361635-25a3-403b-9d15-e292df27908b\nOS Type: hvm\nState: running\nCPU(s): 1\nCPU time: 81.7s\nMax memory: 524288 KiB\nUsed memory: 524288 KiB\nPersistent: yes\nAutostart: disable\nManaged save: no\nSecurity model: apparmor\nSecurity DOI: 0\nSecurity label: libvirt-80361635-25a3-403b-9d15-e292df27908b (enforcing)\n```", "```\nvirsh # destroy ex-alpine-2 \nDomain ex-alpine-2 destroyed\nvirsh # start ex-alpine-2 \nDomain ex-alpine-2 started\n```", "```\nvirsh # console ex-alpine-2 \nConnected to domain ex-alpine-2\nEscape character is ^]\n\nWelcome to Alpine Linux 3.8\nKernel 4.14.69-0-virt on an x86_64 (/dev/ttyS0)\n\nlocalhost login: \n```", "```\nvirsh # edit ex-alpine-2 \n\nSelect an editor. To change later, run 'select-editor'.\n 1\\. /bin/nano <---- easiest\n 2\\. /usr/bin/vim.basic\n 3\\. /usr/bin/vim.tiny\n 4\\. /bin/ed\n\nChoose 1-4 [1]: 2\n```", "```\nvirsh # version\nCompiled against library: libvirt 4.0.0\nUsing library: libvirt 4.0.0\nUsing API: QEMU 4.0.0\nRunning hypervisor: QEMU 2.11.1\n```", "```\nvirsh # vcpucount ex-alpine-2 \nmaximum config 1\nmaximum live 1\ncurrent config 1\ncurrent live 1\n```", "```\nvirsh # setvcpus ex-alpine-2 2 --maximum --config --hotpluggable\n```", "```\nvirsh # setmem ex-alpine-2 --size 400MiB\n```", "```\nvirsh # autostart ex-alpine-2 \nDomain ex-alpine-2 marked as autostarted\n```", "```\n$ systemctl cat libvirt-guests\n# /lib/systemd/system/libvirt-guests.service\n[Unit]\nDescription=Suspend/Resume Running libvirt Guests\nWants=libvirtd.service\nRequires=virt-guest-shutdown.target\nAfter=network.target\nAfter=time-sync.target\nAfter=libvirtd.service\nAfter=virt-guest-shutdown.target\nDocumentation=man:libvirtd(8)\nDocumentation=https://libvirt.org\n\n[Service]\nEnvironmentFile=-/etc/default/libvirt-guests\n# Hack just call traditional service until we factor\n# out the code\nExecStart=/usr/lib/libvirt/libvirt-guests.sh start\nExecStop=/usr/lib/libvirt/libvirt-guests.sh stop\nType=oneshot\nRemainAfterExit=yes\nStandardOutput=journal+console\nTimeoutStopSec=0\n\n[Install]\nWantedBy=multi-user.target\n```", "```\n$ virt-\nvirt-admin virt-convert virt-install virt-pki-validate virt-viewer virt-xml-validate \nvirt-clone virt-host-validate virt-login-shell virt-sanlock-cleanup virt-xml\n```", "```\n$ vagrant ssh ubuntu1804\n```", "```\n$ sudo apt install vagrant -y\n```", "```\n$ sudo apt install nginx -y $ sudo docker run -p80 -d --rm nginx $ cat << HERE > Vagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n\\$provisionScript = <<-SCRIPT\napt install nginx -y\nSCRIPT\n\nVagrant.configure(\"2\") do |config|\n\n config.vm.define \"debian8\" do |debian8|\n debian8.vm.box = \"debian/jessie64\"\n debian8.vm.network \"forwarded_port\", guest: 80, host: 8080\n debian8.vm.provision \"shell\",\n inline: \\$provisionScript\n\n debian8.vm.provider \"libvirt\" do |lv|\n lv.driver = \"qemu\"\n lv.memory = 256\n lv.cpus = 1\n\n end\n\n end\n\nend\nHERE\n$ sudo vagrant up\n```", "```\nvirsh # list\n Id    Name                           State\n----------------------------------------------------\n 22    vagrant_debian8                running\n\nvirsh # \n```", "```\n$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES\n4f610d2a6bef        nginx               \"nginx -g 'daemon of...\"   3 hours ago         Up 3 hours          0.0.0.0:32768->80/tcp   gallant_curie\n```"]