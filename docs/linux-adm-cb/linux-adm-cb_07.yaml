- en: Monitoring and Logging
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和日志记录
- en: 'This chapter will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Reading local logs
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读本地日志
- en: Using `journalctl` on `systemd` systems
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`systemd`系统上使用`journalctl`
- en: Centralizing logging
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中日志记录
- en: Local resource measuring tools
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地资源测量工具
- en: Local monitoring tools
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地监控工具
- en: Remote monitoring tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程监控工具
- en: Centralizing logging with the Elastic Stack
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Elastic Stack集中日志记录
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Servers are all well and good when they work, but we don't live in a perfect
    world, and it's perfectly possible that problems can occur (either through bad
    code, created by humans, or mismanagement, introduced by humans).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器在正常工作时都很好，但我们生活在一个不完美的世界，问题是完全可能发生的（无论是通过人类创造的糟糕代码，还是通过人类引入的管理不善）。
- en: In theory, it would be great to simply install the program you want, set it
    running, and forget about it, but this is the real world, not some fantasy land
    where everything goes 100 percent right 100 percent of the time. This is where
    logging and monitoring shine.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，简单安装您想要的程序，让其运行，并忘记它会很好，但这是现实世界，不是一切都百分之百正确的幻想世界。这就是日志记录和监控发挥作用的地方。
- en: Logging is there so that when something does, inevitably, go wrong, you don't
    have to keep your program in a broken state while you try and work out what's
    broken (though, on odd occasions, this might be precisely what you have to do;
    more about that later). You can bring your system back online, and start to parse
    the log files to find out precisely why your web server suddenly started replacing
    all images on your website with pictures of puppies.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是为了当某些事情不可避免地出错时，您不必在尝试弄清楚出了什么问题时保持程序处于破碎状态（尽管在偶尔的情况下，这可能正是您必须做的事情；稍后再说）。您可以将系统恢复在线，并开始解析日志文件，以准确找出为什么您的Web服务器突然开始用小狗的图片替换网站上的所有图片。
- en: Monitoring is the secondary component in keeping your life simple. There to
    ensure you have a smooth experience when using your software, and keeping tabs
    on the resource allocation on your systems, monitoring can detect issues before
    a human being even wakes up in the morning (actually this happens frequently;
    don't expect a normal sleep pattern if you are on call).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 监控是保持生活简单的次要组成部分。它可以确保在使用软件时您拥有流畅的体验，并且可以在系统资源分配上保持监视，监控可以在人类早上醒来之前就发现问题（实际上这经常发生；如果你值班，不要指望有正常的睡眠模式）。
- en: Both of these systems combined can make you appear godlike to those who are
    watching your every move; like Morpheus, you can feel your watch vibrate with
    a notification in a meeting, informing you that the company website is under heavy
    load and about to crash, and calmly inform those talking nonsense around you that
    you feel a disturbance in the force, before excusing yourself to fix the issue
    before the customers notice.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个系统的结合可以让你在观察你的一举一动的人面前显得像神一样；就像Morpheus一样，你可以感觉到你的手表在会议中震动，通知你公司网站负载过重即将崩溃，并且可以镇定地告诉那些在你身边胡说八道的人你感到了一股力量的波动，然后离开去解决问题，让客户在注意到之前解决问题。
- en: Come to think of it, good logging and monitoring can result in your job appearing
    pointless—what's that Futurama quote?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 想想看，良好的日志记录和监控可能会导致你的工作看起来毫无意义——那句Futurama的名言是什么来着？
- en: '"When you do things right, people won''t be sure you''ve done anything at all."
    – Sentient gas cloud'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: “当你做对了事情，人们就不会确定你做了什么。”-有意识的气体云
- en: Technical requirements
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we're going to use two CentOS boxes and two Debian boxes but,
    again, the principles we discuss will be fairly universal in nature.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用两个CentOS框和两个Debian框，但是我们讨论的原则基本上是普遍适用的。
- en: 'The following `Vagrantfile` should be enough to get you started:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的`Vagrantfile`应该足以让你开始：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Reading local logs
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读本地日志
- en: In this section, we're going to look at the default place for logging on our
    machines.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下我们机器上的默认日志位置。
- en: Logging is great— it can tell you variously how healthy your system is, how
    busy it is, who's trying to attack it, and who's successfully gained access in
    the last few minutes.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录很棒——它可以告诉您系统的健康状况如何，它有多忙，谁试图攻击它，以及在过去几分钟内谁成功获得了访问权限。
- en: It's fairly standardized these days, unless you're working with a Java application,
    and if you've got the patience to read through a log file, you might want to give
    *War and Peace* a shot afterward.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些天它相当标准化了，除非您正在使用Java应用程序，如果您有耐心阅读日志文件，您可能会想在之后试着读一下《战争与和平》。
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'Log on to your `centos1` VM:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到你的`centos1`虚拟机：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到…
- en: 'Hier manual pages tell us that if we want to find miscellaneous log files,
    we should start by looking in `/var/log/`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 层次结构手册告诉我们，如果我们想要找到杂项日志文件，我们应该从`/var/log/`开始查找：
- en: /var/log
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: /var/log
- en: Miscellaneous log files.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 杂项日志文件。
- en: 'Navigating to `/var/log` and listing its contents shows us that this is the
    case:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到`/var/log`并列出其内容会显示我们的情况：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On CentOS systems, the main log file is the `messages` log; under Debian and
    Ubuntu, this is called `syslog`, but it's effectively the same thing.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS系统上，主要的日志文件是`messages`日志；在Debian和Ubuntu下，这被称为`syslog`，但实质上是一样的。
- en: 'Having a look at the last few lines of this log file should show you various
    output from some of the programs running on your system:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这个日志文件的最后几行应该会显示你系统上运行的一些程序的各种输出：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, we can see `chronyd` complaining a bit, and we can see the point at which
    I logged in, and `systemd` was kind enough to create me a session.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到`chronyd`有点抱怨，我们还可以看到我登录的时刻，`systemd`很好地为我创建了一个会话。
- en: 'You can also see the secure log, for the likes of `sshd`, `sudo`, and `PAM`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以查看安全日志，例如`sshd`，`sudo`和`PAM`：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And files such as the `cron` log for `cron`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以及像`cron`的`cron`日志这样的文件：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As these files are just text, you can manipulate them using any of the standard
    tools at your disposal.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些文件只是文本，您可以使用您手头的任何标准工具来操作它们。
- en: 'I might want to `grep` out mentions of `vagrant` from the messages log, and
    then only print the month, timestamp, and the program doing the logging:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能想要从消息日志中“grep”出“vagrant”的提及，然后只打印月份、时间戳和进行日志记录的程序：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Why you'd want to do this I don't know, but people have weird hobbies.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道为什么你要这样做，但人们有奇怪的爱好。
- en: So that log files don't get too big and become a real pain to even open (really,
    a million lines is too many), we also have `logrotate`, which periodically runs
    to swap out the old files for new ones to be written to.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免日志文件变得太大并成为真正的痛苦，甚至打开（实际上，一百万行太多了），我们还有“logrotate”，它定期运行以交换旧文件以便写入新文件。
- en: 'Here, I force `logrotate` to run, so we can see the output:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我强制“logrotate”运行，这样我们就可以看到输出：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note how the old files have been moved and date stamped, and the new ones have
    been given the same name.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意旧文件已经被移动并加上了日期戳，新文件已经被赋予了相同的名称。
- en: 'Using `cat`  on the messages file now will show one line, telling us that the
    `rsyslogd` daemon was `HUPed`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在消息文件上使用“cat”将显示一行，告诉我们“rsyslogd”守护进程被“HUPed”：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Personally, I think it should be HUP'd, but I can see the argument for `HUPed`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 就我个人而言，我认为它应该被HUP'd，但我可以理解“HUPed”的论点。
- en: How it works...
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The daemon logging to text files is `rsyslogd` (on some older systems, it might
    be `syslog-ng`).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 记录到文本文件的守护进程是“rsyslogd”（在一些较旧的系统上，可能是“syslog-ng”）。
- en: 'This reliable and extended syslogd program writes messages that it reads from
    one of two locations, `imuxsock` (old) and `imjournal` (new); this comes directly
    from the `syslog(3)` syscall man page:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个可靠且扩展的syslogd程序会将它从两个位置之一读取的消息写入，即“imuxsock”（旧的）和“imjournal”（新的）；这直接来自于“syslog(3)”系统调用手册页：
- en: syslog() and vsyslog()
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: syslog()和vsyslog()
- en: syslog() generates a log message, which will be distributed by syslogd(8).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: syslog()生成一个日志消息，该消息将由syslogd(8)分发。
- en: Note that `syslogd` (referenced here) is an old program, superseded by `rsyslogd`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，“syslogd”（在这里引用）是一个旧程序，已被“rsyslogd”取代。
- en: If there's more than one entry of the same name, in the man pages, you can specify
    the section by using the number. In this case, it would be `man 3 syslog` on the
    command line.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有多个相同名称的条目，在man手册中，您可以使用数字指定部分。在这种情况下，它将是命令行上的“man 3 syslog”。
- en: '`rsyslogd` configuration resides at `/etc/rsyslog.conf` and gives us the first
    bit of information on how specific logs are written where. This is the `RULES`
    section:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: “rsyslogd”配置位于“/etc/rsyslog.conf”，并为我们提供了有关特定日志写入位置的第一部分信息。这是“RULES”部分：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This shows us the various rules that are applied when certain messages hit
    the log location: if they''re mail messages, they go to `/var/log/maillog`; if
    they''re anything that''s not mail (of `info` level or higher), `authpriv`, or
    `cron`, they go to `/var/log/messages`.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这向我们展示了在特定消息到达日志位置时应用的各种规则：如果它们是邮件消息，它们将进入“/var/log/maillog”；如果它们不是邮件（高于“info”级别）的任何消息、“authpriv”或“cron”，它们将进入“/var/log/messages”。
- en: 'The `logger` command can be used to write to the log directly, and can be very
    handy for testing purposes and shell scripts, to show how this works:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: “logger”命令可用于直接写入日志，并且对于测试目的和shell脚本非常有用，以展示它是如何工作的：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The `logger` command also lets you specify the facility, and the level of the
    log:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: “logger”命令还允许您指定设施和日志级别：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This seems noisy, so let's create a dedicated log file for `cron` error messages.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎很吵，所以让我们为“cron”错误消息创建一个专用的日志文件。
- en: 'We need a rule, placed in the `rsyslog.d` directory for such things:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个规则，放在“rsyslog.d”目录中处理这样的事情：
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we restart `rsyslog`, and send our `logger` message again:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们重新启动“rsyslog”，并再次发送我们的“logger”消息：
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This is much cleaner; our custom rule looks good!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这样更清晰；我们的自定义规则看起来不错！
- en: 'Log levels are one of the following, and there''s only loosely defined guidelines
    for when the different levels are used, though generally it''s considered good
    manners not to log trivial events as critical problems:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 日志级别是以下之一，对于何时使用不同级别只有宽泛的定义指南，尽管通常认为不应将琐碎事件记录为关键问题是礼貌的：
- en: 0              emerg
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 0              emerg
- en: 1              alert
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 1              alert
- en: 2              crit
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 2              crit
- en: 3              err
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 3              err
- en: 4              warning
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 4              warning
- en: 5              notice
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 5              notice
- en: 6              info
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 6              info
- en: 7              debug
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 7              debug
- en: The numbers are the numerical designation of the individual levels.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数字是各个级别的数字指定。
- en: There's more...
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'When we rotated the logs, and `HUPed` the `syslog` daemon, we actually ran
    this script in `logrotate`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们旋转日志并“HUPed”“syslog”守护程序时，实际上在“logrotate”中运行了这个脚本：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Of course, there's no reason an application has to use the `syslog(3)` call
    to log messages, and it could just as easily write a stream of text to `/tmp`,
    but that's entirely up to the application developer in question.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，一个应用程序没有理由使用“syslog(3)”调用来记录消息，它也可以轻松地将一系列文本写入“/tmp”，但这完全取决于相关的应用程序开发人员。
- en: All you need to know as an admin is that most logs will probably end up in text
    format in `/var/log`, and you can generally configure log file locations on a
    program-by-program basis.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 作为管理员，你需要知道的是，大多数日志可能最终以文本格式出现在“/var/log”中，你通常可以根据程序的具体情况配置日志文件位置。
- en: Happy logging!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 愉快的记录！
- en: Using journalctl on systemd systems
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在systemd系统上使用journalctl
- en: Modern Linux distributions don't just rely on `syslog` files; in fact, they
    don't need to rely on `syslog` at all. Debian, Ubuntu, and CentOS all have `systemd`
    as an init system, and bundled with `systemd` is a service called `journald` (`systemd-journald.service`).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现代Linux发行版不仅仅依赖于“syslog”文件；事实上，它们根本不需要依赖于“syslog”。Debian、Ubuntu和CentOS都将“systemd”作为初始化系统，并且与“systemd”捆绑在一起的是一个名为“journald”的服务（“systemd-journald.service”）。
- en: This service acts as the journaling solution for your system, and utilizes binary
    logs instead of text-based logs.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务作为系统的日志记录解决方案，并利用二进制日志而不是基于文本的日志。
- en: While it's possible to ignore `syslog` entirely, and just use `journald`, a
    lot of systems now use both, to make the transition from one format to another
    easier. If you're using something like Arch or Gentoo, you may decide to dismiss
    `syslog` solutions entirely, in favour of `journald` alone.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然完全可以忽略`syslog`，只使用`journald`，但现在很多系统都同时使用两者，以便更容易地从一种格式过渡到另一种格式。如果你使用的是像Arch或Gentoo这样的系统，你可能决定完全放弃`syslog`解决方案，而只使用`journald`。
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we can use the `Vagrantfile` from the first section.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一部分，我们可以使用第一部分的`Vagrantfile`。
- en: We will only be using `centos1`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会使用`centos1`。
- en: 'SSH to `centos1`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: SSH到`centos1`：
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How to do it...
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: As mentioned earlier, journald utilizes a binary logging format, meaning it
    can't be opened with traditional text parsers and editors. Instead, we use the
    `journalctl` command to read logs.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，journald使用二进制日志格式，这意味着它不能用传统的文本解析器和编辑器打开。相反，我们使用`journalctl`命令来读取日志。
- en: 'Simply running the following opens your log:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 只需运行以下命令即可打开你的日志：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output for the preceding command is shown here:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下所示：
- en: '![](img/f41a5795-f1ce-4b8b-8be1-cd42c7b4aa36.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f41a5795-f1ce-4b8b-8be1-cd42c7b4aa36.png)'
- en: This is familiar to anyone who's looked as a regular old `syslog` file; note
    that the format is the same by default.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于任何看过普通旧`syslog`文件的人来说都是熟悉的；请注意，默认情况下格式是相同的。
- en: It is quite noisy though, and on a busy system we might not want to see everything
    historic.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，它还是相当吵闹的，在一个繁忙的系统上，我们可能不想看到所有的历史记录。
- en: 'Maybe we want to just watch the log as it''s written? If this is true, we can
    follow it with `-f`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我们只想在写入时观看日志？如果是这样，我们可以使用`-f`跟踪它：
- en: '[PRE17]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Whenever a log message is written, it will appear before you, streamed (use *Ctrl*
    + *C* to quit out).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每当写入日志消息时，它都会出现在你面前，流式传输（使用`Ctrl` + `C`退出）。
- en: 'We can specifically look at `kernel` logs (as if we were running `dmesg`) with
    the `-k` flag:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`-k`标志来具体查看`kernel`日志（就像我们在运行`dmesg`一样）：
- en: '[PRE18]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note that here, I've disabled the pager (in the exact same way it's done in
    `systemctl-land`), and I've only dumped the first eight lines of the log, as the
    `kernel` is quite noisy, especially at boot.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里我已经禁用了分页器（以与`systemctl-land`中相同的方式），并且我只转储了日志的前八行，因为`kernel`非常吵闹，特别是在启动时。
- en: This also serves to show that the logs can still be manipulated on the command
    line; you've just got to query them first (adding a bit of overhead).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这也表明日志仍然可以在命令行上操作；你只需要先查询它们（增加一些开销）。
- en: 'That''s not to say you have to use `journalctl` and a combination of other
    commands; there''s a good chance you can get what you need with `journalctl` alone.
    Here, I choose a very specific time range to query the logs for:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说你必须使用`journalctl`和其他命令的组合；你很有可能只用`journalctl`就能得到你需要的东西。在这里，我选择了一个非常具体的时间范围来查询日志：
- en: '[PRE19]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In 2 minutes, we get 15 lines of log, but this is much easier to sift through
    and digest (assuming the time is correct on your box of course!)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在2分钟内，我们得到了15行日志，但这样更容易筛选和消化（当然，假设你的盒子上的时间是正确的！）
- en: These timestamps are just examples; you could use a full date (`--since="2018-10-10
    17:07:00"`) or even relative statements (`--since=yesterday --until=now`).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这些时间戳只是示例；你可以使用完整的日期（`--since="2018-10-10 17:07:00"`）或者甚至是相对语句（`--since=yesterday
    --until=now`）。
- en: 'If it''s not a range of time you''re after, but rather the logs of a specific
    `systemd unit`, `journalctl` also has you covered:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是在寻找一个时间范围，而是特定的`systemd unit`的日志，`journalctl`也可以满足你：
- en: '[PRE20]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here, I used the `-u` (unit) flag to only look at logs from `chronyd`, minimizing
    the amount of output I have to deal with.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我使用了`-u`（unit）标志，只查看了来自`chronyd`的日志，最大程度地减少了我需要处理的输出量。
- en: 'What we also get in the preceding example are the `systemd` logs that interact
    with the `chronyd` unit. But if we only want logs from the `chronyd` binary, we
    can do that too:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们还得到了与`chronyd`单元交互的`systemd`日志。但如果我们只想要来自`chronyd`二进制的日志，我们也可以做到。
- en: '[PRE21]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Seriously, how cool is that?
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 说真的，这太酷了吧？
- en: But wait, there's more!
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 但等等，还有更多！
- en: The `journald` command can be more powerful still, as it has the concept of
    message explanations, or message context if you prefer. Some log lines can be
    output in a more verbose fashion (with `-x`) to better understand what's happening.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`journald`命令可能更加强大，因为它有消息解释的概念，或者如果你愿意的话，消息上下文。一些日志行可以以更详细的方式输出（使用`-x`）以更好地理解发生了什么。'
- en: 'Take the following two examples using the `sshd` unit, with and without the
    `-x` flag:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`sshd`单元的以下两个示例，一个带有`-x`标志，一个不带：
- en: '[PRE22]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note that the `systemd` specific lines suddenly have a lot more context.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`systemd`特定的行突然有了更多的上下文。
- en: We've covered some good basics, but `journalctl` can still be more complex.
    After passing options to the output, we can add specific matches to our statements
    (in the format `FIELD=VALUE`).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经涵盖了一些基础知识，但`journalctl`仍然可以更加复杂。在将选项传递给输出后，我们可以在我们的语句中添加特定的匹配（格式为`FIELD=VALUE`）。
- en: 'Looking at SSH, we can see this in action:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 看看SSH，我们可以看到它在起作用：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here, we've said that we want all the messages from yesterday, generated by
    the `systemd` `sshd` unit, but only those from PID `853` (which happens to be
    the server daemon PID on this box).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们说我们只想要昨天生成的`systemd` `sshd`单元的所有消息，但只有来自PID `853`的消息（这恰好是这个盒子上的服务器守护程序PID）。
- en: For more on matches, take a look at the `systemd.journal-fields` man page.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 有关匹配的更多信息，请参阅`systemd.journal-fields`手册页。
- en: 'Lastly, as with `syslog`, we can specify the priority of messages we want to
    see. Here, we''re looking at the entire log, but we''re only after `err` level
    messages:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，与`syslog`一样，我们可以指定我们想要看到的消息的优先级。在这里，我们正在查看整个日志，但我们只对`err`级别的消息感兴趣：
- en: '[PRE24]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Configured in `/etc/systemd/journald.conf`, journald is a great piece of software
    but, at least on CentOS 7, it's something of a second class citizen, with syslog
    still being the primary method of keeping an eye on logs for a lot of people.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/systemd/journald.conf`中配置，journald是一个很棒的软件，但至少在CentOS 7上，它在某种程度上是一个二等公民，因为对于很多人来说，syslog仍然是保持日志监视的主要方法。
- en: Logs aren't persisted through reboots (more on this later) so it's only good
    for querying the state of a system since boot (which can also be enough, 9 times
    out of 10).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 日志不会在重新启动后保留（稍后会详细介绍），因此它只适用于查询系统自启动后的状态（这通常足够了，十次中有九次）。
- en: 'The file, as we said, is in binary format, and journald pulls in various sources
    to create its log journals:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所说，该文件是以二进制格式存在的，journald 会引入各种来源来创建其日志记录：
- en: Kernel log messages (`/dev/kmsg`)
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核日志消息（`/dev/kmsg`）
- en: Simple log messages (the `syslog` `libc` call mentioned previously)
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的日志消息（先前提到的 `syslog` `libc` 调用）
- en: Structured journal log messages from the Journal API (imported into `rsyslog`
    with the `imjournal` module)
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Journal API 导入的结构化日志消息（使用 `imjournal` 模块导入到 `rsyslog` 中）
- en: The `stdout` and `stderr` of service unit files
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务单元文件的 `stdout` 和 `stderr`
- en: Audit records from the kernel audit subsystem
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自内核审计子系统的审计记录
- en: 'Like `syslog`, this means `logger` can be used to show we can still populate
    the log manually, here showing only those messages received from the `syslog`
    transport mechanism:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `syslog` 一样，这意味着 `logger` 可以用来显示我们仍然可以手动填充日志，这里只显示从 `syslog` 传输机制接收到的消息：
- en: '[PRE25]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In the future, there's a good chance that `syslog` will be dropped and `journald`
    will become the new norm, but given how long `syslog` as a concept has been around
    for, it'll be a very long time before that becomes the case.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来，`syslog` 很有可能被淘汰，`journald` 将成为新的标准，但考虑到 `syslog` 作为一个概念存在了很长时间，这种情况在成为现实之前还需要很长时间。
- en: The fact `journald` logs in a binary way is something of a point of contention
    for a lot of traditionalists but, like Columbus, it didn't arrive on the scene
    first, it's just the one that got all the attention. Those of you who've ever
    used OpenBSD, and its firewall `pf`, will perhaps find the notion of binary logging
    a comfort.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`journald` 以二进制方式记录日志是许多传统主义者争论的焦点，但就像哥伦布一样，它并不是第一个出现在舞台上的，只是得到了所有的关注。那些曾经使用过
    OpenBSD 及其防火墙 `pf` 的人，也许会觉得二进制日志记录是一种安慰。'
- en: There's more...
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: One thing to be aware of is the space that the journal log will use. The size
    limitations are governed by options in `journald.conf`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一件事是日志记录将使用的空间。大小限制由 `journald.conf` 中的选项管理。
- en: The options `SystemMaxUse` and `RuntimeMaxUse` govern the maximum disk space
    the journal can use; these default to 10% of the size of the filesystem, with
    a cap of 4 GB.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 选项 `SystemMaxUse` 和 `RuntimeMaxUse` 管理日志记录可以使用的最大磁盘空间；这些默认为文件系统大小的 10%，上限为 4GB。
- en: The `SystemKeepFree` and `RuntimeKeepFree` options govern how much disk space
    `journald` leaves free for other uses; these default to 15% of the size of the
    filesystem, and are also capped to 4 GB.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`SystemKeepFree` 和 `RuntimeKeepFree` 选项管理 `journald` 为其他用途保留多少磁盘空间；这些默认为文件系统大小的
    15%，上限也为 4GB。'
- en: There are various scenarios governing size but, basically, `journald` will try
    its hardest not to be the reason your filesystem fills up, and it's that sort
    of attention to detail that makes me love it.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种情况来管理大小，但基本上，`journald` 将尽最大努力不成为文件系统填满的原因，正是这种对细节的关注使我喜欢它。
- en: See also
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'On our CentOS system, the log file is transient, being lost upon reboot. While
    it''s live, it exists in `/run/log/journal/`:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 CentOS 系统上，日志文件是瞬时的，在重新启动时会丢失。在它存在的时候，它存在于 `/run/log/journal/` 中。
- en: '[PRE26]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We could actually change this behavior quite easily, by adding a `/var/log/` directory
    specifically for the journal, and using a one-liner to change the permissions:
    `sudo systemd-tmpfiles --create --prefix /var/log/journal`'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上可以通过为日志创建一个专门的 `/var/log/` 目录，并使用一行命令更改权限来相当容易地改变这种行为：`sudo systemd-tmpfiles
    --create --prefix /var/log/journal`
- en: 'You can also list the boots `journalctl` is aware of from the command line:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从命令行列出 `journalctl` 知道的引导：
- en: '[PRE27]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Centralizing logging
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志集中
- en: You don't want to log on to each and every box in your estate to check logs,
    you just don't. In this age of the cloud and automatically provisioned infrastructure,
    it's a lot more faff than it's worth, and it's a great case for centralizing your
    logs in one (redundant) location.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 您不想登录到您的每个盒子来检查日志，您就是不想。在云和自动配置基础设施的时代，这比它值得的要麻烦得多，这是将日志集中在一个（冗余）位置的一个很好的理由。
- en: Being data, our logs can be manipulated and moved relatively easily. Both `rsyslog`
    and `journald` have the capability to do this, and, in this section, we're going
    to be streaming our logs around the place, showcasing how useful this can be.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据，我们的日志可以相对容易地被操纵和移动。 `rsyslog` 和 `journald` 都有这样的能力，在这一部分，我们将把我们的日志流到各个地方，展示这样做有多么有用。
- en: Everything we cover here will be natively possible in the respective programs;
    this is different to some of the centralized logging solutions that are provided
    by software such as the Elastic Stack.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里涵盖的所有内容在各自的程序中都是可以实现的；这与一些由软件提供的集中式日志记录解决方案不同，例如 Elastic Stack。
- en: For the purpose of these examples, we're not utilizing TLS, meaning logs will
    be streamed in a plain format. I would advise against doing this sort of thing
    in production, without investing in HTTPS setups or tunneled solutions.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这些示例的目的，我们没有使用 TLS，这意味着日志将以纯文本格式流式传输。我建议在生产中不要这样做，除非投资于 HTTPS 设置或隧道解决方案。
- en: Getting ready
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we can use the `Vagrantfile` from the first section.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，我们可以使用第一节的 `Vagrantfile`。
- en: We will be using `centos1` and `centos2` for the first part, and then `debian1` and
    `debian2` for the second part, sending logs from one box to the other.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `centos1` 和 `centos2` 进行第一部分，然后使用 `debian1` 和 `debian2` 进行第二部分，从一个盒子发送日志到另一个盒子。
- en: 'Open two Terminals and connect to both `centos1` and `centos2`; install `tcpdump`
    on both boxes:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 打开两个终端并连接到 `centos1` 和 `centos2`；在两个盒子上安装 `tcpdump`：
- en: '[PRE28]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'For part two (`journald`), connect to both `debian1` and `debian2`, and install
    `tcpdump` and `systemd-journal-remote` on both boxes:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二部分（`journald`），连接到 `debian1` 和 `debian2`，并在两个盒子上安装 `tcpdump` 和 `systemd-journal-remote`：
- en: '[PRE29]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How to do it...
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: We'll go through both of the logging daemons in turn, starting with `rsyslog`
    and then doing the same basic thing with `journald`.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将依次介绍两个日志守护程序，首先是`rsyslog`，然后再用`journald`做同样的基本操作。
- en: Remote logging with rsyslog - UDP example
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用rsyslog进行远程日志记录-UDP示例
- en: In order to enable logging to a remote machine with `rsyslog`, you need to enable
    both streaming to a remote location on your client, and receiving on your server.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使`rsyslog`能够远程记录到一台机器，你需要在客户端上启用流到远程位置的接收，并在服务器上启用接收。
- en: For this, `centos1` will be our client, and `centos2` will be our server.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个，`centos1`将是我们的客户端，`centos2`将是我们的服务器。
- en: 'On `centos1` first:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 首先在`centos1`上：
- en: '[PRE30]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now on  `centos2`:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在`centos2`上：
- en: '[PRE31]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We can check this is working immediately with `tcpdump` on our `centos2` VM;
    start it using the following command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以立即通过在我们的`centos2` VM上使用`tcpdump`来检查这是否有效；使用以下命令启动它：
- en: '[PRE32]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now, generate a message on `centos1` to send; here, we''re spoofing a `syslog.info`
    message:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`centos1`上生成一个要发送的消息；在这里，我们伪造了一个`syslog.info`消息：
- en: '[PRE33]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'On `centos2`, you should see something like the following:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos2`上，你应该看到类似以下的东西：
- en: '![](img/9bcab73d-8593-4302-b04f-d5628e1589ed.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bcab73d-8593-4302-b04f-d5628e1589ed.png)'
- en: 'And, of course, in the `/var/log/messages` file where our log line will end
    up, you will see the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在我们的日志行最终到达的`/var/log/messages`文件中，你会看到以下内容：
- en: '[PRE34]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Here, we can also see `eth1` being put in promiscuous mode by `tcpdump`, prior
    to and after us delivering our `syslog` message.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们还可以看到`tcpdump`通过`tcpdump`将`eth1`置于混杂模式中，我们传递`syslog`消息之前和之后。
- en: Remote logging with rsyslog - TCP example
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用rsyslog进行远程日志记录-TCP示例
- en: The previous example covered UDP, which is simply a stream of information with
    no confirmation that the server on the other side received the noise. With a TCP
    connection, the `syslog` servers communicate with each other to establish a connection
    first.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的例子涵盖了UDP，这只是一种没有确认服务器是否接收到噪音的信息流。通过TCP连接，`syslog`服务器相互通信首先建立连接。
- en: 'On your `centos1` machine, replace the single `@` sign in your destination
    address with two `@@` signs:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的`centos1`机器上，用你的目标地址中的单个`@`符号替换为两个`@@`符号：
- en: '[PRE35]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Our client is now set, but no logs can be sent until the connection is established.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户端现在已经设置好，但在建立连接之前无法发送日志。
- en: 'On `centos2`, let''s set the `rsyslog` server to receive TCP connections and
    data:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos2`上，让我们将`rsyslog`服务器设置为接收TCP连接和数据：
- en: '[PRE36]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: An `rsyslog` server can listen on UDP and TCP at the same time.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 一个`rsyslog`服务器可以同时监听UDP和TCP。
- en: 'Let''s test it out! On `centos2`, set up your `tcpdump` again:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来测试一下！在`centos2`上，再次设置你的`tcpdump`：
- en: '[PRE37]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'And send a log message from `centos1`:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 并从`centos1`发送一个日志消息：
- en: '[PRE38]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Your `tcpdump` output should look similar to the following:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 你的`tcpdump`输出应该类似于以下内容：
- en: '![](img/a65b5ffb-8f04-442c-8710-6abe1666f01b.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a65b5ffb-8f04-442c-8710-6abe1666f01b.png)'
- en: 'And, again, your messages file should have the new alert:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，你的消息文件应该有新的警报：
- en: '[PRE39]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Remote logging with journald
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用journald进行远程日志记录
- en: The `systemd-journal-remote` command allows you to receive journal messages
    over a network. Sadly, it's a fairly recent addition to the `systemd` suite, and
    isn't yet available on CentOS systems.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd-journal-remote`命令允许你通过网络接收日志消息。不幸的是，这是`systemd`套件的一个相当新的添加，目前还不在CentOS系统上可用。'
- en: 'On your first Debian system (`debian1`), set up your remote upload location:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的第一个Debian系统（`debian1`）上，设置你的远程上传位置：
- en: '[PRE40]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'On your second box (`debian2`), start by editing the listening service, using
    `systemctl edit`:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的第二个盒子（`debian2`）上，首先通过使用`systemctl edit`编辑监听服务：
- en: '[PRE41]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'When presented with the empty editor, add the following three lines:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当出现空编辑器时，添加以下三行：
- en: '[PRE42]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'It should look something like the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该看起来像以下内容：
- en: '![](img/341259df-619f-451b-be4d-55a805bae749.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/341259df-619f-451b-be4d-55a805bae749.png)'
- en: Save and exit (*Ctrl* + *O*, *Enter*, *Ctrl* + *X*).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并退出（*Ctrl* + *O*，*Enter*，*Ctrl* + *X*）。
- en: 'Now you need to make the remote folder location, and make sure it has the appropriate
    permissions, before finally restarting the service:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你需要创建远程文件夹位置，并确保它具有适当的权限，最后重新启动服务：
- en: '[PRE43]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'And don''t forget to start the service on `debian1`:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 并不要忘记在`debian1`上启动服务：
- en: '[PRE44]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Give it a test by following your log on `debian2`:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在`debian2`上跟踪你的日志来测试一下：
- en: '[PRE45]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'It can also be tested by using our trusty `logger` command on `debian1`:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过在`debian1`上使用我们信任的`logger`命令来测试：
- en: '[PRE46]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'With any luck, you''ll see the following:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的话，你会看到以下内容：
- en: '![](img/44ecbf30-a60f-4b80-a642-98f816521792.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/44ecbf30-a60f-4b80-a642-98f816521792.png)'
- en: How it works...
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '工作原理... '
- en: What we're effectively doing is opening up a listener for logs in both the `syslog`
    and `journald` solutions. A network port is opened on our boxes, and the daemon
    is aware of a source of data that it might be forced to read from. In the case
    of `syslog`, we had to enable specific modules in the `rsyslog` daemon to make
    this happen; `systemd` and `journald` required specific packages.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上正在为`syslog`和`journald`解决方案中的日志打开一个监听器。我们的盒子上打开了一个网络端口，并且守护进程知道可能被迫读取数据的来源。在`syslog`的情况下，我们必须启用`rsyslog`守护进程中的特定模块才能实现这一点；`systemd`和`journald`需要特定的软件包。
- en: Obviously, journald's implementation appears a bit clunkier, but that's mostly
    because it's newer.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，journald的实现看起来有点笨重，但这主要是因为它是较新的。
- en: Fundamentally, we're just dealing with streaming log data, and neither `syslog`
    nor `journald` care where that data comes from, as long as it's in a format that
    they can understand.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，我们只是在处理流式日志数据，无论`syslog`还是`journald`都不在乎数据来自哪里，只要它是它们可以理解的格式。
- en: There's more...
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Time is very important when centralizing logging. Think about how confusing
    it can be to look in a log file that features multiple hosts, and discover interspersed
    time jumps.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在集中记录日志时，时间非常重要。想想看在一个包含多个主机的日志文件中查找并发时间跳跃有多令人困惑。
- en: It can also make log parsing hard, as we can use specific timestamps to properly
    arrange data, and we could miss something critical if our remote box has the wrong
    time.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可能使日志解析变得困难，因为我们可以使用特定的时间戳来正确排列数据，如果我们的远程盒子时间错误，我们可能会错过一些关键内容。
- en: TLS and secure transport are also something to think about, as mentioned in
    the introduction to this section. You can configure `systemd-journal-remote` to
    listen on HTTPS, instead of HTTP, as long as you sort your certificates properly.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: TLS和安全传输也是需要考虑的内容，正如本节介绍中提到的那样。只要你正确配置证书，就可以将`systemd-journal-remote`配置为监听HTTPS，而不是HTTP。
- en: For syslog, TLS and encryption can be a bit trickier, but there are more solutions
    to consider, such as streaming log data over an SSH tunnel, or using a program
    such as `spipe` to offload the heavy work of TLS.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 对于syslog，TLS和加密可能会有些棘手，但有更多的解决方案需要考虑，比如通过SSH隧道流式传输日志数据，或者使用`spipe`这样的程序来卸载TLS的繁重工作。
- en: Local resource measuring tools
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地资源测量工具
- en: Occasionally, it can be incredibly handy to know what a box is doing right this
    second. Usually, this will be during a debugging session, when you're trying to
    work out why the website is responding an order of magnitude slower, or why it's
    taking 5 minutes to type your SSH command on a remote session.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，了解一个盒子此刻正在做什么是非常方便的。通常情况下，这将在调试会话期间发生，当你试图弄清楚为什么网站的响应速度慢了一个数量级，或者为什么在远程会话中输入SSH命令要花费5分钟的时候。
- en: Here, local resource monitors come in handy. We've already touched on these
    briefly, but this section will look at them in slightly more detail, and will
    cover some of the more obscure tools that you might find useful when remotely
    connected to your server.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，本地资源监视器非常有用。我们已经简要提到过这些，但本节将稍微详细地介绍它们，并将涵盖一些在远程连接到服务器时可能会有用的更加隐秘的工具。
- en: We're going to look at the classics of `free` and `top`, before moving on to
    the more recent additions, such as `netdata` and `htop`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将先看看`free`和`top`这两个经典的程序，然后再转向更近期的添加，比如`netdata`和`htop`。
- en: Getting ready
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we're going to use our `centos1` and `debian1` VMs.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，我们将使用我们的`centos1`和`debian1`虚拟机。
- en: All of the programs we look at will be universally available in one form or
    another.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所看到的所有程序都将以某种形式普遍存在。
- en: 'SSH to your `centos1` VM, and ensure that the EPEL repository is enabled:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: SSH到你的`centos1`虚拟机，并确保启用了EPEL存储库：
- en: '[PRE47]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'SSH to your `debian1` VM, very specifically, forwarding port `19999` to your
    local machine (more on this later):'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: SSH到你的`debian1`虚拟机，非常具体地，将端口`19999`转发到你的本地机器（稍后会详细介绍）：
- en: '[PRE48]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: How to do it...
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到…
- en: As with most of what we look at, there are classic examples of software that
    has been kicking around in one form or another since roughly the 1970s, back when
    most programs had names of two or three characters (ls, cp, mv). One of these
    is `top` and another is `free`, both of which still have their place.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 和我们所看到的大多数内容一样，有一些经典的软件例子，它们的形式或多或少自上世纪70年代以来一直存在，那时大多数程序的名称只有两三个字符（ls，cp，mv）。其中之一是`top`，另一个是`free`，它们仍然有它们的用武之地。
- en: Then there are the more modern, slick, and beautiful programs. Gone are the
    monochrome CRT-designed applications, and, in their place, are Terminal applications
    that even support 256 colours!
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 然后还有更现代、时髦、漂亮的程序。单色CRT设计的应用程序已经过去了，取而代之的是甚至支持256种颜色的终端应用程序！
- en: Finally, there's NetData, which I touch on here because it's making quite the
    storm in the world of local administration.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有NetData，我在这里提一下，因为它在本地管理领域引起了轰动。
- en: top
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: top
- en: 'An old friend, and guaranteed to be installed on any Unix or Unix-like system,
    top is your immediate window into what your system thinks it''s doing:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一个老朋友，也保证会安装在任何Unix或类Unix系统上，top是你对系统当前活动的直接窗口：
- en: '[PRE49]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The output for the preceding command is shown as follows:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下所示：
- en: '![](img/6950a085-46bf-4316-99f4-fbe2499e2e44.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6950a085-46bf-4316-99f4-fbe2499e2e44.png)'
- en: 'Right from the start, we can see several things:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始，我们就可以看到几件事情：
- en: The time in the top left, and how long the box has been up – 17:09:46 up 8 min
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左上角的时间，以及盒子已经运行的时间- 17:09:46，已运行8分钟
- en: The number of users logged in – 1 user
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录用户的数量- 1个用户
- en: The load average – 0.00, 0.03, 0.03
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载平均值- 0.00，0.03，0.03
- en: The number of running, sleeping, and so on tasks
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正在运行、睡眠等任务的数量
- en: CPU usage information
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU使用信息
- en: Volatile memory information (RAM)
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易失性内存信息（RAM）
- en: SWAP information (disk memory)
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SWAP信息（磁盘内存）
- en: 'Breaking these down, let''s look at some in more detail:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些分解一下，让我们更详细地看一些：
- en: '**Load average**: In detail, the load average is the load of the system over
    the last 1, 5, and 15 minutes. This load average is a display of processes running,
    or those waiting for resources such as CPU time or disk I/O.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**负载平均值**：详细来说，负载平均值是系统在过去1、5和15分钟内的负载。这个负载平均值显示了正在运行的进程，或者那些正在等待CPU时间或磁盘I/O等资源的进程。'
- en: The disk I/O element is important, as it's something that's pretty Linux-specific
    and that a lot of people forget. You can have a system that's completely free
    of load on the CPU, and yet has high load average values; this can be an indication
    that you need to upgrade that old and creaking HDD into a shiny new NVMe drive.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘I/O元素很重要，因为这是相当特定于Linux的东西，很多人会忽略。你可以有一个完全没有CPU负载的系统，但负载平均值却很高；这可能表明你需要将那个古老而脆弱的HDD升级为全新的NVMe驱动器。
- en: '**Tasks**:Basically, you can think of tasks as the number of processes that
    are running now, or that are in the sleeping/zombie/stopped state on your system.
    It''s the same number you''d get with `ps aux`.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：基本上，你可以将任务看作是当前正在运行的进程数量，或者是在你的系统上处于睡眠/僵尸/停止状态的进程数量。这与`ps aux`得到的数字是一样的。'
- en: '**%CPU**: It''s best to defer to the man page for this one:'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**%CPU**：最好参考手册页：'
- en: 'us, user    : time running un-niced user processes'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: us，user：运行非niced用户进程的时间
- en: 'sy, system  : time running kernel processes'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: sy，system：运行内核进程的时间
- en: 'ni, nice    : time running niced user processes'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: ni，nice：运行niced用户进程的时间
- en: 'id, idle    : time spent in the kernel idle handler'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: id，idle：在内核空闲处理程序中花费的时间
- en: 'wa, IO-wait : time waiting for I/O completion'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: wa，IO等待：等待I/O完成的时间
- en: 'hi : time spent servicing hardware interrupts'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: hi：用于服务硬件中断的时间
- en: 'si : time spent servicing software interrupts'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: si：用于服务软件中断的时间
- en: 'st : time stolen from this vm by the hypervisor'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: st：被超级监视器从此虚拟机中窃取的时间
- en: '**KiB Mem**: In digits, this is the amount of RAM available to your system,
    broken down into the total, free, used, and buffers/caches.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KiB Mem**：以数字形式表示，这是可用于系统的RAM量，分为总计、空闲、已使用和缓冲区/高速缓存。'
- en: Buffers/caches are memory that's in use, but which can be annexed by any program
    that wishes to use it in an instant. Linux likes RAM, and unused RAM is wasted
    RAM, so it will do everything it can to use it.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 缓冲区/高速缓存是正在使用的内存，但任何希望立即使用它的程序都可以吞并它。Linux喜欢RAM，未使用的RAM是浪费的RAM，因此它会尽其所能来使用它。
- en: '**KiB Swap**: Also in digits, this is the amount of Swap available, broken
    down once more.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KiB Swap**：同样以数字形式表示，这是可用的交换量，再次分解。'
- en: 'If you want a nicer view, cycling through the options by hitting *M* a few
    times will give you visual representations:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要一个更好的视图，通过多次按*M*循环浏览选项，将为您提供可视化表示：
- en: '![](img/5b48f441-143c-4040-a8f2-5ba586e05f16.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b48f441-143c-4040-a8f2-5ba586e05f16.png)'
- en: 'Lastly, we have the ever-changing process list and information about running
    jobs on your system:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有不断变化的进程列表和有关系统上运行作业的信息：
- en: '![](img/98d0b821-84f3-45b7-a9b8-3130314dadd0.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/98d0b821-84f3-45b7-a9b8-3130314dadd0.png)'
- en: By default, this is organized by CPU usage (%CPU) but you can adjust that if
    you wish.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这是按CPU使用率（%CPU）组织的，但如果您愿意，可以进行调整。
- en: 'Along the top, we have the following:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部有以下内容：
- en: The PID of the task in question
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题任务的PID
- en: The user running the process
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行进程的用户
- en: PR, the priority of a task (the higher the priority, the more likely it is to
    get prioritized)
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PR，任务的优先级（优先级越高，越有可能被优先处理）
- en: NI, the nice value of a task; minus values have a higher priority
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NI，任务的优先级值；负值具有更高的优先级
- en: VIRT, the virtual memory being used by the task (all memory, including the likes
    of shared libraries)
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟内存被任务使用（所有内存，包括共享库等）
- en: RES, the non-swapped physical memory being used by the task
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RES，任务正在使用的未交换物理内存
- en: SHR, mostly RES, without some bits that are too technical for this book
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SHR，主要是RES，没有一些对这本书来说太技术性的位
- en: S, the state of the process (running, sleeping, zombie, and so on)
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: S，进程的状态（运行、睡眠、僵尸等）
- en: '%CPU, how much CPU time a task has used since the last refresh, a percentage
    of the total CPU time available'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '%CPU，任务自上次刷新以来使用的CPU时间，占总CPU时间的百分比'
- en: '%MEM, how much available physical memory a task is currently using'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '%MEM，任务当前正在使用的可用物理内存的百分比'
- en: TIME+, an update of TIME, it's the total CPU time the task has used since starting;
    the plus increases granularity
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TIME+，TIME的更新，它是任务自启动以来使用的总CPU时间；加号增加了粒度
- en: COMMAND, the name of the task
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: COMMAND，任务的名称
- en: Phew!
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 呼~
- en: That's `top`, but it's so much more than that, and it might look slightly different
    on different systems. It can also do color, but only one distribution I know of
    switches it on out of the box.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`top`，但它远不止于此，而且在不同的系统上可能看起来略有不同。它也可以显示颜色，但我只知道有一个发行版会默认打开它。
- en: It's a good idea to load `top` and hit *H* or *?* for a helpful indication of
    what `top` is capable of.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 加载`top`并按*H*或*?*，以获得`top`能够做什么的有用指示，是个好主意。
- en: free
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: free
- en: '`free` is a great way to see how busy your system is at a glance; more specifically,
    it''s the quickest way of finding out how much memory is being used on your box.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`free`是一种快速了解系统繁忙程度的好方法；更具体地说，它是快速了解系统上正在使用多少内存的最快方法。'
- en: Thankfully, `free` has fewer options than `top`. Mostly, the flags are just
    to change the output of the command, making it more human-readable or less, if
    that's your thing.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 谢天谢地，`free`的选项比`top`少。大多数情况下，标志只是用来改变命令的输出，使其更易读，或者更少，如果你喜欢的话。
- en: Personally, I use `-m` which outputs the value in mebibytes, but if your system
    has Gigs of memory, you might find `-g` more useful.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 就我个人而言，我使用`-m`，它以美比字节输出值，但如果您的系统有几GB的内存，您可能会发现`-g`更有用。
- en: 'In the following, you will see `free -ht` on our `centos1` VM: `-h` is used
    for human-readable output, giving a nice mix of mebibyte and gibibyte values;
    `-t` is a flag to add a `Total` line, giving a sum of `Mem` and `Swap` values:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的内容中，您将看到我们的`centos1` VM上的`free -ht`：`-h`用于人类可读的输出，提供了美比字节和吉比字节值的良好混合；`-t`是一个标志，用于添加`Total`行，给出`Mem`和`Swap`值的总和：
- en: '![](img/07d3d8d0-fa5b-47f7-a9dd-4aa68ed2ebdf.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07d3d8d0-fa5b-47f7-a9dd-4aa68ed2ebdf.png)'
- en: The important field is `available`, as it effectively tells you how much physical
    memory is available before the system starts swapping; if this is `0`, you're
    going to be constantly reading and writing to disk, which can slow a system drastically.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的字段是`available`，因为它有效地告诉您在系统开始交换之前有多少物理内存可用；如果这是`0`，您将不断地读写磁盘，这会严重减慢系统速度。
- en: htop
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: htop
- en: '`htop` is like `top`, but prettier. If a box is under my control (and providing
    the appropriate approval has been given), you''re very likely to find `htop` installed.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`htop`就像`top`，但更漂亮。如果一个系统在我的控制之下（并且已经得到适当的批准），您很可能会发现`htop`已安装。'
- en: In a pinch, `top` is fine, and you're guaranteed to find it pre-installed on
    a box, but if you want something that doesn't feel like it's from the 1970s, `htop`
    is extremely helpful.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在紧要关头，`top`是可以的，而且保证会在系统上预装，但如果您想要一个不像是上世纪70年代的东西，`htop`非常有帮助。
- en: 'Here''s `htop` on our `centos1` VM:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们`centos1` VM上的`htop`：
- en: '![](img/38d52dde-947b-4aea-b1fe-8b652ba728c3.png)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38d52dde-947b-4aea-b1fe-8b652ba728c3.png)'
- en: Note that we still have all the same information that `top` gives us, only now
    we've made use of what a modern Terminal emulator can do, giving us colors by
    default, and nicely aligning output into a window that also supports mouse input
    (try it!).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们仍然拥有`top`给我们的所有相同信息，只是现在我们已经利用了现代终端仿真器的功能，使我们默认拥有颜色，并且将输出整齐地排列到一个窗口中，该窗口还支持鼠标输入（试试看！）。
- en: 'Further to `top`, we have the ability to format our output quickly and easily
    by changing the look of our window; the options such as `Tree` at the bottom of
    the screen (*F5*) can provide a very useful tree view when pressed (note it changes
    to read `Sorted`):'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`top`之外，我们还可以通过更改窗口的外观来快速轻松地格式化输出；屏幕底部的选项（*F5*）如`Tree`在按下时可以提供非常有用的树视图（请注意，它会更改为`Sorted`）：
- en: '![](img/444e082f-3db0-44a6-8277-d7a5f7e5743e.png)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![](img/444e082f-3db0-44a6-8277-d7a5f7e5743e.png)'
- en: As with top, there are also options for changing what's shown in terms of columns
    and information, although, unlike `top`, these are under the Setup menu (*F3*)
    and changes are persisted to disk in the form of a configuration file, located
    at `~/.config/htop/htoprc`.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 与top一样，还有更改所显示的列和信息的选项，尽管与`top`不同，这些选项位于设置菜单（*F3*）下，并且更改将以配置文件的形式持久保存到磁盘，位于`~/.config/htop/htoprc`。
- en: NetData
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NetData
- en: Popular mainly due to being able to market itself effectively, NetData is an
    aggregator of all the system information it can get hold of.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 由于能够有效地进行市场营销，NetData主要因此而受欢迎，它是所有系统信息的聚合器。
- en: 'This is not an advert nor an endorsement, merely an example of what third-party
    software can do. NetData does use a centralized server for logging some data,
    such as system hostnames, meaning you should check against your internal security
    policy if you intend to use this tool. See the NetData security page for more
    information:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是广告，也不是认可，只是第三方软件可以做的一个例子。NetData确实使用集中式服务器来记录一些数据，例如系统主机名，这意味着如果您打算使用此工具，应检查您的内部安全策略。有关更多信息，请参阅NetData安全页面：
- en: '[https://docs.netdata.cloud/docs/netdata-security/](https://docs.netdata.cloud/docs/netdata-security/)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.netdata.cloud/docs/netdata-security/](https://docs.netdata.cloud/docs/netdata-security/)'
- en: As with everything, understand what the software you're installing does, before
    you blindly click Accept.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 与一切一样，在盲目点击接受之前，了解您要安装的软件的功能。
- en: Flipping over to our Debian VM, we're going to install NetData here, as it's
    available in the backports repository (software added to previously released Debian
    versions after the fact).
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 转到我们的Debian VM，我们将在这里安装NetData，因为它在后备存储库中可用（在事后添加到先前发布的Debian版本中的软件）。
- en: 'First, we need to enable the `backports` repository and then we can install
    our package:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要启用`backports`存储库，然后我们可以安装我们的软件包：
- en: '[PRE50]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: As Debian typically starts services by default, after installation, NetData
    is now enabled and started.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Debian通常默认启动服务，因此安装后，NetData现在已启用并启动。
- en: By default, though, it will only listen on localhost, which is why we needed
    to forward that IP and port in our *Getting ready* section. If you've not done
    so, log off from your `debian1` VM and use the command from that section.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，默认情况下，它只会在本地主机上侦听，这就是为什么我们需要在*准备就绪*部分中转发该IP和端口的原因。如果您还没有这样做，请从`debian1` VM注销，并使用该部分中的命令。
- en: 'Now, navigating to `http://127.0.0.1:19999` in your local machine''s web browser
    will forward that connection through to your VM, and you should see the NetData
    GUI:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在本地机器的Web浏览器中导航到`http://127.0.0.1:19999`将会将该连接转发到您的VM，您应该会看到NetData GUI：
- en: '![](img/3754837c-4578-450f-8bc6-0380ed3c646a.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3754837c-4578-450f-8bc6-0380ed3c646a.png)'
- en: NetData Homepage
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: NetData主页
- en: Even I've got to admit, the interface is pretty swish.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我不得不承认，界面非常漂亮。
- en: Note that, on the right, it even gives you a snippet of information about what
    NetData is doing, and where it's getting information from: netdata on `debian1` collects
    686 metrics every second, presented as 142 charts and monitored by 41 alarms,
    using 11 MB of memory for 1 hour, 6 minutes and 36 seconds of real-time history.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，右侧甚至会给出有关NetData正在做什么以及它从哪里获取信息的信息片段：`debian1`上的netdata每秒收集686个指标，呈现为142个图表，并由41个警报监视，使用11
    MB的内存，实时历史记录为1小时6分钟36秒。
- en: How it works...
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`top` queries the kernel to gather information about a running system, making
    it very fast at reflecting the nature of the box it''s been run on. It''s also
    incredibly lightweight, meaning that unless a box is extremely overloaded, there''s
    a good chance `top` will still run (and if it is overloaded, you''ve got bigger
    issues). It''s been around since the 1980s; it''s tried and tested.'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`查询内核以收集有关正在运行的系统的信息，使其非常快速地反映了其运行的计算机的性质。它也非常轻量级，这意味着除非计算机负载极重，否则`top`仍然有很大机会运行（如果负载过重，您将面临更大的问题）。它自上世纪80年代以来一直存在；它经过了试验。'
- en: '`free` takes a look at the values available in `/proc/meminfo`, meaning that
    while you can query these files yourself (and some people do), `free` provides
    a nicer way of looking at values (and gives you the option to refresh on a periodic
    basis, if that''s what you''re after).'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '`free`查看`/proc/meminfo`中可用的值，这意味着虽然您可以自己查询这些文件（有些人确实这样做），但`free`提供了一种更好的查看值的方式（并且可以选择定期刷新，如果您需要的话）。'
- en: '`htop` queries the system in much the same way as `top` (though this isn''t
    necessarily the same across operating systems such as macOS or the BSD family).
    The difference with `htop` is that it uses the `ncurses` library to display itself,
    and while it''s not as old as `top`, it has been around for about 14 years at
    the time of writing.'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '`htop`以与`top`基本相同的方式查询系统（尽管这在macOS或BSD系列等操作系统中并非必然相同）。`htop`的区别在于它使用`ncurses`库来显示自己，虽然它不像`top`那样古老，但在撰写本文时已经存在大约14年。'
- en: NetData uses various sources (and can use custom plugins) to collect data every
    second; it then displays this data to the user.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: NetData使用各种来源（并可以使用自定义插件）每秒收集数据；然后将此数据显示给用户。
- en: There's more...
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: NetData might look cool, and, at a glance, it can be a nifty way of finding
    out what your server is up to (especially if you've got it on a wall in your office
    or something), but this isn't an advertisement, and I would advise caution when
    using tools such as this. Not because they're dangerous (though always check your
    sources), but because they can be a little frivolous, and serve as nothing more
    than a dashboard that management might like to see on your PC monitor occasionally.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: NetData可能看起来很酷，并且乍一看，它可以是了解服务器正在做什么的一种巧妙方式（特别是如果您将其放在办公室的墙上之类的地方），但这并不是广告，我建议在使用此类工具时要谨慎。不是因为它们危险（尽管始终检查您的来源），而是因为它们可能有点轻浮，只是作为管理人员偶尔想在您的PC监视器上看到的仪表板。
- en: Ooh! I've thought of another great use for NetData, maybe as some sort of background
    set-dressing in some cheesy DC or SciFi TV show; that'd be neat too.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 哦！我又想到了NetData的另一个很好的用途，也许可以作为一些俗气的DC或SciFi电视节目中的某种背景装饰；那也很好。
- en: What we looked at here are only a sample of the tools on offer. The defaults
    will always be available to you (the tops and frees of the world), but there are
    hundreds of others to choose from, some of which might fit your needs, and some
    of which might fit that wallboard in the corner of the office that no one else
    ever uses.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里看到的只是提供的工具的一个样本。默认情况下，您始终可以使用（世界上的顶部和空闲），但还有数百种其他选择，其中一些可能符合您的需求，另一些可能符合办公室角落的墙板，其他人从不使用。
- en: Have a look around, search the net, and try things out.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 四处看看，搜索一下网络，然后尝试一些东西。
- en: It's Linux, there are a hundred ways to accomplish the same thing.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Linux，有一百种方法可以完成同样的事情。
- en: Local monitoring tools
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地监控工具
- en: Like tools that keep an eye on the resources of your system here and now, there
    are tools for looking at the historic data on your system. NetData could be considered
    one of these, depending on how you use it, but there are more besides, and we'll
    look at a few more that can help you to debug past problems.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 就像有一些工具可以监视您的系统资源，还有一些工具可以查看系统的历史数据。根据您的使用方式，NetData可以被认为是其中之一，但除此之外还有更多，我们将看一些其他可以帮助您调试过去问题的工具。
- en: 'We''re going to take a look at the following:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下以下内容：
- en: '`atop`'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`atop`'
- en: '`sar`'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sar`'
- en: '`vmstat`'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vmstat`'
- en: Getting ready
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, we're going to continue to use the `Vagrantfile` from the
    first section of this chapter.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将继续使用本章第一节中的`Vagrantfile`。
- en: 'Log on to `centos1`, the VM we''re going to be using in this section:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到`centos1`，这是我们将在本节中使用的虚拟机：
- en: '[PRE51]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Install the tools we''ll be using:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 安装我们将要使用的工具：
- en: '[PRE52]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: How to do it...
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Once you've got all your tools installed, work through each of the following
    sections.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 安装好所有工具后，逐个完成以下各节。
- en: atop
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: atop
- en: atop (Advanced System and Process Monitoring)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: atop（高级系统和进程监控）
- en: 'To begin, run `atop` normally:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，正常运行`atop`：
- en: '[PRE53]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'You should see something like this:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到类似于这样的东西：
- en: '![](img/7df27ac4-c1bd-4b8d-b33f-14e991620d90.png)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7df27ac4-c1bd-4b8d-b33f-14e991620d90.png)'
- en: 'This gives us some good information, specifically the system and process activity
    since boot, before it rotates onto a rolling display of the activity over the
    previous 10 seconds. In other words, 10 seconds later, it looks like this:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们提供了一些很好的信息，特别是自启动以来的系统和进程活动，然后它会在之前的10秒内显示活动的滚动显示。换句话说，10秒后，它看起来像这样：
- en: '![](img/f4a44ad1-75f7-4fe3-8317-cf644e07bbb6.png)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4a44ad1-75f7-4fe3-8317-cf644e07bbb6.png)'
- en: Furthermore, `atop` can be used to store data not just of the current boot,
    but also periodically.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`atop`不仅可以用于存储当前启动的数据，还可以定期使用。
- en: 'Enable the `atop` service as follows:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 启用`atop`服务如下：
- en: '[PRE54]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'You will now find that historic days are logged to `/var/log/atop` in a binary
    format and those same files can then be replayed at a future date, in case you
    want to know what happened to your system in the middle of the night that caused
    all those red alerts:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您会发现历史记录的日期被记录到`/var/log/atop`中以二进制格式，并且这些文件可以在将来的某个日期进行回放，以便了解系统在半夜发生了什么导致所有这些红色警报：
- en: '[PRE55]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To read a file again, you can either specify the full filename, or the date
    you''re after:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 要再次读取文件，可以指定完整的文件名，也可以指定您要查找的日期：
- en: '[PRE56]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Because we started the service at `18:56:14`, that''s what we see when we load
    this file:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们在`18:56:14`启动了服务，所以当我们加载这个文件时就会看到这个时间：
- en: '![](img/3d14cc15-92ae-414f-9d77-50f4fd9d726d.png)'
  id: totrans-372
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d14cc15-92ae-414f-9d77-50f4fd9d726d.png)'
- en: We can then adjust the samples by using *t* and *T*to move forward and backward.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以通过使用*t*和*T*来调整样本以前进和后退。
- en: '`atop` is restarted at midnight by a `cron` job:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '`atop`由`cron`作业在午夜重新启动：'
- en: '[PRE57]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: sar
  id: totrans-376
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: sar
- en: '`sar` is a way of reading system information, but it also allows you to read
    historic information.'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '`sar`是一种读取系统信息的方式，但它也允许您读取历史信息。'
- en: 'It''s enabled with a `systemctl` command, which actually triggers a binary
    called `sa1` to start at boot:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 它是通过`systemctl`命令启用的，实际上触发了一个名为`sa1`的二进制文件在启动时启动：
- en: '[PRE58]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Run via a `cron` job, `sar` is executed every 10 minutes to grab system information.
    It then has a daily summary created at `23:53`:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`cron`作业运行，`sar`每10分钟执行一次以获取系统信息。然后在`23:53`创建每日摘要：
- en: '[PRE59]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'To specify a `sar` file to open and read, use the `-f` flag:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-f`标志指定要打开和读取的`sar`文件：
- en: '[PRE60]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Or, if you want to be more granular, you can specify start and stop times:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果您想更加细致，可以指定开始和结束时间：
- en: '[PRE61]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: vmstat
  id: totrans-386
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vmstat
- en: '`vmstat` is a great way to report on memory statistics; by default, its output
    looks like this:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`vmstat`是报告内存统计信息的好方法；默认情况下，其输出如下：'
- en: '[PRE62]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Where `vmstat` excels, though, is the fact its initial report (the preceding
    output) is the information since boot, and you can add a digit to the end of your
    command, to get a rolling summary:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，`vmstat`的优点在于它的初始报告（前面的输出）是自启动以来的信息，并且您可以在命令的末尾添加一个数字，以获得滚动摘要：
- en: '[PRE63]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Again, like NetData, `vmstat` could fit in either category (this or the preceding
    section) and, as a result, it falls to the user to decide how to do it. You could,
    for example, write a `systemd-timer` to run `vmstat` 10 times, every hour, and
    output the result to a file for you to peruse at a later date. This is a bit more
    manual than the out-of-the-box solutions such as `sar` and `atop`, but it would
    be good practice for bigger projects.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 与NetData一样，`vmstat`可以适用于这一部分或前一部分，因此用户需要决定如何做。例如，您可以编写一个`systemd-timer`，每小时运行`vmstat`
    10次，并将结果输出到文件中，以便以后查看。这比开箱即用的解决方案（如`sar`和`atop`）要手动一些，但对于更大的项目来说是一个很好的练习。
- en: How it works...
  id: totrans-392
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: As with our previous section, out of the box, a lot of the `atop` and `sar` setup
    is done for you, but further configuration changes can be made in the relevant
    configuration files for the processes.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们之前的部分一样，开箱即用，`atop`和`sar`的大部分设置已经为您完成，但是可以在相关进程的配置文件中进行进一步的配置更改。
- en: 'Under CentOS, these live in `/etc/sysconfig`, as is traditional:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS下，这些都存储在`/etc/sysconfig`中，这是传统的做法：
- en: '[PRE64]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: When `atop` is started (using `systemd`), the `/usr/share/atop/atop.daily` script
    is triggered, using options from `sysconfig`.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`systemd`启动`atop`时，会触发`/usr/share/atop/atop.daily`脚本，使用`sysconfig`中的选项。
- en: When `sysstat` is enabled with `systemd`, it specifically tells `sar` to start
    with a dummy record, signifying a new boot. This is in addition to the `cron`
    entries we saw previously, and which are dictated by the configuration file in
    `/etc/sysconfig`.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 当`sysstat`与`systemd`一起启用时，它会明确告诉`sar`从一个虚拟记录开始，表示新的启动。这是在我们之前看到的`cron`条目之外的，由`/etc/sysconfig`中的配置文件决定的。
- en: It's a bit complicated using these tools, but you will soon find the data to
    be invaluable to you if you get good at interpreting and using the information
    they provide.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些工具有点复杂，但是如果您擅长解释和使用它们提供的信息，您很快就会发现这些数据对您非常有价值。
- en: Remote monitoring tools
  id: totrans-399
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程监控工具
- en: Being able to query a server locally and find out what it's doing is great,
    but that's rarely how things are done in the real world (outside your single box
    that you might maintain for personal projects). In company scenarios, it's much
    more likely that you'll have a monitoring solution of some sort, perhaps with
    agents on your boxes, which keeps an eye on the health of machines in your care.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 能够在本地查询服务器并了解它在做什么是很好的，但这在现实世界中很少是做事情的方式（在您可能为个人项目维护的单个框之外）。在公司场景中，更有可能的是您会有某种监控解决方案，也许在您的框上有代理，它会监视您负责的机器的健康状况。
- en: Nagios is the undisputed king of monitoring installations the world over, not
    because it's the best, or the most flashy, but simply because it's one of the
    oldest, and once a monitoring solution is in place, you'll find teams are very
    hesitant about switching over to a new one.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: Nagios是全球监控安装的无可争议的王者，不是因为它是最好的，或者最引人注目的，而仅仅是因为它是最古老的之一，一旦监控解决方案就位，您会发现团队非常不愿意切换到新的解决方案。
- en: It has caused several clones to be created, and various offshoots (some using
    the original source code and some not), but all of them will behave in a similar
    fashion.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 它已经导致创建了几个克隆版本，并且有各种分支（有些使用原始源代码，有些不使用），但它们都会以类似的方式运行。
- en: In this part, we're going to install **Nagios** on `centos1`, and have it monitor
    both itself and `debian1`, while we install **Icinga2** on `centos2`, and have
    it monitor `debian2`.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将在`centos1`上安装**Nagios**，并让它监视自己和`debian1`，同时我们将在`centos2`上安装**Icinga2**，并让它监视`debian2`。
- en: Getting ready
  id: totrans-404
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this section, the `Vagrantfile` from the first section will suffice. We
    will be using all four of our VMs.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，第一节中的`Vagrantfile`就足够了。我们将使用我们的四个VM。
- en: We'll run through the Nagios setup first, then move on to Icinga2 afterward.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先运行Nagios设置，然后再转到Icinga2。
- en: Connect to each of your boxes, or start with `centos1` and `debian1`, before
    moving on to `centos2` and `debian2` later.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到您的每个框，或者从`centos1`和`debian1`开始，然后再移动到`centos2`和`debian2`。
- en: 'When connecting to `centos1` for the `Nagios` installation, you will want to
    use the following port forward:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到`centos1`进行`Nagios`安装时，您将希望使用以下端口转发：
- en: '[PRE65]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: How to do it...
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: As mentioned, we'll run through Nagios first, and then Icinga2.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将首先运行Nagios，然后运行Icinga2。
- en: Nagios
  id: totrans-412
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nagios
- en: 'On `centos1`, let''s install Nagios from EPEL:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos1`上，让我们从EPEL安装Nagios：
- en: '[PRE66]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Now that''s finished (which can take some time, as there are a lot of plugins),
    we should start and enable our service, along with `httpd`, which should be installed
    by default:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已经完成了（这可能需要一些时间，因为有很多插件），我们应该启动和启用我们的服务，以及`httpd`，它应该是默认安装的：
- en: '[PRE67]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Out of the box, you will get an insecure nagios-web setup. If you''ve connected
    to your Vagrant VM as suggested previously, you should now be able to navigate
    to the web interface on the forwarded port (`http://127.0.0.1:8080/nagios`):'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 开箱即用，您将获得一个不安全的nagios-web设置。如果您按照先前建议连接到Vagrant VM，现在应该能够在转发端口（`http://127.0.0.1:8080/nagios`）上访问Web界面：
- en: '![](img/efaaa137-c30d-43e7-a502-2599e0146020.png)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efaaa137-c30d-43e7-a502-2599e0146020.png)'
- en: 'We actually haven''t set our `nagiosadmin` password yet (for the basic `http
    auth` prompt), so let''s do that now:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们还没有设置我们的`nagiosadmin`密码（用于基本的`http auth`提示），所以现在让我们来做这个：
- en: '[PRE68]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Once your password is set, try inputting it in the prompt box:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 设置密码后，尝试在提示框中输入密码：
- en: '![](img/2679b5a7-8afe-4834-ac9d-8a7a4a7f2f74.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2679b5a7-8afe-4834-ac9d-8a7a4a7f2f74.png)'
- en: 'You should see the Nagios landing page:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到Nagios的登录页面：
- en: '![](img/5d9f6303-81eb-43cb-af2c-4ed92bdaf02a.png)'
  id: totrans-424
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d9f6303-81eb-43cb-af2c-4ed92bdaf02a.png)'
- en: As I've mentioned in other places, I wouldn't recommend using basic HTTP authentication
    in this manner, as it's insecure. If you can't use HTTPS/TLS to secure the web
    page, you should block it so that it can only be accessed on the box locally,
    and use something like SSH forwarding to encrypt connections to the portal. Ideally,
    though, get a certificate from LetsEncrypt and make life easy for yourself.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在其他地方提到的，我不建议以这种方式使用基本的HTTP身份验证，因为它是不安全的。如果您无法使用HTTPS/TLS来保护网页，您应该将其阻止，以便只能在本地访问该框，并使用类似SSH转发的方式来加密到门户的连接。不过，理想情况下，从LetsEncrypt获取证书并简化您的生活。
- en: 'Now click on Services on the left-hand side; this is where you''ll mostly want
    to be, as it shows the hosts and services on that host that Nagios is currently
    monitoring:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击左侧的Services；这是您大部分时间都想要的地方，因为它显示了Nagios当前正在监视的主机和该主机上的服务：
- en: '![](img/151f78e9-dd19-4412-8878-0017c16ed4d0.png)'
  id: totrans-427
  prefs: []
  type: TYPE_IMG
  zh: '![](img/151f78e9-dd19-4412-8878-0017c16ed4d0.png)'
- en: 'By default, you can see that we''re only monitoring our localhost, which is
    fine for now, but we want to add `debian1` into the mix. Back on the command line,
    let''s get to work by first pointing to our `debian1` file in the Nagios configuration
    file:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，您只能看到我们只监视我们的localhost，这对现在来说是可以的，但是我们想要将`debian1`加入其中。回到命令行，让我们首先指向Nagios配置文件中的`debian1`文件：
- en: '[PRE69]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Now we need to create `debian1.cfg`:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要创建`debian1.cfg`：
- en: '[PRE70]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We''ve got all the same configuration as the `localhost` machine at the moment,
    so we''re going to replace these with `debian1` specific values. We''re also going
    to create a new host group specifically for remote VMs, and we''re going to change
    the local checks to first use `check_nrpe`:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前与`localhost`机器具有相同的配置，因此我们将使用`debian1`特定值替换这些值。我们还将创建一个专门用于远程虚拟机的新主机组，并将本地检查更改为首先使用`check_nrpe`：
- en: '[PRE71]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'With those in place, we have to define the `check_nrpe` command:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们必须定义`check_nrpe`命令：
- en: '[PRE72]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Once done, we can restart our Nagios installation:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们可以重新启动我们的Nagios安装：
- en: '[PRE73]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Looking again at your Services page, you'll now see `debian1`, likely with a
    lot of checks failing.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看您的服务页面，您现在将看到`debian1`，很可能有很多检查失败。
- en: This is because NRPE isn't set up on `debian1`, so let's SSH to `debian1` and
    do that now!
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为`debian1`上没有设置NRPE，所以让我们现在SSH到`debian1`并进行设置！
- en: 'First, we need to install the various bits and pieces:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装各种部件：
- en: '[PRE74]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Now, we need to allow our `centos1` box to talk to `debian1` (via port `5666`):'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要允许我们的`centos1`框与`debian1`通信（通过端口`5666`）：
- en: '[PRE75]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'We also need to define the client commands that our server is going to request
    be run on the client:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要定义服务器将要求在客户端上运行的客户端命令：
- en: '[PRE76]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Finally, we''re at the point we can restart the `nrpe` service on `debian1`:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们到了可以重新启动`debian1`上的`nrpe`服务的时候：
- en: '[PRE77]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Now, looking back at the Nagios web interface (don''t forget to SSH to the
    `centos1` VM again if you disconnected), we should see our services being checked
    correctly:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回顾一下Nagios Web界面（如果您断开连接，请不要忘记再次SSH到`centos1`虚拟机），我们应该看到我们的服务被正确检查：
- en: '![](img/3a5cc6d4-73b8-40be-9a85-27543929882a.png)'
  id: totrans-449
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a5cc6d4-73b8-40be-9a85-27543929882a.png)'
- en: Nagios Services Page with ‘debian1’
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 带有“debian1”的Nagios服务页面
- en: Note that we have a failing check (HTTP) because `debian1` doesn't have a web
    server installed and running.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们有一个失败的检查（HTTP），因为`debian1`没有安装和运行Web服务器。
- en: If your checks haven't cycled through yet, you can force all services on a host
    to be checked by clicking on the host's name and then selecting the Schedule a
    check of all services on this host command.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的检查尚未循环完成，您可以通过单击主机名称，然后选择“计划检查此主机上的所有服务”命令来强制对主机上的所有服务进行检查。
- en: Icinga2
  id: totrans-453
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Icinga2
- en: Like Nagios (which is where it was originally derived from), Icinga2 has the
    concept of a central server, with agents on other hosts that it can keep an eye
    on.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 与Nagios（最初源自Nagios）一样，Icinga2具有中央服务器的概念，以及其他主机上的代理，它可以监视。
- en: We're going to install `Icinga2` on our `centos2` VM, and then monitor our `debian2`
    VM from our first host.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在我们的`centos2`虚拟机上安装`Icinga2`，然后从我们的第一个主机监视我们的`debian2`虚拟机。
- en: 'To get started, jump on to `centos2` and install `Icinga2`:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，跳转到`centos2`并安装`Icinga2`：
- en: '[PRE78]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Note the forwarding section; this will be for the GUI setup later on (port
    `8181`):'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 注意转发部分；这将用于稍后的GUI设置（端口`8181`）：
- en: '[PRE79]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Run through the `mariadb` installation script (the root password is blank by
    default; set it to something you''ll remember):'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`mariadb`安装脚本（默认情况下，root密码为空；将其设置为您记得的内容）：
- en: '[PRE80]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Now set up `mariadb` for `icinga`. This information can be found in the Icinga2
    *Getting Started* guide, [https://icinga.com/docs/icinga2/latest/doc/02-getting-started/#setting-up-icinga-web-2](https://icinga.com/docs/icinga2/latest/doc/02-getting-started/#setting-up-icinga-web-2):'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 现在为`icinga`设置`mariadb`。此信息可以在Icinga2 *入门*指南中找到，[https://icinga.com/docs/icinga2/latest/doc/02-getting-started/#setting-up-icinga-web-2](https://icinga.com/docs/icinga2/latest/doc/02-getting-started/#setting-up-icinga-web-2)：
- en: '[PRE81]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Finally, import the supplied `schema` database:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，导入提供的`schema`数据库：
- en: '[PRE82]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Enable the actual plugin in `icinga2`, and `restart` the service:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 在`icinga2`中启用实际插件，并`重新启动`服务：
- en: '[PRE83]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Once the database setup is done, we can move on to the actual web installation.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库设置完成后，我们可以继续进行实际的Web安装。
- en: We included `httpd` (apache) in the installation step of this section, because
    it's what Icinga2 recommends, though NGINX can be used too (and indeed is the
    default on FreeBSD).
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节的安装步骤中包括`httpd`（apache），因为Icinga2建议使用它，尽管也可以使用NGINX（实际上是FreeBSD上的默认值）。
- en: 'Begin by starting and enabling it:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 首先启动并启用它：
- en: '[PRE84]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Next, enable the `api` feature of `icinga2` and `restart` it:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，启用`icinga2`的`api`功能并`重新启动`它：
- en: '[PRE85]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'A root user and random password will be added to `api-users.conf`:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 将在`api-users.conf`中添加一个root用户和随机密码：
- en: '[PRE86]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Icinga2 web also needs **FastCGI Process Manager** (**FPM**) enabled, so do
    this:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: Icinga2 Web还需要启用**FastCGI Process Manager**（**FPM**），因此请执行此操作：
- en: '[PRE87]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Once done, you should be able to hit the installed Icinga2 web setup in your
    browser (using our forwarded connection), `http://127.0.0.1:8181/icingaweb2/setup`:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您应该能够在浏览器中访问已安装的Icinga2 Web设置（使用我们的转发连接），`http://127.0.0.1:8181/icingaweb2/setup`：
- en: '![](img/418175ed-c6da-4386-8a55-aa12020cc694.png)'
  id: totrans-479
  prefs: []
  type: TYPE_IMG
  zh: '![](img/418175ed-c6da-4386-8a55-aa12020cc694.png)'
- en: 'To find your setup code, get back to your `centos2` command line and run the
    following:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到您的设置代码，请返回到您的`centos2`命令行并运行以下命令：
- en: '[PRE88]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Enter your code and click next through the installation (making sure there''s
    no *red* on the Requirements page; yellow is okay for the Imagick PHP module):'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 输入您的代码并通过安装点击下一步（确保在要求页面上没有*红色*；黄色对于Imagick PHP模块来说是可以的）：
- en: '![](img/a85453fc-6c09-4b90-abb3-576789240e6b.png)'
  id: totrans-483
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a85453fc-6c09-4b90-abb3-576789240e6b.png)'
- en: 'When prompted for the authentication type, choose Database:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 在提示要求身份验证类型时，选择数据库：
- en: '![](img/4f809e92-2931-4edc-ba1d-18a8af575535.png)'
  id: totrans-485
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f809e92-2931-4edc-ba1d-18a8af575535.png)'
- en: 'On the next page, you''ll be prompted to provide a database name, a database
    username, and a database password. Choose suitable values (don''t worry if they''re
    not created yet, we''ll do that next):'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一页上，您将被提示提供数据库名称、数据库用户名和数据库密码。选择合适的值（如果尚未创建，不要担心，我们将在下一步中进行）：
- en: '![](img/e6709c08-24cb-40e8-a811-5d75f20457ae.png)'
  id: totrans-487
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6709c08-24cb-40e8-a811-5d75f20457ae.png)'
- en: Here, you can see I chose `icinga2web` for the database name and username. Click
    Next.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到我选择了`icinga2web`作为数据库名称和用户名。点击下一步。
- en: 'On the screen immediately following, you will be asked to pass in the credentials
    of a user who can access MariaDB to create the new database; I chose to use the
    MariaDB root user we set earlier:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 在紧随其后的屏幕上，您将被要求传入一个可以访问MariaDB以创建新数据库的用户的凭据；我选择使用我们之前设置的MariaDB root用户：
- en: '![](img/7a186994-1e24-489e-8d15-c669d52da5c2.png)'
  id: totrans-490
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7a186994-1e24-489e-8d15-c669d52da5c2.png)'
- en: 'You''ll be prompted to choose a Backend Name, which is an aesthetic decision
    so that you can recognise the backend later:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示选择后端名称，这是一个美学决定，以便您以后可以识别后端：
- en: '![](img/b08dae41-6c95-4f48-9e16-6b20dc7b490b.png)'
  id: totrans-492
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b08dae41-6c95-4f48-9e16-6b20dc7b490b.png)'
- en: 'And you''ll be asked to create a web user; I went with `icingaweb`:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 并且您将被要求创建一个web用户；我选择了`icingaweb`：
- en: '![](img/59edf32f-5a7b-4aac-8a9b-5fa4503253bd.png)'
  id: totrans-494
  prefs: []
  type: TYPE_IMG
  zh: '![](img/59edf32f-5a7b-4aac-8a9b-5fa4503253bd.png)'
- en: 'I kept the Application Configuration as the default:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 我将应用配置保留为默认值：
- en: '![](img/b5fd06f3-1308-4536-9d4d-c47d17209882.png)'
  id: totrans-496
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b5fd06f3-1308-4536-9d4d-c47d17209882.png)'
- en: Lastly, you'll be prompted to confirm the settings you've put in; have a quick
    once-over before continuing.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您将被提示确认您输入的设置；在继续之前快速检查一遍。
- en: 'Clicking Next a couple more times brings you to the Monitoring Backend setup
    (where IcingaWeb2 looks to find the monitoring database):'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下一步几次，直到到达监控后端设置（在那里IcingaWeb2查找监控数据库）：
- en: '![](img/18c564de-06cb-4320-9e00-1facfbeefb88.png)'
  id: totrans-499
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18c564de-06cb-4320-9e00-1facfbeefb88.png)'
- en: 'You''ll be prompted to add connection details that can be used to query the
    icinga database (which we set up using the MariaDB CLI ealier in this chapter).
    We set the following defaults: username `icinga`, and password `icinga`:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示添加可以用于查询icinga数据库的连接详细信息（我们在本章前面使用MariaDB CLI设置了）。我们设置了以下默认值：用户名`icinga`，密码`icinga`：
- en: '![](img/89952058-3cfb-4e43-9896-63d30c8459fc.png)'
  id: totrans-501
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89952058-3cfb-4e43-9896-63d30c8459fc.png)'
- en: Use the Validate Configuration button to validate your configuration.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“验证配置”按钮验证您的配置。
- en: 'On the Command Transport screen, you''ll be prompted to enter the details of
    the API user we created. We only added root, so let''s use that for now (from
    the api-users.conf file earlier):'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令传输屏幕上，您将被提示输入我们创建的API用户的详细信息。我们只添加了root，所以现在让我们使用它（从之前的api-users.conf文件）：
- en: '![](img/519a6afc-0555-457b-bb4a-d6e3c6a6ad72.png)'
  id: totrans-504
  prefs: []
  type: TYPE_IMG
  zh: '![](img/519a6afc-0555-457b-bb4a-d6e3c6a6ad72.png)'
- en: 'Click Next until you get to the end, where you should end up with a happy green
    banner:'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下一步，直到最后，您应该看到一个快乐的绿色横幅：
- en: '![](img/74efcfd9-db3e-42a3-8718-e5260453aefc.png)'
  id: totrans-506
  prefs: []
  type: TYPE_IMG
  zh: '![](img/74efcfd9-db3e-42a3-8718-e5260453aefc.png)'
- en: 'Continue to the prompted login page, and log in with the web user we created:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 继续到提示的登录页面，并使用我们创建的web用户登录：
- en: '![](img/794eaac0-b52c-4c84-8368-878e5ea5e0f5.png)'
  id: totrans-508
  prefs: []
  type: TYPE_IMG
  zh: '![](img/794eaac0-b52c-4c84-8368-878e5ea5e0f5.png)'
- en: Icinga2 Login Page
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: Icinga2登录页面
- en: 'The design might have changed a bit by the time you get around to reading this
    book, but hopefully you have something that''s close to the following Icinga2
    Dashboard:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 设计可能在您阅读本书时已经有所改变，但希望您有一个接近以下Icinga2仪表板的东西：
- en: '![](img/453460db-87ee-45ac-96ee-d234bab7e2ad.png)'
  id: totrans-511
  prefs: []
  type: TYPE_IMG
  zh: '![](img/453460db-87ee-45ac-96ee-d234bab7e2ad.png)'
- en: Have a poke around, before moving onto the next section, where we'll add another
    host.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入下一部分之前，先四处看看，我们将添加另一个主机。
- en: Firstly, we have to establish our first server as the `master` before we install
    `icinga2` on our client.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须在安装客户端之前将我们的第一个服务器建立为`master`。
- en: 'You do this with a setup script; I''ve put the only change needed in bold:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用设置脚本来完成此操作；我已经将唯一需要的更改用粗体标出：
- en: '[PRE89]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Do as it suggests and restart `icinga2`:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 按照建议做，并重新启动`icinga2`：
- en: '[PRE90]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Generate a token for our client to use when connecting:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 为我们的客户端生成一个连接时使用的令牌：
- en: '[PRE91]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Now SSH to your `debian2` box and install `icinga2`:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 现在SSH到您的`debian2`盒子并安装`icinga2`：
- en: '[PRE92]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Run through the node installation, this time specifying that we''re an agent,
    and passing in the token from earlier when prompted:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 通过节点安装，这次指定我们是代理，并在提示时传入之前的令牌：
- en: '[PRE93]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Restart `icinga2` on `debian2`:'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 在`debian2`上重新启动`icinga2`：
- en: '[PRE94]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Now, we need to configure the master to actually check the client; we''ve got
    an established connection, viewable with `ss`:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要配置主服务器来实际检查客户端；我们已经建立了一个连接，可以用`ss`查看：
- en: '[PRE95]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Now, back on `centos2`, add the following configuration:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到`centos2`，添加以下配置：
- en: '[PRE96]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Create a `hosts` directory for the zone in question:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 为相关区域创建一个`hosts`目录：
- en: '[PRE97]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'And add an appropriate `hosts` configuration:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 并添加适当的`hosts`配置：
- en: '[PRE98]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Restart `icinga2`:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动`icinga2`：
- en: '[PRE99]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'At this point, you should see your client in the Icinga2 web GUI:'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您应该在Icinga2 web GUI中看到您的客户端：
- en: '![](img/bcfba0b9-6f14-4d09-8c93-4f6085eb250d.png)'
  id: totrans-537
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bcfba0b9-6f14-4d09-8c93-4f6085eb250d.png)'
- en: Icinga2 Hosts page with pending checks
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: Icinga2主机页面上有待检查的检查
- en: 'It''s a bit useless to just have ping check a host (well, mostly; ping alerts
    have saved me before), so let''s add some of the recommended service checks too:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅让ping检查主机有点无用（嗯，大多数情况下；ping警报在以前曾经救过我），所以让我们也添加一些推荐的服务检查：
- en: '[PRE100]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Restart the service again.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 再次重启服务。
- en: '[PRE101]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Looking back at our GUI, this will now show our `debian2` box with some services
    checks (where one of the five failed):'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾我们的GUI，现在将显示我们的`debian2`盒子以及一些服务检查（其中有一个失败）：
- en: '![](img/3ac8e7f5-d3a1-4f26-958d-562a904cbfb2.png)'
  id: totrans-544
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ac8e7f5-d3a1-4f26-958d-562a904cbfb2.png)'
- en: Icinga2 Hosts page with ‘debian2’
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: Icinga2主机页面上的“debian2”
- en: How it works...
  id: totrans-546
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: By having a master server that is capable of seeing other servers in an estate,
    you give yourself the visibility needed to know when problems have occurred that
    need your immediate attention.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 通过拥有一个能够看到其他服务器的主服务器，您可以获得所需的可见性，以便在出现需要立即解决的问题时了解情况。
- en: Monitoring tools such as Nagios and Icinga2 usually work by interacting with
    a remote machine, querying its status by using either scripts on the box, or custom
    commands remotely, and reporting on the output of those commands. This can be
    done in a variety of ways, including, but not limited to, the NRPE agent, remote
    SSH commands, or SNMP results queried from an SNMP daemon.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如Nagios和Icinga2之类的监控工具通常通过与远程计算机交互，使用盒子上的脚本或远程自定义命令查询其状态，并报告这些命令的输出。这可以通过多种方式完成，包括但不限于NRPE代理，远程SSH命令，或从SNMP守护程序查询的SNMP结果。
- en: By creating a single-source-of-truth on the state of your infrastructure, you
    can learn immediately when there's a problem with your estate, and even correlate
    data based on multiple symptoms seen.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在基础设施的状态上创建一个单一的真相来源，您可以立即了解到您的基础设施出现问题，甚至可以根据多个症状的数据进行相关性分析。
- en: Icinga2, Nagios, Zabbix, and Sensu all behave in a relatively similar fashion,
    and all ultimately are good tools for the job, but usually it's down to the personal
    preference of the implementing team (or individual) as to which is adopted.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: Icinga2、Nagios、Zabbix和Sensu的行为方式都相对类似，最终都是很好的工具，但通常取决于实施团队（或个人）的个人偏好来决定采用哪种工具。
- en: You won't go wrong by installing Nagios and having a play around with it, as
    it's easily the one I've come across the most in the wild, and its children/cousins
    rule the scene at the moment.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Nagios并进行尝试不会有错，因为它是我在野外遇到最多的，而且它的子代/表亲目前统治着这个领域。
- en: There's more...
  id: totrans-552
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Here, we spun up a Nagios and Icinga2 installation quickly, to show what both
    are capable of with a few simple commands. These configurations aren't production-ready,
    and consideration should be given to things such as reusable patterns for monitoring
    checks, as well as security (for things such as TLS on the GUI, and utilizing
    secure communication methods between the master and the clients).
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们迅速搭建了一个Nagios和Icinga2的安装，以展示它们在几个简单命令下的功能。这些配置并不是生产就绪的，需要考虑诸如可重用的监控检查模式，以及安全性（例如GUI上的TLS，以及主服务器和客户端之间使用安全通信方法）。
- en: As with a lot of the software in this book, you should now have a good understanding
    of how to get started, but should consider all your options when implementing
    a solution for your own systems. If you have a relatively small pool to monitor,
    and it's unlikely to grow, you might considers the Nagios file-based monitoring
    setup suitable; if you have a larger, multi-region spanning estate, you may find
    Icinga2 and its zones more to your liking.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 就像本书中的许多软件一样，您现在应该对如何入门有了很好的理解，但在为自己的系统实施解决方案时应考虑所有选项。如果您要监视的池相对较小，并且不太可能增长，您可能会认为Nagios基于文件的监控设置是合适的；如果您有一个更大的、跨越多个地区的基础设施，您可能会发现Icinga2及其区域更符合您的口味。
- en: We also didn't touch on emails and alerting, only mentioning the visual alerts
    that Nagios and Icinga2 produce. There are multiple ways of plugging alerts into
    both solutions (such as SMS alerts, or flashing bulbs in the corner of the room)
    but, out of the box, they both handle email relatively well (assuming you've got
    a functional email server to pass alerts through).
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有涉及电子邮件和警报，只是提到了Nagios和Icinga2产生的视觉警报。可以通过多种方式将警报插入这两种解决方案（例如短信警报，或在房间角落闪烁的灯泡），但是，从出厂时开始，它们都相对良好地处理电子邮件（假设您有一个功能齐全的电子邮件服务器来传递警报）。
- en: Lastly, this is just a getting started guide, and there are many more ways to
    set up both Icinga2 and Nagios. They can be thought of more as frameworks than
    software in a lot of ways, being a fairly blank canvas out of the box and still
    enabling you to build a production system in as complex or simple a fashion as
    you wish.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这只是一个入门指南，设置Icinga2和Nagios还有许多其他方法。在很多方面，它们可以被视为框架而不是软件，因为它们在出厂时是一个相当空白的画布，仍然可以让您按照您希望的复杂或简单的方式构建生产系统。
- en: I've come across Icinga2 installations where I've been immensely cocky and sure
    of myself (more so than usual), only to start scratching my head 5 minutes in
    as I tried to unpick the mess of hand-cranked configuration that had been left
    for me.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾遇到过Icinga2的安装，我对自己的能力非常自信（比平时更多），只是在5分钟后开始摸不着头脑，因为我试图解开留给我的手工配置的混乱。
- en: See also
  id: totrans-558
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The monitoring plugins we used here are interesting, because there was a bitter
    argument some years ago when the old `nagios-plugins.org` domain was repointed
    from an independently maintained server to one controlled by Nagios Enterprises.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用的监控插件很有趣，因为几年前发生了一场激烈的争论，旧的`nagios-plugins.org`域名从一个独立维护的服务器重定向到了一个由Nagios
    Enterprises控制的服务器。
- en: What followed this repointing was an argument and split, which resulted in `monitoring-plugins`
    and `nagios-plugins` becoming seperate entities. For what it's worth, `nagios-plugins`
    is an alias to `monitoring-plugins` on Debian systems at the time of writing.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次重定向之后发生了一场争论和分裂，导致`monitoring-plugins`和`nagios-plugins`成为独立的实体。值得一提的是，在撰写本文时，`nagios-plugins`在Debian系统上是`monitoring-plugins`的别名。
- en: More information can be found in this blog post: [https://www.monitoring-plugins.org/news/new-project-name.html](https://www.monitoring-plugins.org/news/new-project-name.html).
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息可以在这篇博客文章中找到：[https://www.monitoring-plugins.org/news/new-project-name.html](https://www.monitoring-plugins.org/news/new-project-name.html)。
- en: 'The Debian bug report can be found here: [https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736331](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736331).'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: Debian的错误报告可以在这里找到：[https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736331](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736331)。
- en: 'And here''s the Red Hat bug report, with added drama (don''t get involved):
    [https://bugzilla.redhat.com/show_bug.cgi?id=1054340](https://bugzilla.redhat.com/show_bug.cgi?id=1054340).'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Red Hat的错误报告，增加了戏剧性（不要参与其中）：[https://bugzilla.redhat.com/show_bug.cgi?id=1054340](https://bugzilla.redhat.com/show_bug.cgi?id=1054340)。
- en: Centralizing logging with the Elastic Stack
  id: totrans-564
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Elastic Stack集中日志记录
- en: Earlier, we mentioned solutions to remote logging that involved forwarding our
    logging solutions (`syslog` and `journald`) to other hosts, running the same or
    similar software, so that the logs could be aggregated in one spot.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们提到了远程日志记录的解决方案，涉及将我们的日志记录解决方案（`syslog`和`journald`）转发到运行相同或类似软件的其他主机，以便将日志聚合在一个地方。
- en: This is a nice solution, and works well in a small environment, but it's not
    got a lot of bells and whistles, and if there's one thing we like in IT, it's
    shiny things we can show to management and then never use.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个不错的解决方案，在小型环境中运行良好，但它没有太多花里胡哨的功能，如果有什么东西我们在IT中喜欢的，那就是我们可以向管理层展示然后永远不会使用的闪亮东西。
- en: 'Elastic Stack is one such product; in their own words:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Stack就是这样一个产品；用他们自己的话说：
- en: Built on an open source foundation, the Elastic Stack lets you reliably and
    securely take data from any source, in any format, and search, analyze, and visualize
    it in real time.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 基于开源基础，Elastic Stack可以可靠且安全地从任何来源以任何格式获取数据，并实时搜索、分析和可视化数据。
- en: Bold claims, but certainly with backing. Elastic Stack is now the *de facto*
    aggregate logging solution for most businesses above a medium size, perhaps with
    a few contenders at the enterprise level.
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 大胆的说法，但肯定有支持。Elastic Stack现在是大多数中型以上企业的*事实*集中日志记录解决方案，也许在企业级别有一些竞争对手。
- en: We're going to set up a small solution on `centos1`, and forward our logs from
    `centos2`, `debian1`, and `debian2` to it.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`centos1`上设置一个小型解决方案，并将我们的日志从`centos2`，`debian1`和`debian2`转发到它。
- en: I've spent the day wrestling with X-Pack and Elastic Stack, so if anything I
    write sounds sarcastic or mean spirited, it's probably intentional.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 我花了一天的时间与X-Pack和Elastic Stack搏斗，所以如果我写的任何东西听起来讽刺或心怀恶意，那可能是有意的。
- en: Getting ready
  id: totrans-572
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to use all our VMs, and it might be an idea to
    `vagrant destroy` and `vagrant up` them all first.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用所有的VMs，最好先运行`vagrant destroy`和`vagrant up`。
- en: Please note that, for this section, we're going to be installing the version
    6 release of certain Elastic Stack components. The configuration has changed historically,
    and may do again by the time you read this book; if anything doesn't work as you
    expect, refer to the Elastic documentation for your version to fill in the gaps.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，对于本节，我们将安装某些Elastic Stack组件的版本6发布。配置在历史上已经发生了变化，可能在您阅读本书时再次发生变化；如果有任何不符合您期望的地方，请参考您版本的Elastic文档来填补空白。
- en: For this section, we're going to run through the initial setup on `centos1`,
    then pop onto the other VMs and configure their logging destination.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在`centos1`上运行初始设置，然后转到其他VM并配置它们的日志目的地。
- en: 'Mostly, I don''t suggest this, but it might be a good idea to reset your VMs
    to a fresh starting point for this bit:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，我不建议这样做，但对于这一部分，将VMs重置为一个新的起点可能是个好主意：
- en: '[PRE102]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: For convenience, and because this isn't a book on installing and configuring
    the Elastic Stack, we're going to run through an installation of Elasticsearch,
    Kibana, and Logstash in quite rapid fashion.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，也因为这不是一本关于安装和配置Elastic Stack的书，我们将以相当快的速度运行Elasticsearch、Kibana和Logstash的安装。
- en: 'First, we need Java:'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要Java：
- en: '[PRE103]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: How to do it...
  id: totrans-581
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'On `centos1`, let''s grab the Elastic repository:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos1`上，让我们获取Elastic存储库：
- en: '[PRE104]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Now we need to install the various components:'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要安装各种组件：
- en: '[PRE105]'
  id: totrans-585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'And we need to start them, with a number of configuration tweaks:'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 并且我们需要启动它们，并进行一些配置调整：
- en: '[PRE106]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'We''re going to use the Elastic `syslog` example (from [https://www.elastic.co/guide/en/logstash/6.4/config-examples.html#_processing_syslog_messages](https://www.elastic.co/guide/en/logstash/6.4/config-examples.html#_processing_syslog_messages))
    to configure our `Logstash` setup:'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Elastic `syslog`示例（来自[https://www.elastic.co/guide/en/logstash/6.4/config-examples.html#_processing_syslog_messages](https://www.elastic.co/guide/en/logstash/6.4/config-examples.html#_processing_syslog_messages)）来配置我们的`Logstash`设置：
- en: '[PRE107]'
  id: totrans-589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: This configuration sets an input method for data, in this case `tcp` and `udp`
    ports `5000`. It then sets a filter up for `syslog` content, and finally sets
    up an output to Elasticsearch (the backend, if you will).
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置设置了数据的输入方法，本例中为`tcp`和`udp`端口`5000`。然后为`syslog`内容设置了一个过滤器，最后设置了一个输出到Elasticsearch（后端）。
- en: 'Now we can start `Logstash`:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以启动`Logstash`：
- en: '[PRE108]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'What you should see are various ports listening on your box (this may take
    some time, as the various components start up):'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到您的计算机上有各种端口在监听（这可能需要一些时间，因为各种组件正在启动）：
- en: '[PRE109]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Now, we can configure our other machines to point to `Logstash` on `centos1`.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以配置我们的其他机器指向`centos1`上的`Logstash`。
- en: centos2
  id: totrans-596
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: centos2
- en: 'Use the following `rsyslog` change to start forwarding `centos2` logs to `Logstash`
    of the `centos1` instance:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下`rsyslog`更改开始将`centos2`日志转发到`centos1`实例的`Logstash`：
- en: '[PRE110]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: I recommended rebuilding the VMs earlier, but if you haven't, the preceding
    command may need tweaking if you followed the earlier sections about remote `syslog`
    configuration. Open the file and confirm the line looks as you expect.
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前建议重建VMs，但如果你还没有，如果你遵循了关于远程`syslog`配置的早期部分，前面的命令可能需要调整。打开文件并确认行看起来是否符合你的期望。
- en: 'You can test your configuration by using the following on `centos2`:'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在`centos2`上使用以下内容来测试您的配置：
- en: '[PRE111]'
  id: totrans-601
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: debian1 and debian2
  id: totrans-602
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: debian1和debian2
- en: 'For the Debian configuration, use the following lines:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Debian配置，请使用以下行：
- en: '[PRE112]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Kibana
  id: totrans-605
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kibana
- en: We have data in `Logstash`, but unless you've jumped the gun a bit, you won't
    be able to see it yet.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`Logstash`中有数据，但除非您有点急躁，否则您还看不到它。
- en: 'If you''ve forwarded your connection to `centos1`, as indicated at the start
    of this section, you should be able to navigate to `http://localhost:5601` in
    the browser of your choosing, and be greeted by the Kibana start page (assuming
    your installations have gone okay):'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已将连接转发到`centos1`，如本节开头所示，您应该能够在您选择的浏览器中导航到`http://localhost:5601`，并受到Kibana启动页面的欢迎（假设您的安装已经顺利进行）：
- en: '![](img/678d1175-46d4-4ed6-8e6b-4e1ec995cb75.png)'
  id: totrans-608
  prefs: []
  type: TYPE_IMG
  zh: '![](img/678d1175-46d4-4ed6-8e6b-4e1ec995cb75.png)'
- en: 'If you''ve used Kibana before, you might expect to click Discover and see your
    logs, but instead you get kicked over to Management:'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您以前使用过Kibana，您可能期望点击Discover并查看您的日志，但实际上您会被踢到Management：
- en: '![](img/4e3e7767-5499-4753-a139-9c29b664d3e9.png)'
  id: totrans-610
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e3e7767-5499-4753-a139-9c29b664d3e9.png)'
- en: 'Enter `*` as the wildcard entry for the index pattern, and then click Next
    step on the right:'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 在索引模式的通配符条目中输入`*`，然后点击右侧的下一步：
- en: '![](img/efc2e6ad-9dbf-44e6-b2aa-2903645d7a83.png)'
  id: totrans-612
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efc2e6ad-9dbf-44e6-b2aa-2903645d7a83.png)'
- en: 'In the next section, choose @timestamp from the drop-down list provided and
    then click Create index pattern on the right:'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，从提供的下拉列表中选择@timestamp，然后点击右侧的Create index pattern：
- en: '![](img/9245b99d-c040-4309-91b7-ad23d2510abe.png)'
  id: totrans-614
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9245b99d-c040-4309-91b7-ad23d2510abe.png)'
- en: 'Once the index has been created, click Discover on the left-hand side again;
    this time, you should be given a proper view:'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 创建索引后，再次点击左侧的Discover；这次，您应该会看到一个正确的视图：
- en: '![](img/8ac19d25-18ed-40f8-a86d-914f25a3e7ba.png)'
  id: totrans-616
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ac19d25-18ed-40f8-a86d-914f25a3e7ba.png)'
- en: Obviously, we want to filter down, just to make sure we've got everything.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们想要筛选一下，只是为了确保我们已经得到了一切。
- en: 'Put the following filter query in the search box at the top:'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部的搜索框中输入以下过滤查询：
- en: '[PRE113]'
  id: totrans-619
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'You should see something like this:'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似这样的东西：
- en: '![](img/d7a019b9-e10a-473d-8869-d80ec1afdaf2.png)'
  id: totrans-621
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7a019b9-e10a-473d-8869-d80ec1afdaf2.png)'
- en: Kibana Discover Page
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: Kibana Discover页面
- en: If there's no data visible in Kibana, it's possible that Logstash wasn't fully
    started before you sent logs from the other hosts. Try sending your logs again
    using the  `logger` commands above.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在Kibana中看不到数据，可能是因为Logstash在您从其他主机发送日志之前没有完全启动。尝试使用上面的`logger`命令再次发送您的日志。
- en: How it works...
  id: totrans-624
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'What we''re effectively doing is setting up three things:'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上正在设置三件事：
- en: '**Elasticsearch**: To act as the storage point for all the data we want to
    pipe into our box'
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Elasticsearch**：作为我们要传输到我们的盒子中的所有数据的存储点'
- en: '**Kibana**: To act as the frontend and dashboard to our data, meaning we can
    query and peruse it at our leisure'
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kibana**：作为我们数据的前端和仪表板，这意味着我们可以在闲暇时查询和查看它'
- en: '**Logstash**: To create a listener that acts just like the `syslog` receiver
    we set up earlier on in this chapter'
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Logstash**：创建一个监听器，就像我们在本章前面设置的`syslog`接收器一样'
- en: When all three of these components are enabled, they create a way to centralize
    any logs (or other data) that we might wish to throw at our solution.
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 当这三个组件都启用时，它们可以创建一种集中任何日志（或其他数据）的方式，我们可能希望将其投入我们的解决方案。
- en: It's basically a pretty way of making a `syslog` receiver, which also happens
    to be capable of a lot more besides.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上它是一个漂亮的`syslog`接收器，而且还能做更多的事情。
- en: One thing we didn't do here was forward our logs from `centos1` to its own `Logstash`
    listener; this can be done, but does require a bit of tweaking to ensure you don't
    accidentally create a storm of logs that grow exponentially as its own log messages
    are fed back into itself. I may or may not have done this once.
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里没有做的一件事是将我们的日志从`centos1`转发到自己的`Logstash`监听器；这是可以做到的，但需要进行一些调整，以确保您不会意外地创建一个日志风暴，随着其自身的日志消息被反馈到自身而呈指数级增长。我可能做过，也可能没有做过。
- en: There's more...
  id: totrans-632
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The Elastic Stack isn't just Elasticsearch, Kibana, and Logstash there are also
    more tools and features that are completely modular and can be integrated into
    your installation as you wish.
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Stack不仅仅是Elasticsearch、Kibana和Logstash，还有更多的工具和功能，它们完全是模块化的，可以根据您的需要集成到您的安装中。
- en: 'They include, but aren''t limited to, the following:'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 它们包括但不限于以下内容：
- en: Heartbeat – for uptime monitoring
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Heartbeat - 用于运行时间监控
- en: Filebeat – for sending logs from remote machines
  id: totrans-636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Filebeat - 用于从远程机器发送日志
- en: Machine learning capabilities
  id: totrans-637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习能力
- en: We also set up a very noddy solution here, and one I certainly wouldn't use
    in production. It lacks security on the transported data, streaming plain logs
    to our receiver, and there's also no login prompt to secure the Kibana dashboard,
    or TLS for security in the browser.
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里也设置了一个非常简单的解决方案，我肯定不会在生产中使用。它在传输数据上缺乏安全性，将普通日志流式传输到我们的接收器，并且在Kibana仪表板上也没有登录提示或用于浏览器安全性的TLS。
- en: X-Pack is one way to solve these problems, available as a trial in the default
    installation, or through a license, which is going to cost you. It allows you
    to set up security in your installation, both node communication and login security
    (with things such as the Kibana user login).
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: X-Pack是解决这些问题的一种方式，在默认安装中作为试用版可用，或者通过许可证，这将花费您一些费用。它允许您在您的安装中设置安全性，包括节点通信和登录安全性（例如Kibana用户登录）。
- en: The Elastic Stack is also quite a resource hungry suite of software, and you
    might want to architect your solution properly before diving right in and installing
    it on the medium-sized box in the cupboard.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Stack也是一套资源消耗大的软件套件，您可能希望在直接安装在壁橱中的中等大小的盒子上之前，先正确地设计您的解决方案。
- en: Roundup - Monitoring and Logging
  id: totrans-641
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结-监控和日志记录
- en: While it's no one's favorite subject (outside some very strange individuals
    I know, one of whom is a technical editor for this book), logging and monitoring
    is a crucial part of any installation, big or small.
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不是任何人的最爱话题（除了我认识的一些非常奇怪的人之外，其中一位是本书的技术编辑之一），但日志记录和监控是任何安装的重要组成部分，无论大小。
- en: You want to know when your boxes have died or, better yet, when they're about
    to die, and you also want to be able to retroactively work out why they conked
    out in the first place.
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 您想知道您的盒子何时死掉，或者更好的是，当它们即将死掉时，您还想能够事后找出它们为什么会挂掉。
- en: Monitoring and logging can be as complex or simple as you want it to be. Some
    companies hire specific individuals to deal with these components in a silo, but,
    in smaller organizations, it could very well be you who ends up managing and configuring
    everything. If this is the case, then I currently recommend setting up Icinga2
    and some sort of Elastic Stack implementation, but your needs and budget may vary.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 监控和日志记录可以像你想要的那样复杂或简单。一些公司会雇佣特定的人来处理这些组件，但在较小的组织中，很可能是你最终会负责管理和配置所有这些。如果是这种情况，我目前建议设置Icinga2和某种Elastic
    Stack实现，但你的需求和预算可能会有所不同。
- en: One elephant in the room that we need to talk about is on-call, and the fact
    that you're probably going to do it at some point in your career (unless you've
    got to the blessed point where you can say "I've done my time" and leave it for
    lesser mortals to undertake).
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要谈谈一个悬而未决的问题，那就是值班，以及你很可能在职业生涯中的某个时刻要做这件事（除非你已经到了可以说“我已经尽过我的职责”并把它留给次要的凡人去承担的幸运时刻）。
- en: In general, monitoring is your friend when doing on-call, and while, in an ideal
    world, you'd never get called out because of a problem, you can at least set up
    things such as automated phone calls to wake you up, before something becomes
    a wider issue that someone else notices outside of your company. You don't want
    to be in the situation where your company website is down all weekend, and you
    lose thousands of pounds of sales.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，当进行值班时，监控是你的朋友。在理想的情况下，你不会因为问题而被叫出去，但至少你可以设置自动电话呼叫来唤醒你，以防某些问题在公司之外被其他人注意到之前就变成更大的问题。你不希望出现这样的情况，即公司网站整个周末都挂掉，导致你损失成千上万的销售额。
- en: Over time, logs and long-term monitoring data can also help to highlight issues
    that you didn't realize were recurring, because the time between events is weeks
    or even months; this is a good reason for setting up historic alerts and pattern
    matching on dashboards in Kibana.
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，日志和长期监控数据也可以帮助发现你没有意识到的反复出现的问题，因为事件之间的时间间隔是几周甚至几个月；这是在Kibana的仪表板上设置历史警报和模式匹配的一个很好的理由。
- en: If someone is having to clear logs on a box every 5 weeks, and it's a different
    person in the team each time, you might not realize that there's a bigger underlying
    issue that needs addressing, or you might just find you've lost hundreds of hours
    over an issue that could be fixed with a simple `systemd` timer.
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有人每5周就不得不清理一次盒子上的日志，而且每次都是团队中的不同人，你可能没有意识到有一个更大的潜在问题需要解决，或者你可能会发现你因为一个可以用简单的`systemd`定时器解决的问题而浪费了数百个小时。
- en: On the whole, I hate monitoring, and I'm loath to trawl through logs, but they're
    necessary in our line of work, and there's a lot of clever people making very
    swish tools that you can use to make your life easier.
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，我讨厌监控，我不愿意翻阅日志，但在我们的工作中是必要的，而且有很多聪明人在制作非常好用的工具，可以让你的生活变得更轻松。
- en: It also doesn't hurt when you have to show off a dashboard to the CEO, and they're
    distracted by the pretty widgets and whistles.
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: 当你不得不向CEO展示仪表板时，拥有漂亮的小部件和功能也是有好处的。
