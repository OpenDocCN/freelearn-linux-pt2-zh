["```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n$provisionScript = <<-SCRIPT\nsed -i 's#PasswordAuthentication no#PasswordAuthentication yes#g' /etc/ssh/sshd_config\nsystemctl restart sshd\nSCRIPT\n\nVagrant.configure(\"2\") do |config|\n\n  config.vm.provision \"shell\",\n    inline: $provisionScript\n\n  config.vm.define \"centos1\" do |centos1|\n    centos1.vm.box = \"centos/7\"\n    centos1.vm.network \"private_network\", ip: \"192.168.33.10\"\n    centos1.vm.hostname = \"centos1\"\n    centos1.vm.box_version = \"1804.02\"\n  end\n\n  config.vm.define \"centos2\" do |centos2|\n    centos2.vm.box = \"centos/7\"\n    centos2.vm.network \"private_network\", ip: \"192.168.33.11\"\n    centos2.vm.hostname = \"centos2\"\n    centos2.vm.box_version = \"1804.02\"\n  end\n\nend\n```", "```\n$ vagrant up\n$ vagrant ssh centos1\n```", "```\n$ sudo yum install git -y\n```", "```\n$ git clone https://github.com/ansible/ansible.git\nCloning into 'ansible'...\n```", "```\n$ ls -l\ntotal 4\ndrwxrwxr-x. 14 vagrant vagrant 4096 Nov 19 18:10 ansible\n```", "```\n$ cd ansible/\n$ ls -l\ntotal 100\ndrwxrwxr-x. 2 vagrant vagrant 243 Nov 19 18:10 bin\ndrwxrwxr-x. 3 vagrant vagrant 141 Nov 19 18:10 changelogs\n-rw-rw-r--. 1 vagrant vagrant 645 Nov 19 18:10 CODING_GUIDELINES.md\ndrwxrwxr-x. 4 vagrant vagrant 53 Nov 19 18:10 contrib\n-rw-rw-r--. 1 vagrant vagrant 35148 Nov 19 18:10 COPYING\ndrwxrwxr-x. 6 vagrant vagrant 60 Nov 19 18:10 docs\ndrwxrwxr-x. 4 vagrant vagrant 192 Nov 19 18:10 examples\ndrwxrwxr-x. 5 vagrant vagrant 4096 Nov 19 18:10 hacking\ndrwxrwxr-x. 3 vagrant vagrant 21 Nov 19 18:10 lib\ndrwxrwxr-x. 2 vagrant vagrant 78 Nov 19 18:10 licenses\n-rw-rw-r--. 1 vagrant vagrant 13512 Nov 19 18:10 Makefile\n-rw-rw-r--. 1 vagrant vagrant 852 Nov 19 18:10 MANIFEST.in\n-rw-rw-r--. 1 vagrant vagrant 286 Nov 19 18:10 MODULE_GUIDELINES.md\ndrwxrwxr-x. 11 vagrant vagrant 133 Nov 19 18:10 packaging\n-rw-rw-r--. 1 vagrant vagrant 5370 Nov 19 18:10 README.rst\n-rw-rw-r--. 1 vagrant vagrant 360 Nov 19 18:10 requirements.txt\n-rw-rw-r--. 1 vagrant vagrant 11028 Nov 19 18:10 setup.py\n-rw-rw-r--. 1 vagrant vagrant 3389 Nov 19 18:10 shippable.yml\ndrwxrwxr-x. 10 vagrant vagrant 121 Nov 19 18:10 test\n-rw-rw-r--. 1 vagrant vagrant 1129 Nov 19 18:10 tox.ini\n```", "```\n$ git status\n# On branch devel\nnothing to commit, working directory clean\n```", "```\n$ sed -i 's/^/The big brain am winning again. /g' README.rst \n```", "```\n$ git status\n# On branch devel\n# Changes not staged for commit:\n# (use \"git add <file>...\" to update what will be committed)\n# (use \"git checkout -- <file>...\" to discard changes in working directory)\n#\n# modified: README.rst\n#\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```", "```\n$ cat README.rst \nThe big brain am winning again. |PyPI version| |Docs badge| |Chat badge| |Build Status| |Code Of Conduct| |Mailing Lists| |License|\nThe big brain am winning again. \nThe big brain am winning again. *******\nThe big brain am winning again. Ansible\nThe big brain am winning again. *******\nThe big brain am winning again. \nThe big brain am winning again. Ansible is a radically simple IT automation system. It handles\n<SNIP>\n```", "```\n$ git checkout README.rst \n$ git status\n# On branch devel\nnothing to commit, working directory clean\n```", "```\n$ head -5 README.rst\n|PyPI version| |Docs badge| |Chat badge| |Build Status| |Code Of Conduct| |Mailing Lists| |License|\n\n*******\nAnsible\n*******\n```", "```\n$ pwd\n/home/vagrant/ansible\n$ ls -hla .git\ntotal 1.5M\ndrwxrwxr-x. 8 vagrant vagrant 163 Nov 19 18:17 .\ndrwxrwxr-x. 14 vagrant vagrant 4.0K Nov 19 18:17 ..\ndrwxrwxr-x. 2 vagrant vagrant 6 Nov 19 18:09 branches\n-rw-rw-r--. 1 vagrant vagrant 261 Nov 19 18:10 config\n-rw-rw-r--. 1 vagrant vagrant 73 Nov 19 18:09 description\n-rw-rw-r--. 1 vagrant vagrant 22 Nov 19 18:10 HEAD\ndrwxrwxr-x. 2 vagrant vagrant 242 Nov 19 18:09 hooks\n-rw-rw-r--. 1 vagrant vagrant 1.4M Nov 19 18:17 index\ndrwxrwxr-x. 2 vagrant vagrant 21 Nov 19 18:09 info\ndrwxrwxr-x. 3 vagrant vagrant 30 Nov 19 18:10 logs\ndrwxrwxr-x. 4 vagrant vagrant 30 Nov 19 18:09 objects\n-rw-rw-r--. 1 vagrant vagrant 28K Nov 19 18:10 packed-refs\ndrwxrwxr-x. 5 vagrant vagrant 46 Nov 19 18:10 refs\n```", "```\n$ cat .git/config \n[core]\n repositoryformatversion = 0\n filemode = true\n bare = false\n logallrefupdates = true\n[remote \"origin\"]\n url = https://github.com/ansible/ansible.git\n fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"devel\"]\n remote = origin\n merge = refs/heads/devel\n```", "```\n$ git log --pretty=short \n```", "```\n$ git tag | head -n5\n0.0.1\n0.0.2\n0.01\n0.3\n0.3.1\n```", "```\n$ git branch -a\n* devel\n remotes/origin/HEAD -> origin/devel\n remotes/origin/acozine-patch-1\n remotes/origin/devel\n remotes/origin/mazer_role_loader\n remotes/origin/release1.5.0\n remotes/origin/release1.5.1\n remotes/origin/release1.5.2\n<SNIP>\n```", "```\n$ sudo yum install git -y\n```", "```\n$ mkdir example.git\n$ cd example.git/\n$ git init --bare\nInitialized empty Git repository in /home/vagrant/example.git/\n```", "```\n$ git clone 192.168.33.11:example.git\nCloning into 'example'...\nThe authenticity of host '192.168.33.11 (192.168.33.11)' can't be established.\nECDSA key fingerprint is SHA256:s5NfsrM/XRuH5rXaZSaNmaUxXe3MlN2wRoJ3Q43oviU.\nECDSA key fingerprint is MD5:ea:24:ef:b3:cf:d9:03:3d:06:da:1f:2f:d2:6b:1d:67.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.33.11' (ECDSA) to the list of known hosts.\nvagrant@192.168.33.11's password: \nwarning: You appear to have cloned an empty repository.\n```", "```\n$ ls\nexample\n$ cd example/\n$ git status\n# On branch master\n#\n# Initial commit\n#\nnothing to commit (create/copy files and use \"git add\" to track)\n```", "```\n$ cat .git/config \n[core]\n repositoryformatversion = 0\n filemode = true\n bare = false\n logallrefupdates = true\n[remote \"origin\"]\n url = 192.168.33.11:example.git\n fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n remote = origin\n merge = refs/heads/master\n```", "```\n$ cat config \n[core]\n repositoryformatversion = 0\n filemode = true\n bare = true\n```", "```\n$ cd example/\n```", "```\n$ git status\n# On branch master\nnothing to commit, working directory clean\n```", "```\n$ echo \"Warcraft III was the best Warcraft game.\" > README\n$ git add README\n$ git commit -m \"Adding README to repository.\" \n\n*** Please tell me who you are.\n\nRun\n\n git config --global user.email \"you@example.com\"\n git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: unable to auto-detect email address (got 'vagrant@centos1.(none)')\n```", "```\n$ git config --global user.email \"you@example.com\"\n$ git config --global user.name \"Your Name... good film.\"\n```", "```\n$ git commit -m \"Adding README to repository.\" \n[master (root-commit) 65bf49a] Adding README to repository.\n 1 file changed, 1 insertion(+)\n create mode 100644 README\n```", "```\n$ git push\nwarning: push.default is unset; its implicit value is changing in\nGit 2.0 from 'matching' to 'simple'. To squelch this message\nand maintain the current behavior after the default changes, use:\n\n git config --global push.default matching\n\nTo squelch this message and adopt the new behavior now, use:\n\n git config --global push.default simple\n\nSee 'git help config' and search for 'push.default' for further information.\n(the 'simple' mode was introduced in Git 1.7.11\\. Use the similar mode\n'current' instead of 'simple' if you sometimes use older versions of Git)\n```", "```\n$ git config --global push.default simple\n```", "```\n$ git push\nvagrant@192.168.33.11's password: \nCounting objects: 3, done.\nWriting objects: 100% (3/3), 268 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo 192.168.33.11:example.git\n * [new branch] master -> master\n```", "```\n$ cd ~\n$ git clone 192.168.33.11:example.git example2\nCloning into 'example2'...\nvagrant@192.168.33.11's password: \nremote: Counting objects: 3, done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nReceiving objects: 100% (3/3), done.\n$ ls example2\nREADME\n```", "```\n$ git add README\n```", "```\n$ git commit -m \"Adding README to repository.\" \n```", "```\n$ git push\n```", "```\n$ cd ~/example\n```", "```\n$ git branch\n* master\n```", "```\n$ git branch develop\n```", "```\n$ git branch\n develop\n* master\n```", "```\n$ git checkout develop\nSwitched to branch 'develop'\n```", "```\n$ ls\nREADME\n```", "```\n$ echo \"Keep your keys happy.\" > RULESFORRULERS\n```", "```\n$ git status\n# On branch develop\n# Untracked files:\n# (use \"git add <file>...\" to include in what will be committed)\n#\n# RULESFORRULERS\nnothing added to commit but untracked files present (use \"git add\" to track)\n```", "```\n$ git add *\n$ git commit -m \"Adding an extremely important file\\!\"\n[develop 7f91f4d] Adding an extremely important file\\!\n 1 file changed, 1 insertion(+)\n create mode 100644 RULESFORRULERS\n```", "```\n$ git push\nfatal: The current branch develop has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n git push --set-upstream origin develop\n```", "```\n$ git push --set-upstream origin develop\nvagrant@192.168.33.11's password: \nCounting objects: 4, done.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 326 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo 192.168.33.11:example.git\n * [new branch] develop -> develop\nBranch develop set up to track remote branch develop from origin. \n```", "```\n$ git checkout master\nSwitched to branch 'master'\n$ ls\nREADME\n```", "```\n$ git diff develop\ndiff --git a/RULESFORRULERS b/RULESFORRULERS\ndeleted file mode 100644\nindex c895005..0000000\n--- a/RULESFORRULERS\n+++ /dev/null\n@@ -1 +0,0 @@\n-Keep your keys happy.\n```", "```\n$ git merge develop\nUpdating 65bf49a..7f91f4d\nFast-forward\n RULESFORRULERS | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 RULESFORRULERS\n$ ls\nREADME RULESFORRULERS\n```", "```\n$ git status\n# On branch master\n# Your branch is ahead of 'origin/master' by 1 commit.\n# (use \"git push\" to publish your local commits)\n#\nnothing to commit, working directory clean\n```", "```\n$ git diff origin/master\ndiff --git a/RULESFORRULERS b/RULESFORRULERS\nnew file mode 100644\nindex 0000000..c895005\n--- /dev/null\n+++ b/RULESFORRULERS\n@@ -0,0 +1 @@\n+Keep your keys happy.\n```", "```\n$ git push\nvagrant@192.168.33.11's password: \nTotal 0 (delta 0), reused 0 (delta 0)\nTo 192.168.33.11:example.git\n 65bf49a..7f91f4d master -> master\n```", "```\n$ cat .git/config \n[core]\n repositoryformatversion = 0\n filemode = true\n bare = false\n logallrefupdates = true\n[remote \"origin\"]\n url = 192.168.33.11:example.git\n fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n remote = origin\n merge = refs/heads/master\n[branch \"develop\"]\n remote = origin\n merge = refs/heads/develop\n```", "```\n$ git diff develop\ndiff --git a/RULESFORRULERS b/RULESFORRULERS\ndeleted file mode 100644\nindex c895005..0000000\n--- a/RULESFORRULERS\n+++ /dev/null\n@@ -1 +0,0 @@\n-Keep your keys happy.\n```", "```\n$ git diff master..develop\n```", "```\n$ git diff origin/master..origin/develop\n```", "```\n$ git diff origin/master\ndiff --git a/RULESFORRULERS b/RULESFORRULERS\nnew file mode 100644\nindex 0000000..c895005\n--- /dev/null\n+++ b/RULESFORRULERS\n@@ -0,0 +1 @@\n+Keep your keys happy.\n```", "```\n[remote \"origin\"]\n  url = 192.168.33.11:example.git\n  fetch = +refs/heads/*:refs/remotes/origin/*\n```", "```\n$ git checkout -b super-fixes\nSwitched to a new branch 'super-fixes'\n```", "```\n$ echo \"Never look tired.\" > RULESFORRULERS\n$ git commit -am \"Another git trick, adding and committing in one line.\" \n[super-fixes a9b53e8] Another git trick, adding and committing in one line.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n$ git push --set-upstream origin super-fixes\nvagrant@192.168.33.11's password: \nCounting objects: 5, done.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 329 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo 192.168.33.11:example.git\n * [new branch] super-fixes -> super-fixes\nBranch super-fixes set up to track remote branch super-fixes from origin.\n```", "```\n$ cd ~/example.git/\n```", "```\n$ ls\nbranches config description gitweb HEAD hooks info objects pid refs\n```", "```\n$ ls objects/\n1c 29 65 7f 84 a5 a9 b0 c8 info pack\n```", "```\n$ ls refs/heads/\ndevelop master super-fixes\n```", "```\n$ vagrant ssh centos1 $ sudo yum install ansible ansible-doc -y\n```", "```\n$ ansible --version\nansible 2.4.2.0\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/vagrant/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.5 (default, Apr 11 2018, 07:36:10) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)]\n```", "```\n$ ANSIBLE_HOST_KEY_CHECKING=false ansible -k -m ping -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\n```", "```\n$ ansible-doc -l\n```", "```\n$ ansible-doc -s package\n- name: Generic OS package manager\n package:\n name: # (required) Package name, or package specifier with version, like `name-1.0'. Be aware that packages are not always named the same and this module will not 'translate' them\n per distro.\n state: # (required) Whether to install (`present', or remove (`absent') a package. Other states depend on the underlying package module, i.e `latest'.\n use: # The required package manager module to use (yum, apt, etc). The default 'auto' will use existing facts or try to autodetect it. You should only use this field if the\n automatic selection is not working for some reason.\n```", "```\n$ ansible -b -k -m package -a 'name=zip state=present' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS => {\n    \"changed\": true, \n    \"msg\": \"warning: /var/cache/yum/x86_64/7/base/packages/zip-3.0-11.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY\\nImporting GPG key 0xF4A80EB5:\\n Userid : \\\"CentOS-7 Key (CentOS 7 Official Signing Key) <security@centos.org>\\\"\\n Fingerprint: 6341 ab27 53d7 8a78 a7c2 7bb1 24c6 a8a7 f4a8 0eb5\\n Package : centos-release-7-5.1804.el7.centos.x86_64 (@anaconda)\\n From : /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\\n\", \n    \"rc\": 0, \n    \"results\": [\n        \"Loaded plugins: fastestmirror\\nLoading mirror speeds from cached hostfile\\n * base: mirrors.vooservers.com\\n * extras: mirror.sov.uk.goscomb.net\\n * updates: mirror.sov.uk.goscomb.net\\nResolving Dependencies\\n--> Running transaction check\\n---> Package zip.x86_64 0:3.0-11.el7 will be installed\\n--> Finished Dependency Resolution\\n\\nDependencies Resolved\\n\\n================================================================================\\n Package Arch Version Repository Size\\n================================================================================\\nInstalling:\\n zip x86_64 3.0-11.el7 base 260 k\\n\\nTransaction Summary\\n================================================================================\\nInstall 1 Package\\n\\nTotal download size: 260 k\\nInstalled size: 796 k\\nDownloading packages:\\nPublic key for zip-3.0-11.el7.x86_64.rpm is not installed\\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\\nRunning transaction check\\nRunning transaction test\\nTransaction test succeeded\\nRunning transaction\\n Installing : zip-3.0-11.el7.x86_64 1/1 \\n Verifying : zip-3.0-11.el7.x86_64 1/1 \\n\\nInstalled:\\n zip.x86_64 0:3.0-11.el7 \\n\\nComplete!\\n\"\n    ]\n}\n```", "```\n$ ansible -b -k -m package -a 'name=zip state=present' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS => {\n    \"changed\": false, \n    \"msg\": \"\", \n    \"rc\": 0, \n    \"results\": [\n        \"zip-3.0-11.el7.x86_64 providing zip is already installed\"\n    ]\n} \n```", "```\n$ ansible -b -k -m yum -a 'name=zip state=present' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS => {\n    \"changed\": false, \n    \"msg\": \"\", \n    \"rc\": 0, \n    \"results\": [\n        \"zip-3.0-11.el7.x86_64 providing zip is already installed\"\n    ]\n} \n```", "```\n$ ANSIBLE_HOST_KEY_CHECKING=false ansible -k -m ping -i 192.168.33.11, 192.168.33.11\n```", "```\n-k\n```", "```\n-m ping\n```", "```\n-i 192.168.33.11,\n```", "```\n192.168.33.11\n```", "```\n$ ansible-doc -s package\n```", "```\n$ ansible -b -k -m yum -a 'name=zip state=present' -i 192.168.33.11, 192.168.33.11\n```", "```\n-b\n```", "```\n-m yum -a 'name=zip state=present'\n```", "```\n$ ansible -b -k -m raw -a 'whoami' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS | rc=0 >>\nroot\nShared connection to 192.168.33.11 closed.\n```", "```\n$ ansible -b -k -m raw -a 'yum install python -y' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS | rc=0 >>\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n<SNIP>\nUpdated:\n python.x86_64 0:2.7.5-69.el7_5 \n\nDependency Updated:\n python-libs.x86_64 0:2.7.5-69.el7_5 \n\nComplete!\nShared connection to 192.168.33.11 closed.\n```", "```\n$ ansible -b -k -m shell -a 'whoami > BUTTER; cat BUTTER | rev' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS | rc=0 >>\ntoor\n```", "```\n$ ansible -b -k -m command -a 'whoami > BUTTER; cat BUTTER | rev' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | FAILED | rc=1 >>\nwhoami: extra operand '>'\nTry 'whoami --help' for more information.non-zero return code\n```", "```\n$ ansible -b -k -m command -a 'whoami' -i 192.168.33.11, 192.168.33.11\nSSH password: \n192.168.33.11 | SUCCESS | rc=0 >>\nroot\n```", "```\n$ vagrant ssh centos1\n```", "```\n$ mkdir ansible-example\n$ cd ansible-example/\n```", "```\n$ ansible-galaxy search \"java for linux\" --author geerlingguy\n\nFound 7 roles matching your search:\n\n Name Description\n ---- -----------\n geerlingguy.ac-solr Apache Solr container for Docker.\n geerlingguy.elasticsearch Elasticsearch for Linux.\n geerlingguy.java Java for Linux\n geerlingguy.puppet Puppet for Linux.\n geerlingguy.solr Apache Solr for Linux.\n geerlingguy.sonar SonarQube for Linux\n geerlingguy.tomcat6 Tomcat 6 for RHEL/CentOS and Debian/Ubuntu.\n```", "```\n$ sudo ansible-galaxy install geerlingguy.java\n- downloading role 'java', owned by geerlingguy\n- downloading role from https://github.com/geerlingguy/ansible-role-java/archive/1.9.4.tar.gz\n- extracting geerlingguy.java to /etc/ansible/roles/geerlingguy.java\n- geerlingguy.java (1.9.4) was installed successfully\n```", "```\n$ cat <<HERE > playbook.yml\n---\n- hosts: all\n roles:\n - geerlingguy.java\nHERE\n```", "```\n$ ansible-playbook -k -b -i 192.168.33.11, playbook.yml\n```", "```\n$ ansible-galaxy search \"java for linux\" --author geerlingguy\n```", "```\n$ sudo ansible-galaxy install geerlingguy.java\n```", "```\n$ ls /etc/ansible/roles/geerlingguy.java/\ndefaults LICENSE meta molecule README.md tasks templates vars\n```", "```\n$ cat /etc/ansible/roles/geerlingguy.java/tasks/main.yml \n---\n- name: Include OS-specific variables for Fedora or FreeBSD.\n include_vars: \"{{ ansible_distribution }}.yml\"\n when: ansible_distribution == 'FreeBSD' or ansible_distribution == 'Fedora'\n\n- name: Include version-specific variables for CentOS/RHEL.\n include_vars: \"RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml\"\n<SNIP>\n```", "```\n$ cat <<HERE > playbook.yml\n---\n- hosts: all\n roles:\n - geerlingguy.java\nHERE\n```", "```\n$ ansible-playbook -k -b -i 192.168.33.11, playbook.yml\n```", "```\n$ cat <<HERE > playbook.yml\n---\n- hosts: all\n roles:\n - geerlingguy.java\n - geerlingguy.docker\n - geerlingguy.apache\nHERE\n```", "```\n$ cat <<HERE > playbook-requirements.yml\n---\n- name: geerlingguy.java\n- name: geerlingguy.docker\n- name: geerlingguy.apache\nHERE\n```", "```\n$ sudo ansible-galaxy install -r playbook-requirements.yml \n [WARNING]: - geerlingguy.java (1.9.4) is already installed - use --force to change version to unspecified\n\n- downloading role 'docker', owned by geerlingguy\n- downloading role from https://github.com/geerlingguy/ansible-role-docker/archive/2.5.2.tar.gz\n- extracting geerlingguy.docker to /etc/ansible/roles/geerlingguy.docker\n- geerlingguy.docker (2.5.2) was installed successfully\n- downloading role 'apache', owned by geerlingguy\n- downloading role from https://github.com/geerlingguy/ansible-role-apache/archive/3.0.3.tar.gz\n- extracting geerlingguy.apache to /etc/ansible/roles/geerlingguy.apache\n- geerlingguy.apache (3.0.3) was installed successfully\n```", "```\n$ ansible-playbook -k -b -i 192.168.33.11, playbook.yml\nSSH password: \n\nPLAY [all] *********************************************************************************************************************************************************************\n\nTASK [Gathering Facts] *********************************************************************************************************************************************************\nok: [192.168.33.11]\n\n<SNIP>\n\nRUNNING HANDLER [geerlingguy.apache : restart apache] **************************************************************************************************************************\nchanged: [192.168.33.11]\n\n```", "```\nPLAY RECAP *********************************************************************************************************************************************************************\n192.168.33.11 : ok=33 changed=14 unreachable=0 failed=0 \n```", "```\n$ vagrant ssh centos1\n$ vagrant ssh centos2\n```", "```\n$ git init --bare ansible-example.git\nInitialized empty Git repository in /home/vagrant/ansible-example.git/\n```", "```\n$ cd ansible-example/\n```", "```\n$ git init\n```", "```\n$ git add *\n$ git commit -m \"Adding my playbook files.\"\n```", "```\n$ git remote add origin vagrant@192.168.33.11:ansible-example.git\n```", "```\n$ git push --set-upstream origin master\nvagrant@192.168.33.11's password: \nCounting objects: 4, done.\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (4/4), 388 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nTo vagrant@192.168.33.11:ansible-example.git\n * [new branch] master -> master\nBranch master set up to track remote branch master from origin.\n```", "```\n$ vagrant ssh centos1 $ curl -O https://releases.hashicorp.com/terraform/0.11.10/terraform_0.11.10_linux_amd64.zip\n$ curl -O https://releases.hashicorp.com/packer/1.3.2/packer_1.3.2_linux_amd64.zip\n```", "```\n$ sudo yum install unzip -y\n$ unzip packer_1.3.2_linux_amd64.zip \n$ unzip terraform_0.11.10_linux_amd64.zip\n$ sudo mv terraform /usr/local/bin/\n$ sudo mv packer /usr/local/bin/\n```", "```\n$ sudo yum install yum-utils -y\n$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n$ sudo yum install docker-ce -y\n$ sudo systemctl enable --now docker\n```", "```\n$ mkdir example-terraform\n$ cd example-terraform\n```", "```\n$ cat <<HERE > main.tf\nprovider \"docker\" {\n host = \"unix:///var/run/docker.sock\"\n}\n\nresource \"docker_image\" \"example-image\" {\n name = \"nginx\"\n}\n\nresource \"docker_container\" \"example-container\" {\n name = \"nginx-example\"\n image = \"\\${docker_image.example-image.latest}\"\n}\nHERE\n```", "```\n$ sudo /usr/local/bin/terraform init\n\nInitializing provider plugins...\n\nThe following providers do not have any version constraints in configuration,\nso the latest version was installed.\n\nTo prevent automatic upgrades to new major versions that may contain breaking\nchanges, it is recommended to add version = \"...\" constraints to the\ncorresponding provider blocks in configuration, with the constraint strings\nsuggested below.\n\n* provider.docker: version = \"~> 1.1\"\n\nTerraform has been successfully initialized!\n\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\nany changes that are required for your infrastructure. All Terraform commands\nshould now work.\n\nIf you ever set or change modules or backend configuration for Terraform,\nrerun this command to reinitialize your working directory. If you forget, other\ncommands will detect it and remind you to do so if necessary.\n```", "```\n$ sudo docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n```", "```\n$ sudo /usr/local/bin/terraform apply\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n + create\n\nTerraform will perform the following actions:\n\n + docker_container.example-container\n id: <computed>\n attach: \"false\"\n bridge: <computed>\n container_logs: <computed>\n exit_code: <computed>\n gateway: <computed>\n image: \"${docker_image.example-image.latest}\"\n ip_address: <computed>\n ip_prefix_length: <computed>\n log_driver: \"json-file\"\n logs: \"false\"\n must_run: \"true\"\n name: \"nginx-example\"\n network_data.#: <computed>\n restart: \"no\"\n rm: \"false\"\n start: \"true\"\n\n + docker_image.example-image\n id: <computed>\n latest: <computed>\n name: \"nginx\"\n\nPlan: 2 to add, 0 to change, 0 to destroy.\n\nDo you want to perform these actions?\n Terraform will perform the actions described above.\n Only 'yes' will be accepted to approve.\n\n Enter a value: \n```", "```\n Enter a value: yes\n\ndocker_image.example-image: Creating...\n latest: \"\" => \"<computed>\"\n name: \"\" => \"nginx\"\ndocker_image.example-image: Still creating... (10s elapsed)\ndocker_image.example-image: Creation complete after 18s (ID: sha256:568c4670fa800978e08e4a51132b995a54f8d5ae83ca133ef5546d092b864acfnginx)\ndocker_container.example-container: Creating...\n attach: \"\" => \"false\"\n bridge: \"\" => \"<computed>\"\n container_logs: \"\" => \"<computed>\"\n exit_code: \"\" => \"<computed>\"\n gateway: \"\" => \"<computed>\"\n image: \"\" => \"sha256:568c4670fa800978e08e4a51132b995a54f8d5ae83ca133ef5546d092b864acf\"\n ip_address: \"\" => \"<computed>\"\n ip_prefix_length: \"\" => \"<computed>\"\n log_driver: \"\" => \"json-file\"\n logs: \"\" => \"false\"\n must_run: \"\" => \"true\"\n name: \"\" => \"nginx-example\"\n network_data.#: \"\" => \"<computed>\"\n restart: \"\" => \"no\"\n rm: \"\" => \"false\"\n start: \"\" => \"true\"\ndocker_container.example-container: Creation complete after 0s (ID: 4f462e164239c65605c9106378ffb260b8bb7f5d27dc1fe0e008589a1387650e)\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n```", "```\n$ sudo docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n4f462e164239 568c4670fa80 \"nginx -g 'daemon of...\" 28 seconds ago Up 26 seconds 80/tcp nginx-example\n```", "```\n$ sudo /usr/local/bin/terraform destroy\ndocker_image.example-image: Refreshing state... (ID: sha256:568c4670fa800978e08e4a51132b995a54f8d5ae83ca133ef5546d092b864acfnginx)\ndocker_container.example-container: Refreshing state... (ID: 4f462e164239c65605c9106378ffb260b8bb7f5d27dc1fe0e008589a1387650e)\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n - destroy\n\nTerraform will perform the following actions:\n\n - docker_container.example-container\n\n - docker_image.example-image\n\nPlan: 0 to add, 0 to change, 2 to destroy.\n\nDo you really want to destroy all resources?\n Terraform will destroy all your managed infrastructure, as shown above.\n There is no undo. Only 'yes' will be accepted to confirm.\n\n Enter a value: \n```", "```\n Enter a value: yes\n\ndocker_container.example-container: Destroying... (ID: 4f462e164239c65605c9106378ffb260b8bb7f5d27dc1fe0e008589a1387650e)\ndocker_container.example-container: Destruction complete after 0s\ndocker_image.example-image: Destroying... (ID: sha256:568c4670fa800978e08e4a51132b995a54f8d5ae83ca133ef5546d092b864acfnginx)\ndocker_image.example-image: Destruction complete after 0s\n\nDestroy complete! Resources: 2 destroyed.\n```", "```\n$ cd ~\n$ mkdir example-packer\n$ cd example-packer\n```", "```\n$ cat <<HERE > docker.json\n{ \n\n \"builders\":[\n {\n \"type\": \"docker\",\n \"image\": \"nginx\",\n \"commit\": true,\n \"pull\": true,\n \"changes\": [\n \"LABEL custom=true\",\n \"EXPOSE 443\"\n ]\n }],\n\n \"provisioners\":[\n {\n \"type\": \"shell\",\n \"inline\": [\"echo 'Bring back Black Books!'\",\"apt remove nginx -y\"]\n }]\n\n} \nHERE\n```", "```\n$ sudo /usr/local/bin/packer build docker.json\ndocker output will be in this color.\n\n==> docker: Creating a temporary directory for sharing data...\n==> docker: Pulling Docker image: nginx\n docker: Using default tag: latest\n docker: latest: Pulling from library/nginx\n docker: Digest: sha256:5d32f60db294b5deb55d078cd4feb410ad88e6fe77500c87d3970eca97f54dba\n docker: Status: Image is up to date for nginx:latest\n==> docker: Starting docker container...\n docker: Run command: docker run -v /root/.packer.d/tmp/packer-docker860052889:/packer-files -d -i -t nginx /bin/bash\n docker: Container ID: 2047e58a479904968bff162d279ac42d1e162878fb6b8e2176bb3e4551669c17\n==> docker: Using docker communicator to connect: 172.17.0.2\n==> docker: Provisioning with shell script: /tmp/packer-shell763812364\n docker:\n docker: WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n docker: Bring back Black Books!\n docker:\n docker: Reading package lists...\n docker: Building dependency tree...\n docker: Reading state information...\n docker: The following packages were automatically installed and are no longer required:\n docker: fontconfig-config fonts-dejavu-core libbsd0 libedit2 libexpat1\n docker: libfontconfig1 libfreetype6 libgd3 libgeoip1 libicu57 libjbig0\n docker: libjpeg62-turbo libpng16-16 libssl1.1 libtiff5 libwebp6 libx11-6 libx11-data\n docker: libxau6 libxcb1 libxdmcp6 libxml2 libxpm4 libxslt1.1 ucf\n docker: Use 'apt autoremove' to remove them.\n docker: The following packages will be REMOVED:\n docker: nginx nginx-module-geoip nginx-module-image-filter nginx-module-njs\n docker: nginx-module-xslt\n docker: 0 upgraded, 0 newly installed, 5 to remove and 0 not upgraded.\n docker: After this operation, 5336 kB disk space will be freed.\n docker: (Reading database ... 7026 files and directories currently installed.)\n docker: Removing nginx-module-njs (1.15.7.0.2.6-1~stretch) ...\n docker: Removing nginx-module-xslt (1.15.7-1~stretch) ...\n docker: Removing nginx-module-geoip (1.15.7-1~stretch) ...\n docker: Removing nginx-module-image-filter (1.15.7-1~stretch) ...\n docker: Removing nginx (1.15.7-1~stretch) ...\n docker: invoke-rc.d: could not determine current runlevel\n docker: invoke-rc.d: policy-rc.d denied execution of stop.\n==> docker: Committing the container\n docker: Image ID: sha256:53a34cbb093015f423de89ad874afebb3b9470f3750e858729f75ed8e3f4bce4\n==> docker: Killing the container: 2047e58a479904968bff162d279ac42d1e162878fb6b8e2176bb3e4551669c17\nBuild 'docker' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> docker: Imported Docker image: sha256:53a34cbb093015f423de89ad874afebb3b9470f3750e858729f75ed8e3f4bce4\n```", "```\n$ sudo docker image ls\nREPOSITORY TAG IMAGE ID CREATED SIZE\n<none> <none> 53a34cbb0930 19 seconds ago 110MB\nnginx latest 568c4670fa80 19 hours ago 109MB\nalpine latest 196d12cf6ab1 2 months ago 4.41MB\n```", "```\nprovider \"docker\" {\n  host = \"unix:///var/run/docker.sock\"\n}\n\nresource \"docker_image\" \"example-image\" {\n  name = \"nginx\"\n}\n\nresource \"docker_container\" \"example-container\" {\n  name = \"nginx-example\"\n  image = \"${docker_image.example-image.latest}\"\n}\n```", "```\nprovider \"docker\" {\n  host = \"unix:///var/run/docker.sock\"\n}\n```", "```\nresource \"docker_image\" \"example-image\" {\n  name = \"nginx\"\n}\n```", "```\nresource \"docker_container\" \"example-container\" {\n  name = \"nginx-example\"\n  image = \"${docker_image.example-image.latest}\"\n}\n```", "```\n$ sudo /usr/local/bin/terraform init\n```", "```\n$ sudo /usr/local/bin/terraform apply\n```", "```\n$ sudo /usr/local/bin/terraform destroy\n```", "```\n$ ls -lha\ntotal 16K\ndrwxrwxr-x. 3 vagrant vagrant 96 Nov 28 17:05 .\ndrwx------. 9 vagrant vagrant 4.0K Nov 28 17:07 ..\n-rw-rw-r--. 1 vagrant vagrant 251 Nov 28 17:02 main.tf\ndrwxr-xr-x. 3 root root 21 Nov 28 17:02 .terraform\n-rw-r--r--. 1 root root 318 Nov 28 17:05 terraform.tfstate\n-rw-r--r--. 1 root root 2.9K Nov 28 17:05 terraform.tfstate.backup\n```", "```\n{ \n\n  \"builders\":[\n  {\n    \"type\": \"docker\",\n    \"image\": \"nginx\",\n    \"commit\": true,\n    \"pull\": true,\n    \"changes\": [\n      \"LABEL custom=true\",\n      \"EXPOSE 443\"\n    ]\n  }],\n\n  \"provisioners\":[\n  {\n    \"type\": \"shell\",\n    \"inline\": [\"echo 'Bring back Black Books!'\",\"apt remove nginx -y\"]\n  }]\n\n}\n```", "```\n  \"builders\":[\n  {\n    \"type\": \"docker\",\n    \"image\": \"nginx\",\n    \"commit\": true,\n    \"pull\": true,\n    \"changes\": [\n      \"LABEL custom=true\",\n      \"EXPOSE 443\"\n    ]\n  }],\n```", "```\n$ sudo docker inspect 53a34cbb0930 | grep \"custom\\|443\"\n \"443/tcp\": {},\n \"custom\": \"true\",\n```", "```\n  \"provisioners\":[\n  {\n    \"type\": \"shell\",\n    \"inline\": [\"echo 'Bring back Black Books!'\",\"apt remove nginx -y\"]\n  }]\n```", "```\n$ sudo /usr/local/bin/packer build docker.json\n```", "```\n$ terraform fmt\nmain.tf\n```"]