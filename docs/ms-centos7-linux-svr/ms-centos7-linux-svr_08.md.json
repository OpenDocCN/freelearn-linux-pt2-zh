["```\n$ sudo firewall-cmd --permanent --zone=public --add-port=8140/tcp\n$ sudo firewall-cmd --reload\n\n```", "```\n$ sudo nano /etc/hosts\n10.0.0.10  masterpuppet.packt.co.uk\n10.0.0.11  webserver1.packt.co.uk\n10.0.0.12  webserver2.packt.co.uk\n\n```", "```\n    $ sudo rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm\n\n    ```", "```\n    $ sudo yum install puppet-server\n\n    ```", "```\n    $ sudo nano /etc/puppet/puppet.conf\n\n    ```", "```\n     dns_alt_names = masterpuppet,masterpuppet.packt.co.uk\n     certname = masterpuppet.packt.co.uk\n\n    ```", "```\n    $ sudo puppet master --verbose --no-daemonize\n\n    ```", "```\n    Notice: Starting Puppet master version 3.8.4\n\n    ```", "```\n$ sudo yum install mod_passenger curl curl-devel make automake httpd httpd-devel mod_ssl ruby-devel rubygems gcc gcc-c++ pygpgme zlib-devel openssl-devel\n\n```", "```\n$ sudo gem install rack passenger\n\n```", "```\n$ sudo locate passenger-install-apache2-module \n$ sudo /usr/local/share/gems/gems/passenger-5.0.21/bin/passenger-install-apache2-module\n\n```", "```\n1\\. The Apache 2 module will be installed for you.\n\n```", "```\nPhusion Passenger is a registered trademark of Hongli Lai & Ninh Bui.\n\n```", "```\n$ sudo mkdir -p /usr/share/puppet/rack/puppetmasterd/public /usr/share/puppet/rack/puppetmasterd/tmp\n$ sudo cp /usr/share/puppet/ext/rack/config.ru /usr/share/puppet/rack/puppetmasterd/\n$ sudo chown puppet:puppet /usr/share/puppet/rack/puppetmasterd/config.ru\n\n```", "```\n$ sudo nano /etc/httpd/conf.d/puppetmaster.conf\n\n```", "```\n# CentOS 7:\n# Set those as the Gems and Passenger version installed on your system\nLoadModule passenger_module  /usr/local/share/gems/gems/passenger-5.0.21/buildout/apache2/mod_passenger.so\nPassengerRoot /usr/local/share/gems/gems/passenger-5.0.21/\n\nPassengerRuby /usr/bin/ruby\n# And the passenger performance tuning settings:\nPassengerHighPerformance On\nPassengerUseGlobalQueue On\n# Passenger Max Pool should be configured as 3/2 the number of CPU cores of the master machine:\nPassengerMaxPoolSize 4\n# Limit number of request before recycling\nPassengerMaxRequests 1000\n# Limit time for process to set as idle\nPassengerPoolIdleTime 600\nListen 8140\n<VirtualHost *:8140>\n SSLEngine On\n # Only allow high security cryptography. Alter if needed for compatibility.\n SSLProtocol             All \u2013SSLv3\n SSLCipherSuite          HIGH:!ADH:RC4+RSA:-MEDIUM:-LOW:-EXP\n SSLCertificateFile\t/var/lib/puppet/ssl/certs/unixmen-centos7.arnhem.chello.nl.pem\n SSLCertificateKeyFile\t/var/lib/puppet/ssl/private_keys/unixmen-centos7.arnhem.chello.nl.pem\n SSLCertificateChainFile /var/lib/puppet/ssl/ca/ca_crt.pem\n SSLCACertificateFile    /var/lib/puppet/ssl/ca/ca_crt.pem\n SSLCARevocationFile     /var/lib/puppet/ssl/ca/ca_crl.pem\n SSLVerifyClient         optional\n SSLVerifyDepth          1\n SSLOptions              +StdEnvVars +ExportCertData\n # These request headers are used to pass the client certificate\n # authentication information on to the puppet master process\n RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e\n RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e\n RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e\n #RackAutoDetect On\n DocumentRoot /usr/share/puppet/rack/puppetmasterd/public/\n <Directory /usr/share/puppet/rack/puppetmasterd/>\n Options None\n AllowOverride None\n Order Allow,Deny\n Allow from All\n </Directory>\n</VirtualHost>\n\n```", "```\n$ sudo nano /etc/selinux/config\n\n```", "```\nSELINUX=permissive\n\n```", "```\n$ sudo systemctl restart httpd.service\n$ sudo systemctl enable httpd.service\n$ sudo systemctl disable puppetmaster.service\n\n```", "```\n$ sudo yum install ntp ntpdate\n$ sudo systemctl start ntpd\n$ sudo systemctl enable ntpd\n\n```", "```\n$ s\nudo rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm\n\n```", "```\n$ sudo yum install puppet\n\n```", "```\n$ sudo nano /etc/puppet/puppet.conf\n[agnet]\nserver = masterpuppet.packt.co.uk\nreport = true\npluginsync = true\n\n```", "```\n$ sudo systemctl enable puppet.service\n$ sudo systemctl start puppet.service\n\n```", "```\n$ sudo puppet cert list\n\n```", "```\n\"webserver1.packt.co.uk\" (SHA256) 04:55:E0:82:4E:AD:7F:3C:9C:C7:52:79:98:ED:5E:A6:B0:B5:85:08:DC:81:E5:2D:A6:32:ED:8B:5C:F4:3B:DA\n\n```", "```\n$ sudo puppet cert sign webserver1.packt.co.uk\n\n```", "```\n$ sudo puppet agent -t\n\n```", "```\n$ sudo nano /etc/puppet/manifests/site.pp\n\n```", "```\nnode 'webserver1', 'webserver2 {\n              package { 'php' :\n              ensure => installed,\n                       }\n}\n```", "```\n$ sudo puppet agent --test\n\n```", "```\n$ sudo nano /etc/puppet/puppet.conf\nruninterval = 900 # To make change every 15 minutes (60 x time in minutes)\n\n```", "```\nnode 'webserver1', 'webserver2 {\n\n              package { 'httpd' : \n              ensure => installed, \n                       } ->  # this to ensure that the order before it is executed before going to the order after it\n              service {'httpd': \n              ensure => running, \n              enable => true, \n                       }\n}\n```", "```\nnode 'webserver1', 'webserver2 {        \npackage { 'epel-release' : \n              ensure => installed, \n                       }  ->\n              package { 'iperf' : \n              ensure => installed, \n                       }\n}\n```", "```\nnode 'webserver1' {\n\n                 user { \"usertest\":  \n                 ensure => \"present\",\n                 shell => '/bin/bash', \n                 home => '/home/usertest', \n                 managehome => true, \n                 password => '############################', }\n}\n```", "```\n$ sudo puppet module search ftp\n\n```", "```\n$ sudo puppet module install puppetlabs-apache\n\n```"]