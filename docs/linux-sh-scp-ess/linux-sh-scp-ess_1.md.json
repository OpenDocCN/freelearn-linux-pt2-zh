["```\n$ ps -p $$\n\n```", "```\n PID TTY          TIME CMD\n12578 pts/4    00:00:00 bash\n\n```", "```\n$ bash\n\n```", "```\n$ chsh -s /bin/bash\n\n```", "```\nChanging shell for user.\nPassword:******\nShell changed.\n\n```", "```\n#! /bin/bash\n```", "```\n$ chmod u+x foo\n\n```", "```\n$ echo Hello World\nHello World\n\n```", "```\n$  echo \"Hello World\"\nHello World\n\n```", "```\n$ echo 'Hello World'\nHello World\n\n```", "```\n$ printf \"Hello World\"\nHello World$\n\n```", "```\n$ printf \"Hello World\\n\"\nHello World\n\n```", "```\nprintf FORMAT [ARGUMENTS]\n\n```", "```\n$ printf \"%d mul %f = %f\\n\" 6 6.0 36.0\n6 mul 6.000000 = 36.000000\n$ printf \"%s Scripting\\n\" Shell\nShell Scripting\n\n```", "```\n$ printf \"%d mul %.2f = %.2f\\n\" 6 6.0 36.0\n6 mul 6.00 = 36.00\n\n```", "```\n#!/bin/bash\n#Filename: print.sh\n#Description: print and echo\n\necho \"Basic mathematics\"\nprintf \"%-7d %-7s %-7.2f =\\t%-7.2f\\n\" 23 plus 5.5 28.5\nprintf \"%-7.2f %-7s %-7d =\\t%-7.2f\\n\" 50.50 minus 20 30.50 \nprintf \"%-7d %-7s %-7d =\\t%-7d\\n\" 10 mul 5 50\nprintf \"%-7d %-7s %-7d =\\t%-7.2f\\n\" 27 div 4 6.75\n\n```", "```\n$ chmod u+x print.sh\n\n```", "```\n$ ./print.sh\n\n```", "```\n$ book=\"Linux Shell Scripting\"  # Stores string value\n\u2029$ book = \"Linux Shell Scripting\"  # Wrong, spaces around = operator\n$ total_chapters=8    # Stores integer value\n$ number_of_pages=210    # Stores integer value\n$ average_pages_per_chapter=26.25    # Stores float value\n\n```", "```\n#!/bin/bash\n#Filename: variables.sh\n#Description: Basic variable definition and accessing them\n\nbook=\"Linux Shell Scripting\"\ntotal_chapters=8\nnumber_of_pages=210\naverage_pages_per_chapter=26.25\n\necho \"Book name - $book\"\necho \"Number of Chapters - $total_chapters\"\nprintf \"Total number of pages in book - $number_of_pages\\n\"\nprintf \"Average pages in each chapter - %-.2f\\n\" $average_pages_per_chapter\n```", "```\nBook name - Linux Shell Scripting\nNumber of Chapters - 8\nTotal number of pages in book - 210\nAverage pages in each chapter \u2013 26.25\n```", "```\n#!/bin/bash\n#Filename: unset.sh\n#Description: removing value of a variable\n\nfruit=\"Apple\"\nquantity=6\necho \"Fruit = $fruit , Quantity = $quantity\"\nunset fruit\necho \"Fruit = $fruit , Quantity = $quantity\"\n```", "```\nFruit = Apple , Quantity = 6\nFruit =  , Quantity = 6\n```", "```\n#!/bin/bash\n#Filename: constant.sh\n#Description: constant variables in shell\n\nreadonly text=\"Welcome to Linux Shell Scripting\"\necho $text\ndeclare -r number=27\necho $number\ntext=\"Welcome\"\n\n```", "```\nWelcome to Linux Shell Scripting\n27\nconstant.sh: line 9: text: readonly variable\n```", "```\nread [options] var1 var2  \u2026 varN\n```", "```\n$ read\n    Hello World\n$ echo $REPLY\n    Hello World\n```", "```\n$ read text\n    Hello\n$ echo $text\n    Hello\n```", "```\n$ read name usn marks\n    Foo 345 78\n$ echo $name $usn $marks\n    Foo 345 78\n```", "```\n$ read -n 5    # option -n number takes only 5 characters from user input\n    Hello$\n$ echo $REPLY\n    Hello\n```", "```\n$ read -p \"What is your name?\"    # -p allows to prompt user a message\n    What is your name?Foo\n$  echo $REPLY\n    Foo\n```", "```\n$  read -s -p \"Enter your secret key:\"  # -s doesn't echo input in console\nEnter your secret key:$    #Pressing enter key brings command prompt $\necho $REPLY\nfoo\n```", "```\n#!/bin/bash\n#Filename: read.sh\n#Description: Find a file in a path entered by user\n\nread -p \"Enter filename to be searched:\"\nfilename=$REPLY\nread -p \"Enter path for search:\" path\necho \"File $filename search matches to\"\nfind $path -name $filename\n\n```", "```\nEnter filename to be searched:read\nEnter path for search:/usr/bin\nFile read search matches to\n/usr/bin/read\n\n```", "```\n#!/bin/bash\n#Filename: builtin_shell_variables.sh\n#Description: Knowing about builtin shell variables\n\necho \"My current bash path - $BASH\"\necho \"Bash version I am using - $BASH_VERSION\"\necho \"PID of bash I am running - $BASHPID\"\necho \"My home directory - $HOME\"\necho \"Where am I currently? - $PWD\"\necho \"My hostname - $HOSTNAME\"\n```", "```\nMy current bash path - /bin/sh\nBash version I am using \u2013 4.3.33(1)-release\nPID of bash I am running - 4549\nMy home directory - /home/sinny\nWhere am I currently? - /home/sinny/Documents/\nMy hostname \u2013 localhost.localdomain\n```", "```\n#!/bin/bash\n#Filename: path_variable.sh\n#Description: Playing with PATH variable\n\necho \"Current PATH variable content - $PATH\"\necho \"Current directory - $PWD\"\necho \"Content of current directory\\n`ls`\"\nPATH=$PATH:$PWD\necho \"New PATH variable content - $PATH\"\n# Now execute commands available in current working diectory\n```", "```\nCurrent PATH variable content - /usr/lib64/qt-3.3/bin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/sinny/go/source_code/go/bin:/home/sinny/.local/bin:/home/sinny/bin\nCurrent directory - /home/sinny/test_project/bin\nContent of current directory \u2013 foo bar\nNew PATH variable content - /usr/lib64/qt-/usr/lib64/qt-3.3/bin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/sinny/go/source_code/go/bin:/home/sinny/.local/bin:/home/sinny/bin: /home/sinny/test_project/bin\n```", "```\n$ var=40           # Initializing variable var to integer value\n$ var=\"Hello\"    # Changing value of var to string value\n$ var=8.9        # Changing value of var to float value\n\n```", "```\n#!/bin/bash\n#Filename: arithmetic.sh\n#Description: Arithmetic evaluation\n\nnum1=10 num2=5\necho \"Numbers are num1 = $num1 and num2 = $num2\"\necho \"Addition = `expr $num1 + $num2`\"`\"\necho \"Subtraction = `expr $num1 - $num2`\"\necho \"Multiplication = `expr $num1 \\* $num2`\"\necho \"Division = `expr $num1 / $num2`\"\nlet \"exponent = $num1 ** num2\"\necho \"Exponentiation = $exponent\" \necho \"Modulo = `expr $num1 % $num2`\"\nlet \"num1 += $num2\"\necho \"New num1 = $num1\"\nlet \"num1 -= $num1\"\necho \"New num2 = $num2\"\n```", "```\nNumbers are num1 = 10 and num2 = 5\nAddition = 15\nSubtraction = 5\nMultiplication = 50\nDivision = 2\nExponentiation = 100000\nModulo = 0\nNew num1 = 15\nNew num2 = 5\n```", "```\n$ cd ~/Documents/ && ls\n\n```", "```\n$ cat ~/file.txt  || echo \"Current Working directory $PWD\"\ncat: /home/skumari/file.txt: No such file or directory\nCurrent Working directory /tmp/\n\n```", "```\n$  ! cd /tmp/foo && mkdir /tmp/foo\nbash: cd: /tmp/foo: No such file or directory\n\n```", "```\n$ cd /tmp/foo\n\n```", "```\n$ ls *.sh\n\n```", "```\n$ mkdir  ~/test && cd ~/test\n$ touch a ab foo bar hello moo foo.c bar.c moo.c hello.txt foo.txt bar.sh hello.sh moo.sh\n\n```", "```\n$ ls\na  ab  bar  bar.c  bar.sh  foo  foo.c  foo.txt  hello  hello.sh  hello.txt  moo  moo.c  moo.sh\n\n```", "```\n    $ ls *\n    a  ab  bar  bar.c  bar.sh  foo  foo.c  foo.txt  hello  hello.sh  hello.txt  moo  moo.c  moo.sh\n\n    ```", "```\n    $ ls *.c\n    bar.c  foo.c  moo.c\n\n    ```", "```\n    $ ls *a*\n    a  ab  bar  bar.c  bar.sh\n\n    ```", "```\n    $ rm *.txt\n    $ ls\n    a  ab  bar  bar.c  bar.sh  foo  foo.c  hello  hello.sh  moo  moo.c  moo.sh\n\n    ```", "```\n$ touch a ab foo bar hello moo foo.c bar.c moo.c hello.txt foo.txt bar.sh hello.sh moo.sh\n\n```", "```\n    $ ls ??\n    ab\n\n    ```", "```\n    $ ls ?? ?????\n    ab  bar.c  foo.c  hello  moo.c\n\n    ```", "```\n    $ rm ????\n    rm: cannot remove '????': No such file or directory\n    This error is because there is no file name with 4 character\n\n    ```", "```\n    $ mv ???* /tmp\n    $ ls\n    a ab\n\n    ```", "```\n$ touch a ab foo bar hello moo foo.c bar.c moo.c hello.txt foo.txt bar.sh hello.sh moo.sh\n\n```", "```\n$ ls [a-d]*\na  ab  bar  bar.c  bar.sh\n\n```", "```\n$  ls [a-zA-Z]*[oh]\nfoo  hello  hello.sh  moo  moo.sh\n\n```", "```\n$ ls *[o]*[o]*\nfoo  foo.c  foo.txt  moo  moo.c  moo.sh\n\n```", "```\n$  ls [!0-9]*\na  ab  bar  bar.c  bar.sh  foo  foo.c  foo.txt  hello  hello.sh  hello.txt  moo  moo.c  moo.sh\n\n```", "```\n$ touch a ab foo bar hello moo foo.c bar.c moo.c hello.txt foo.txt bar.sh hello.sh moo.sh\n\n```", "```\n$ ls {*.sh,*.c}\nbar.c  bar.sh  foo.c  hello.sh  moo.c  moo.sh\n\n```", "```\n$ cp bar{.c,.cpp}  # Expands to cp bar.c bar.cpp\n$ ls bar.*\nbar.c  bar.cpp  bar.sh\n\n```", "```\n$ echo {1..50}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n```", "```\n$ touch hello{0..9}.cpp\n$ ls *.cpp\nhello0.cpp  hello1.cpp  hello2.cpp  hello3.cpp  hello4.cpp  hello5.cpp  hello6.cpp  hello7.cpp  hello8.cpp  hello9.cpp\n\n```", "```\neval [arg \u2026]\n\n```", "```\n$ name=foo\n$ foo=\"Welcome to foo world\"\n$ echo $name\nfoo\n$ new_name='$'$name    #new_name just stores string value $foo\n$ echo $new_name\n$foo\n$ eval new_name='$'$name  # eval processes $foo string into variable and  prints                 # foo variable value\nWelcome to foo world\n```", "```\n$ pipe=\"|\"\n$  df $pipe wc  # Will give error because \ndf: '|': No such file or directory\ndf: 'wc': No such file or directory\n$ eval df $pipe wc  # eval executes it as shell command\n12      73     705\n```", "```\nA shell script showing the use of eval is as follows:\n#!/bin/bash\n#Filename: eval.sh\n#Description: Evaluating string as a command using eval\n\ncmd=\"ls /usr\"\necho \"Output of command $cmd -\"\neval $cmd   #eval will treat content of cmd as shell command and execute it\ncmd1=\"ls /usr | wc -l\"\necho \"Line count of /usr -\"\neval $cmd1\n\nexpression=\"expr 2 + 4 \\* 6\"\necho \"Value of $expression\"\neval $expression\n```", "```\nOutput of command ls /usr -\navr  bin  games  include  lib  lib64  libexec  local  sbin  share  src  tmp\nLine count of /usr -\n12\nValue of expr 2 + 4 \\* 6\n26\n```", "```\n set [--abBCefhHkmnpPtuvx] [-o option] [arg \u2026]\n\n```", "```\n$ cat do_not_exit_on_failure.sh\n\n```", "```\n#!/bin/bash\n# Filename: do_not_exit_on_failure.sh\n# Description: Resume script after an error\n\necho \"Before error\"\ncd /root/       # Will give error\necho \"After error\"\n```", "```\nBefore error\ndo_not_exit_on_failure.sh: line 6: cd: /root/: Permission denied\nAfter error\n```", "```\n$ cat exit_on_failure.sh\n\n```", "```\n#!/bin/bash\n# Filename: exit_on_failure.sh\n# Description: Exits script after an error\n\nset -e\necho \"Before error\"\ncd /root/       # Will give error\necho \"After error\"\n```", "```\nBefore error\nexit_on_failure.sh: line 7: cd: /root/: Permission denied\n```", "```\n$ ls -l /bin\nlrwxrwxrwx. 1 root root 7 Nov 18 18:03 /bin -> usr/bin\n$ set \u2013P    # -P enable symbolic link resolution\n$ cd /bin\n$ pwd\n/usr/bin\n$ set +P   # Disable symbolic link resolution\n$ pwd\n/bin\n\n```", "```\n$ MYVAR=\"Linux Shell Scripting\"\n$ echo $MYVAR\n Linux Shell Scripting\n$ set | grep MYVAR  # MYVAR local variable is created\nMYVAR='Linux Shell Scripting'\n$ bash    # Creating a new bash sub-process in current bash\n$ set | grep MYVAR\n$    # Blank because MYVAR is local variable\n\n```", "```\n$ MYVARIABLE=\"Hello World\"\n$ export  MYVARIABLE\n$ bash    # Creating a new bash sub-process under bash\n$ echo $MYVARIABLE\nHello World\n\n```", "```\n$ export |grep MYVARIABLE\ndeclare -x MYVARIABLE=\"Hello World\"\n$ export | grep MYVAR\n$MYVAR variable is not present in sub-process but variable MYVARIABLE is present in sub-process.\n\n```", "```\n$ unset MYVAR        # Unsets local variable MYVAR\n$ unset  MYVARIABLE    # Unsets exported variable MYVARIABLE\n\n```"]