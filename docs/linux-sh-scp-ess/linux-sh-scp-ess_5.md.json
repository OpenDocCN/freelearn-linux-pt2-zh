["```\n$ printenv SHELL    # Prints which shell is being used\n/bin/bash\n$ printenv PWD    # Present working directory\n/home/foo/Documents\n$ printenv HOME    # Prints user's home directory\n/home/foo\n$ printenv PATH    # Path where command to be executed is searched\n/usr/lib64/qt-3.3/bin:/usr/lib64/ccache:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/foo\n$ printenv USER HOSTNAME  # Prints value of both environment variables\nfoo\nlocalhost\n\n```", "```\n$ printenv  # Prints all environment variables available to current shell\n\n```", "```\n$ env\n\n```", "```\n$ env | grep ENV_VAR1  # Verifying that ENV_VAR1 doesn't exist\n$ export ENV_VAR1='New environment variable'\n\n```", "```\n$ env | grep ENV_VAR1\nENV_VAR1=New environment variable\n$ printenv ENV_VAR1    # Viewing value of ENV_VAR1 environment variable\nNew environment variable\n\n```", "```\n$ echo $ENV_VAR1  # Printing value of ENV_VAR1 environment variable\nNew environment variable\n\n```", "```\n$ ENV_VAR2='Another environment variable'\n$ LOCAL_VAR1='Local variable'\n$ env | grep ENV_VAR2  # Verifying if ENV_VAR2 is an environment variable\n\n```", "```\n$ set | grep ENV_VAR2\nENV_VAR2='Another environment variable'\n$ set | grep  LOCAL_VAR1\nLOCAL_VAR1='Local variable'\n\n```", "```\n$ export ENV_VAR2    # Becomes environment variable\n$ printenv ENV_VAR2    # Checking of  ENV_VAR2 is an environment variable\nAnother environment variable\n$ printenv LOCAL_VAR1\n\n```", "```\n$ bash  # creating a new bash shell\n$ env | grep ENV_VAR2  # Checking if  ENV_VAR2 is available in child shell\nENV_VAR2=Another environment variable\n$ env | grep ENV_VAR1\nENV_VAR1=New environment variable\n$ env | grep LOCAL_VAR1\n\n```", "```\n$ printenv HOME\n/home/foo\n$ pwd    # Checking current working directory\n/tmp\n$ cd $HOME    # Should change directory to /home/foo\n$ pwd    # Check now current working directory\n/home/foo\n\n```", "```\n$ HOME=/tmp    # Modifying HOME environment variable\n$ printenv HOME    # Checking value of HOME environment variable\n/tmp\n$ cd $HOME    # Changing directory to what $HOME contains\n$ pwd    # Checking current working directory\n/tmp\n\n```", "```\n$ printenv PATH\nusr/lib64/ccache:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/foo/.local/bin:/home/foo/bin\n\n```", "```\n$ PATH=$PATH:/home/foo/projects/bin  # Appends new path\n$ printenv PATH\nusr/lib64/ccache:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/foo/.local/bin:/home/foo/bin:/home/foo/projects/bin\n\n```", "```\n$ PATH=$PATH:/home/foo/project1/bin:PATH:/home/foo/project2/bin\n$ printenv PATH\nusr/lib64/ccache:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/foo/.local/bin:/home/foo/bin:/home/foo/projects/bin:/home/foo/project1/bin:PATH:/home/foo/project2/bin\n\n```", "```\n$ export ENV1='My environment variable'\n$ env | grep ENV1  # Checking if ENV1 environment variable exist\nENV1=My environment variable\n$ unset ENV1    # Deleting ENV1 environment variable\n$ env | grep ENV1\n\n```", "```\n$ export ENV2='Another environment variable'\n$ env | grep ENV2\nENV2=Another environment variable\n$ ENV2=''\t# Reset ENV2 to blank\n$ env | grep ENV2\nENV2=\n\n```", "```\n# .bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\n\n# Uncomment the following line if you don't like systemctl's auto-paging feature:\n# export SYSTEMD_PAGER=\n\n# User specific aliases and functions\n```", "```\n for i in /etc/profile.d/*.sh; do\n        if [ -r \"$i\" ]; then\n            if [ \"$PS1\" ]; then\n                . \"$i\"\n```", "```\n# custom_bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\n\n# Uncomment the following line if you don't like systemctl's auto-paging feature:\n# export SYSTEMD_PAGER=\n\n# User added settings\n# Adding aliases\nalias rm='rm -i'  # Prompt before every removal\nalias cp='cp -i'  # Prompts before overwrite\nalias df='df -h'  # Prints size in human readable format\nalias ll='ls -l'  # Long listing of file\n\n# Exporting environment variables\n# Setting and exporting LD_LIBRARY_PATH variable\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/libs\n# Setting number of commands saved in history file to 10000\nexport HISTFILESIZE=10000\n\n# Defining functions\n# Function to calculate size of current directory\nfunction current_directory_size()\n{\necho -n \"Current directory is $PWD with total used space \"\ndu -chs $PWD 2> /dev/null | grep total | cut -f1\n}\n```", "```\n$ cp ~/.bashrc ~/.bashrc.bak\n\n```", "```\n$ cp custom_bashrc ~/.bashrc\n\n```", "```\n$ source ~/.bashrc\n\n```", "```\n$ ll /home  # Using alias ll which we created\n\n```", "```\ntotal 24\ndrwx------.  2 root    root    16384 Jun 11 00:46 lost+found\ndrwx--x---+ 41 foo  foo      4096  Aug  3 12:57 foo\n```", "```\n$ alias  # To view aliases\n\n```", "```\nalias cp='cp -i'\nalias df='df -h'\nalias ll='ls -l'\nalias ls='ls --color=auto'\nalias rm='rm -i'\nalias vi='vim'\n```", "```\n$ cd ~\t# cd to user's home directory\n$ current_directory_size\nCurrent directory is /home/foo with total used space 97G\n$ cd /tmp\n$  current_directory_size\nCurrent directory is /tmp with total used space 48K\n\n```", "```\n$ mv ~/.bashrc.bak ~/.bashrc\n$ source ~/.bashrc\n\n```", "```\nfor i in /etc/profile.d/*.sh ; do\n    if [ -r \"$i\" ]; then\n        if [ \"${-#*i}\" != \"$-\" ]; then \n            . \"$i\"\n        else\n```", "```\n# .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nPATH=$PATH:$HOME/.local/bin:$HOME/bin\n\nexport PATH\n```", "```\n# .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n        . ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nPATH=$PATH:$HOME/.local/bin:$HOME/bin\n\nexport PATH\n\n# Added configuration by us\n# Setting user's default editor\nEDITOR=/usr/bin/vim\n# Show a welcome message to user with some useful information\necho \"Welcome 'whoami'\"\necho \"You are using $SHELL as your shell\"\necho \"You are running 'uname ' release 'uname -r'\"\necho \"The machine architecture is 'uname -m'\"\necho \"$EDITOR will be used as default editor\"\necho \"Have a great time here!\"\n```", "```\n$ cp ~/.bash_profile ~/.bash_profile.bak\n\n```", "```\n$ cp bash_profile ~/.bash_profile\n\n```", "```\n$ ssh foo@localhost    #  foo is the username of user\n\n```", "```\nLast login: Sun Aug  2 20:47:46 2015 from 127.0.0.1\nWelcome foo\nYou are using /bin/bash as your shell\nYou are running Linux release 4.1.3-200.fc22.x86_64\nThe machine architecture is x86_64\n/usr/bin/vim will be used as default editor\nHave a great time here!\n```", "```\n$ source ~/.bash_profile\n\n```", "```\nWelcome foo\nYou are using /bin/bash as your shell\nYou are running Linux release 4.1.3-200.fc22.x86_64\nThe machine architecture is x86_64\n/usr/bin/vim will be used as default editor\nHave a great time here!\n```", "```\n$ mv ~/.bash_profile.bak ~/.bash_profile\n$ source ~/.bash_profile\n\n```", "```\n$  echo $HISTFILE\n/home/foo/.bash_history\n$ echo $HISTFILESIZE\n1000\n$ echo $HISTSIZE\n1000\n$ echo $HISTCONTROL\nignoredups\n\n```", "```\n$ history  # Prints all commands typed previously on stdout\n$ history | tail -n10    # Prints last 10 commands executed\n\n```", "```\n$ history 5\n 769  cd /tmp/\n 770  vi hello\n 771  cd ~\n 772  vi .bashrc \n 773  history 5\n\n```", "```\n$ history | grep set \n 555  man setenv\n 600  set | grep ENV_VAR2\n 601  unset ENV_VAR2\n 602  set | grep ENV_VAR2\n 603  unset -u  ENV_VAR2 \n 604  set -u  ENV_VAR2\n 605  set | grep ENV_VAR2\n 737  set |grep HIST\n 778  history | grep set\n\n```", "```\n$ history -c  # Clears history from current list\n$ history -w  # Overwrite history file and writes current list which is empty\n\n```", "```\n$ HISTFILESIZE=100000\n\n```", "```\n$  HISTFILE=~/customized_history_path\n\n```", "```\n$ [ctrl + r]\n(reverse-i-search)'his': man history\n\n```", "```\n$ ls /home/\nlost+found  foo\n$ !!\nls /home/\nlost+found  foo\n\n```", "```\n$ !l\nls /home/\nlost+found  skumari\n$ !his\nhistory 12\n\n```", "```\n$ !?h\nls /home/\nlost+found  skumari\n\n```", "```\n$ grep -R \"search Text\" / 2>/dev/null >  out1.txt &\n[1] 8871\n$\n\n```", "```\n$  grep -R \"search Text\" / 2>/dev/null >  out2.txt\n\n```", "```\n[ctrl + z]\n[2]+  Stopped            grep -R \"search Text\"  / 2> /dev/null > out2.txt\n\n```", "```\n$ bg\n[2]+ grep -R \"search Text\"  / 2> /dev/null > out2.txt\n\n```", "```\n$ jobs\n```", "```\n[1]-  Running        grep -R \"search Text\" / 2> /dev/null > out1.txt &\n[2]+ Running         grep -R \"search Text\" / 2> /dev/null > out2.txt &\n```", "```\n$ grep -R \"search Text\" / 2>/dev/null >  out3.txt \n[ctrl + z]\n[3]+  Stopped        grep -R \"search Text\"  / 2> /dev/null > out3.txt\n$ jobs\n[1]   Running        grep -R \"search Text\" / 2> /dev/null > out1.txt &\n[2]-  Running        grep -R \"search Text\" / 2> /dev/null > out2.txt &\n[3]+ Stopped         grep-R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ jobs -p\n\n```", "```\n8871\n8873\n8874\n```", "```\n$ jobs -r\n\n```", "```\n[1]   Running                 grep -R \"search Text\" / 2> /dev/null > out1.txt &\n[2]-  Running                 grep -R \"search Text\" / 2> /dev/null > out2.txt &\n```", "```\n$ jobs -s\n\n```", "```\n[3]+ Stopped                grep-R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ jobs 2\n\n```", "```\n[2]-  Running                 grep -R \"search Text\" / 2> /dev/null > out2.txt &\n```", "```\n$ jobs  # Listing background and suspended tasks\n\n```", "```\n[1]   Running                 grep -R \"search Text\" / 2> /dev/null > out1.txt &\n[2]-  Running                 grep -R \"search Text\" / 2> /dev/null > out2.txt &\n[3]+ Stopped                grep-R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ fg\n$ grep -R \"search Text\" / 2> /dev/null > out3.txt\n\n[ctrl + z]\n[3]+  Stopped                 grep -R \"search Text\" / 2> /dev/null > out3.txt\n\n```", "```\n$ jobs\n[1]   Running                 grep -R \"search Text\" / 2> /dev/null > out1.txt &\n[2]-  Running                 grep -R \"search Text\" / 2> /dev/null > out2.txt &\n[3]+ Stopped                grep-R \"search Text\" / 2> /dev/null > out3.txt\n\n```", "```\n$  fg 1  # Moving first tasks to foreground\n$ grep -R \"search Text\" / 2> /dev/null > out1.txt\n[ctrl + z]\n[1]+  Stopped            grep -R \"search Text\" / 2> /dev/null > out1.txt\n\n```", "```\n$ jobs  # List running or suspended tasks in current shell\n\n```", "```\n[1]+  Stopped        grep -R \"search Text\" / 2> /dev/null > out1.txt\n[2]   Running        grep -R \"search Text\" / 2> /dev/null > out2.txt &\n[3]-  Stopped        grep -R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ disown\nbash: warning: deleting stopped job 1 with process group 8871\n```", "```\n$ jobs  # Listing available jobs\n[2]-   Running       grep -R \"search Text\" / 2> /dev/null > out2.txt &\n[3]+  Stopped        grep -R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ disown -r\njobs\n[3]-  Stopped                 grep -R \"search Text\" / 2> /dev/null > out3.txt\n```", "```\n$ disown -a  # Gives warning for deleting a suspended task\nbash: warning: deleting stopped job 3 with process group 8874\n$ jobs\n\n```"]