["```\n#! /bin/sh\n```", "```\n#!/bin/bash\n```", "```\n[philip@localhost Documents]$ echo $SHELL\n/bin/bash\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ echo $0\nbash\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ps\n PID TTY          TIME CMD\n 74972 pts/1    00:00:03 bash\n 75678 pts/1    00:00:39 dnf\n 92796 pts/1    00:00:00 ps\n[philip@localhost Documents]$\n```", "```\nphilip@localhost Documents]$ vi myFirstScript.sh\n```", "```\n[philip@localhost Documents]$ cat myFirstScript.sh\n#!/bin/bash\n#This is a comment\n#echo 'This is also a comment'\n[philip@localhost Documents]$\n```", "```\nchmod command, as follows:\n```", "```\n[philip@localhost Documents]$ ./myFirstScript.sh\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myFirstScript.sh\n#!/bin/bash\n#This is a comment\n#echo 'This is also a comment'\necho 'Hello world'\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myFirstScript.sh\nHello world\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myFirstScript.sh\n#!/bin/bash\n#This is a comment\n#echo 'This is also a comment'\necho 'Hello world'\ndate\n[philip@localhost Documents]$ ./myFirstScript.sh\nHello world\nMon Sep 17 10:04:48 EDT 2018\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myFirstScript.sh\n#!/bin/bash\n#This is a comment\n#echo 'This is also a comment'\necho 'Hello world'\ndate\ntar -cvf mytar.tar /home/philip/Downloads\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myFirstScript.sh\nHello world\nMon Sep 17 10:35:37 EDT 2018\ntar: Removing leading `/' from member names\n/home/philip/Downloads/\n/home/philip/Downloads/home/\n/home/philip/Downloads/home/philip/\n/home/philip/Downloads/home/philip/Downloads/\n/home/philip/Downloads/home/philip/Downloads/song.mp3\n[philip@localhost Documents]$ ls  | grep tar\nmytar.tar\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ls -l input.sh\n-rw-rw-r--. 1 philip philip 75 Sep 17 10:42 input.sh\n[philip@localhost Documents]$ cat input.sh\n#!/bin/bash\n\necho 'Whats your name?'\nread name\necho 'your name is $name'\n[philip@localhost Documents]$ chmod +x input.sh\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./input.sh\nWhats your name?\nPhilip\nyour name is: Philip\n[philip@localhost Documents]$\n```", "```\n<variable name> = <value>\n```", "```\n[philip@localhost Documents]$ vi myvar.sh\n[philip@localhost Documents]$ cat myvar.sh\n#!/bin/bash\n\nOUR_VAR=\"Philip Inshanally\"\n\necho \"The variable which we defined is $OUR_VAR\"\n[philip@localhost Documents]$ chmod +x myvar.sh\n[philip@localhost Documents]$ ./myvar.sh\nThe variable which we defined is Philip Inshanally\n[philip@localhost Documents]$\n```", "```\nfor          <condition>\ndo\n                <command1>\n                <command2>\n                \u2026\n                <commandN>\ndone\n```", "```\n[philip@localhost Documents]$ vi myForLoop.sh\n[philip@localhost Documents]$ chmod +x myForLoop.sh\n[philip@localhost Documents]$ cat myForLoop.sh\n#!/bin/bash\necho 'This script displays how a for loop works'\nfor o in {1..10}\ndo\n echo \"The loop is running for the: $o time\"\ndone\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myForLoop.sh\nThis script displays how a for loop works\nThe loop is running for the: 1 time\nThe loop is running for the: 2 time\nThe loop is running for the: 3 time\nThe loop is running for the: 4 time\nThe loop is running for the: 5 time\nThe loop is running for the: 6 time\nThe loop is running for the: 7 time\nThe loop is running for the: 8 time\nThe loop is running for the: 9 time\nThe loop is running for the: 10 time\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myForLoop.sh\n#!/bin/bash\necho 'This script displays how a for loop works'\n#for o in {1..10}\nfor p in 1 2 3 4 5 6 7 8 9 10 11 12\ndo\n echo \"The loop is running for the: $p time\"\ndone\n[philip@localhost Documents]$\n [philip@localhost Documents]$ ./myForLoop.sh\nThis script displays how a for loop works\nThe loop is running for the: 1 time\nThe loop is running for the: 2 time\nThe loop is running for the: 3 time\nThe loop is running for the: 4 time\nThe loop is running for the: 5 time\nThe loop is running for the: 6 time\nThe loop is running for the: 7 time\nThe loop is running for the: 8 time\nThe loop is running for the: 9 time\nThe loop is running for the: 10 time\nThe loop is running for the: 11 time\nThe loop is running for the: 12 time\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myForLoop.sh\n#!/bin/bash\n\necho 'This script displays how a for loop works'\n\n#for o in {1..10}\n#for p in 1 2 3 4 5 6 7 8 9 10 11 12\nfor ((p=1; p<=6; p++))\ndo\n echo \"The loop is running for the: $p time\"\ndone\n[philip@localhost Documents]$\n [philip@localhost Documents]$ ./myForLoop.sh\nThis script displays how a for loop works\nThe loop is running for the: 1 time\nThe loop is running for the: 2 time\nThe loop is running for the: 3 time\nThe loop is running for the: 4 time\nThe loop is running for the: 5 time\nThe loop is running for the: 6 time\n[philip@localhost Documents]$\n```", "```\nwhile <condition>\ndo\n                <command1>\n                <command2>\n                \u2026\n                <commandN>\ndone\n```", "```\n[philip@localhost Documents]$ vi myWhile.sh\n[philip@localhost Documents]$ chmod +x myWhile.sh\n[philip@localhost Documents]$ cat myWhile.sh\n#!/bin/bash\n\nd=1\n\nwhile (( $d <= 8 ))\ndo\n echo \"The number is $d times\"\n d=$(( d+1 ))\ndone\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myWhile.sh\nThe number is 1 times\nThe number is 2 times\nThe number is 3 times\nThe number is 4 times\nThe number is 5 times\nThe number is 6 times\nThe number is 7 times\nThe number is 8 times\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ vi infinite.sh\n[philip@localhost Documents]$ chmod +x infinite.sh\n[philip@localhost Documents]$ cat infinite.sh\n#!/bin/bash\nwhile :\ndo\n echo \"You can enter text and press Enter as many times (exit using CTRL+c)\"\n read someText\n echo \"You typed $someText\"\ndone\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./infinite.sh\nYou can enter text and press Enter as many times (exit using CTRL+c)\nHi \nYou typed Hi\nYou can enter text and press Enter as many times (exit using CTRL+c)\nHow are you?\nYou typed How are you?\nYou can enter text and press Enter as many times (exit using CTRL+c)\nI can keep typing\nYou typed I can keep typing\nYou can enter text and press Enter as many times (exit using CTRL+c)\nand typing \nYou typed and typing\nYou can enter text and press Enter as many times (exit using CTRL+c)\nI can exit by using the keystroke as shown in the message above\nYou typed I can exit by using the keystroke as shown in the message above\nYou can enter text and press Enter as many times (exit using CTRL+c)\n^C\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ vi whileString.sh\n[philip@localhost Documents]$ chmod +x whileString.sh\n[philip@localhost Documents]$ cat whileString.sh\n#!/bin/bash\nsomeString=begin\nwhile [ \"$someString\" != \"quit\" ]\ndo\n echo \"Enter some text (type quit to exit)\"\n read someString\n echo \"You entered: $someString\"\ndone\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./whileString.sh\nEnter some text (type quit to exit)\nHi\nYou entered: Hi\nEnter some text (type quit to exit)\nmy name is Philip\nYou entered: my name is Philip\nEnter some text (type quit to exit)\nHow are you\nYou entered: How are you\nEnter some text (type quit to exit)\nquit\nYou entered: quit\n[philip@localhost Documents]$\n```", "```\nif [some condition]; then\n                execute something\nfi\nor\nif [[some condition]]; then\n                execute something\nfi\n```", "```\n[philip@localhost Documents]$ vi myif.sh\n[philip@localhost Documents]$ cat myif.sh\n#!/bin/bash\n\necho \"Welcome to our if statement script\"\nif [[ $1 == 4 ]]; then\n echo \"You're very smart\"\nfi\necho \"See you soon!\"\n[philip@localhost Documents]$ chmod +x myif.sh\n[philip@localhost Documents]$ ./myif.sh\nWelcome to our if statement script\nSee you soon!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 4\nWelcome to our if statement script\nYou're very smart\nSee you soon!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 3\nWelcome to our if statement script\nSee you soon!\n[philip@localhost Documents]$\n```", "```\nif [[some condition]]; then\n                execute something\nelse\n                execute something else\nfi\n```", "```\n[philip@localhost Documents]$ vi myif.sh\n[philip@localhost Documents]$ cat myif.sh\n#!/bin/bash\necho \"Welcome to our if statement script\"\nif [[ $1 == 4 ]]; then\n echo \"You're very smart\"\nelse\n echo \" Better luck next time\"\nfi\necho \"See you soon!\"\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 3\nWelcome to our if statement script\nBetter luck next time\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 2\nWelcome to our if statement script\nBetter luck next time\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 4\nWelcome to our if statement script\nYou're very smart\nSee you soon!\n[philip@localhost Documents]$\n```", "```\nif [[first condition]]; then\nexecute something\nelif [[second condition]]; then\n                execute something else\n elif [[third condition]]; then\n                execute something else\nelse\n                execute_a_last_resort_command\nfi\n```", "```\n[philip@localhost Documents]$ cat myif.sh\n#!/bin/bash\necho \"Welcome to our if statement script\"\nif [[ $1 == 4 ]]; then\n echo \"You're very smart\"\nelif [[ $1 == 2 ]]; then\n echo \"You've got your elseif value correct!\"\nelse\n echo \"Reach for the sky\"\nfi\necho \"See you soon!\"\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 2\nWelcome to our if statement script\nYou've got your elseif value correct!\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 3\nWelcome to our if statement script\nReach for the sky\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 4\nWelcome to our if statement script\nYou're very smart\nSee you soon!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myif.sh\n#!/bin/bash\necho \"Welcome to our if statement script\"\nif [[ $1 == 4 ]] || [[ $1 == 3 ]] ; then\n echo \"You're very smart\"\nelif [[ $1 == 2 ]]; then\n echo \"You've got your elseif value correct!\"\nelse\n echo \"Reach for the sky\"\nfi\necho \"See you soon!\"\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 4\nWelcome to our if statement script\nYou're very smart\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 3\nWelcome to our if statement script\nYou're very smart\nSee you soon!\n [philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ cat myif.sh\n#!/bin/bash\necho \"Welcome to our if statement script\"\nif [[ $1 == 4 ]] || [[ $1 == 3 ]] ; then\n echo \"You're very smart\"\nelif [[ $1 == 2 ]] && [[ $1 != 1 ]] ; then\n echo \"You've got your elseif value correct!\"\nelse\n echo \"Reach for the sky\"\nfi\necho \"See you soon!\"\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ ./myif.sh 1\nWelcome to our if statement script\nReach for the sky\nSee you soon!\n[philip@localhost Documents]$ ./myif.sh 2\nWelcome to our if statement script\nYou've got your elseif value correct!\nSee you soon!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ sudo dnf install https://dev.mysql.com/get/mysql80-community-release-fc28-1.noarch.rpm\n==========================================================================================================================\n Package       Arch  Version    Repository                   Size\n==========================================================================================================================\nInstalling:\nmysql80-community-release    noarch  fc28-1       @commandline                 30 k\n\nTransaction Summary\n==========================================================================================================================\nInstall  1 Package\nTotal size: 30 k\nInstalled size: 29 k\nIs this ok [y/N]: y\nInstalled:\nmysql80-community-release.noarch fc28-1                                                                                \nComplete!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ sudo dnf install mysql-community-server\nMySQL 8.0 Community Server                                                                302 kB/s | 215 kB     00:00 \nMySQL Connectors Community                                                                 32 kB/s |  15 kB     00:00 \nMySQL Tools Community                                                                      75 kB/s |  28 kB     00:00 \n\nTotal download size: 359 M\nInstalled size: 1.6 G\nIs this ok [y/N]: y\n```", "```\nInstalled:\n mysql-community-server.x86_64 8.0.12-1.fc28                 mecab.x86_64 0.996-2.fc28 \n mysql-community-client.x86_64 8.0.12-1.fc28                 mysql-community-common.x86_64 8.0.12-1.fc28 \n mysql-community-libs.x86_64 8.0.12-1.fc28 \nComplete!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ sudo systemctl start mysqld\n[philip@localhost Documents]$ sudo systemctl enable mysqld\n[philip@localhost Documents]$ systemctl status mysqld\n```", "```\n[philip@localhost Documents]$ grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log |tail -1\n2018-09-17T19:25:35.229434Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: #a7RCyoyzwOF\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ mysql_secure_installation\nSecuring the MySQL server deployment.\nEnter password for user root:\nThe existing password for the user account root has expired. Please set a new password.\nNew password:\n```", "```\nNew password:\nRe-enter new password:\nThe 'validate_password' component is installed on the server.\nThe subsequent steps will run with the existing configuration\nof the component.\nUsing existing password for root.\nEstimated strength of the password: 100\nChange the password for root ? ((Press y|Y for Yes, any other key for No) :\n```", "```\nDo you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : y\nBy default, a MySQL installation has an anonymous user,\nallowing anyone to log into MySQL without having to have\na user account created for them. This is intended only for\ntesting, and to make the installation go a bit smoother.\nYou should remove them before moving into a production\nenvironment.\nRemove anonymous users? (Press y|Y for Yes, any other key for No) : y\n```", "```\nNormally, root should only be allowed to connect from\n'localhost'. This ensures that someone cannot guess at\nthe root password from the network.\nDisallow root login remotely? (Press y|Y for Yes, any other key for No) :\n```", "```\n ... skipping.\nBy default, MySQL comes with a database named 'test' that\nanyone can access. This is also intended only for testing,\nand should be removed before moving into a production\nenvironment.\nRemove test database and access to it? (Press y|Y for Yes, any other key for No) : y\n - Dropping test database...\nSuccess.\n - Removing privileges on test database...\nSuccess.\nReloading the privilege tables will ensure that all changes\nmade so far will take effect immediately.\nReload privilege tables now? (Press y|Y for Yes, any other key for No) : y\nSuccess.\nAll done!\n[philip@localhost Documents]$\n```", "```\n[philip@localhost Documents]$ mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 21\nServer version: 8.0.12 MySQL Community Server - GPL\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nmysql>\n```", "```\nmysql> create database netaccess;\nQuery OK, 1 row affected (0.10 sec)\nmysql>\n```", "```\nmysql> create user 'philip'@'172.16.175.130' identified by 'password123';\nERROR 1819 (HY000): Your password does not satisfy the current policy requirements\nmysql>\n```", "```\nmysql> uninstall plugin validate_password;\nERROR 1305 (42000): PLUGIN validate_password does not exist\nmysql> exit\nBye\n[philip@localhost Documents]$ mysql -h localhost -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 22\nServer version: 8.0.12 MySQL Community Server - GPL\nmysql> UNINSTALL COMPONENT 'file://component_validate_password';\nQuery OK, 0 rows affected (0.10 sec)\nmysql> exit\nBye\n[philip@localhost Documents]$\n```", "```\nmysql> grant all on netaccess.* to 'philip'@'172.16.175.130';\nQuery OK, 0 rows affected (0.06 sec)\nmysql>\n```", "```\nmysql> flush privileges\n -> ;\nQuery OK, 0 rows affected (0.00 sec)\nmysql>\n```", "```\nphilip@Linuxplus:~$ mysql\nCommand 'mysql' not found, but can be installed with:\nsudo apt install mysql-client-core-5.7 \nsudo apt install mariadb-client-core-10.1\nphilip@Linuxplus:~$ sudo apt install mysql-client-core-5.7 \n[sudo] password for philip:\nReading package lists... Done\nBuilding dependency tree \nSetting up mysql-client-core-5.7 (5.7.23-0ubuntu0.18.04.1) ...\nProcessing triggers for libc-bin (2.27-3ubuntu1) ...\nphilip@Linuxplus:~$ mysql -h 172.16.175.129 -u philip -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 25\nServer version: 8.0.12 MySQL Community Server - GPL\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nmysql>\n```", "```\nmysql> show databases;\n+--------------------+\n| Database |\n+--------------------+\n| information_schema |\n| netaccess |\n+--------------------+\n2 rows in set (0.06 sec)\nmysql>\n```", "```\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| netaccess          |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\nmysql>\n```", "```\nphilip@Linuxplus:~$ mysql -h 172.16.175.129 -u philip -p -e \"show databases\"\nEnter password:\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| netaccess          |\n+--------------------+\nphilip@Linuxplus:~$\n```", "```\nmysql> use netaccess;\nDatabase changed\nmysql>\n```", "```\nmysql> create table Public_Places (name VARCHAR(20), location VARCHAR(30), service_provided VARCHAR(30));\nQuery OK, 0 rows affected (9.44 sec)\nmysql>\n```", "```\nmysql> show tables;\n+---------------------+\n| Tables_in_netaccess |\n+---------------------+\n| Public_Places       |\n+---------------------+\n1 row in set (0.11 sec)\nmysql>\n```", "```\nmysql> describe Public_Places;\n+------------------+-------------+------+-----+---------+-------+\n| Field            | Type        | Null | Key | Default | Extra |\n+------------------+-------------+------+-----+---------+-------+\n| name             | varchar(20) | YES  |     | NULL    |       |\n| location         | varchar(30) | YES  |     | NULL    |       |\n| service_provided | varchar(30) | YES  |     | NULL    |       |\n+------------------+-------------+------+-----+---------+-------+\n3 rows in set (0.23 sec)\nmysql>\n```", "```\ninsert into <table> <field(s)><value(s)>\n```", "```\nmysql> insert into Public_Places values('Police Station', 'Capital City', 'serve and protect');\nQuery OK, 1 row affected (0.17 sec)\nmysql>\n```", "```\nmysql> insert into Public_Places (name, location) values('Telephone Company', 'Georgetown');\nQuery OK, 1 row affected (0.16 sec)\nmysql>\n```", "```\nphilip@Linuxplus:~$ mysql -h 172.16.175.129 -u philip -p -e \"USE netaccess; INSERT INTO Public_Places values ('Hospital' , 'Georgetown', 'healthcare');\"\nEnter password:\nphilip@Linuxplus:~$\n```", "```\nmysql> select * from Public_Places;\n+-------------------+--------------+-------------------+\n| name              | location     | service_provided  |\n+-------------------+--------------+-------------------+\n| Police Station    | Capital City | serve and protect |\n| Telephone Company | Georgetown   | NULL              |\n| Hospital          | Georgetown   | healthcare        |\n+-------------------+--------------+-------------------+\n3 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> select * from Public_Places where name='Telephone Company';\n+-------------------+------------+------------------+\n| name              | location   | service_provided |\n+-------------------+------------+------------------+\n| Telephone Company | Georgetown | NULL             |\n+-------------------+------------+------------------+\n1 row in set (0.00 sec)\nmysql>\n```", "```\nmysql> select name, service_provided from Public_Places;\n+-------------------+-------------------+\n| name              | service_provided  |\n+-------------------+-------------------+\n| Police Station    | serve and protect |\n| Telephone Company | NULL              |\n| Hospital          | healthcare        |\n+-------------------+-------------------+\n3 rows in set (0.00 sec)\nmysql> select service_provided from Public_Places;\n+-------------------+\n| service_provided  |\n+-------------------+\n| serve and protect |\n| NULL              |\n| healthcare        |\n+-------------------+\n3 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> update Public_Places set service_provided='Telephones' where name='Telephone Company';\nQuery OK, 1 row affected (0.05 sec)\nRows matched: 1  Changed: 1  Warnings: 0\nmysql>\n```", "```\nmysql> select * from Public_Places;\n+-------------------+--------------+-------------------+\n| name              | location     | service_provided  |\n+-------------------+--------------+-------------------+\n| Police Station    | Capital City | serve and protect |\n| Telephone Company | Georgetown   | Telephones        |\n| Hospital          | Georgetown   | healthcare        |\n+-------------------+--------------+-------------------+\n3 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> update Public_Places set location='Kaieteur Falls' where name='Hospital';\nQuery OK, 1 row affected (0.15 sec)\nRows matched: 1  Changed: 1  Warnings: 0\nmysql> select * from Public_Places;\n+-------------------+----------------+-------------------+\n| name              | location       | service_provided  |\n+-------------------+----------------+-------------------+\n| Police Station    | Capital City   | serve and protect |\n| Telephone Company | Georgetown     | Telephones        |\n| Hospital          | Kaieteur Falls | healthcare        |\n+-------------------+----------------+-------------------+\n3 rows in set (0.00 sec)\nmysql> update Public_Places set name='GPF' where name='Police Station';\nQuery OK, 1 row affected (0.16 sec)The dele\nRows matched: 1  Changed: 1  Warnings: 0\nmysql> select * from Public_Places;\n+-------------------+----------------+-------------------+\n| name              | location       | service_provided  |\n+-------------------+----------------+-------------------+\n| GPF               | Capital City   | serve and protect |\n| Telephone Company | Georgetown     | Telephones        |\n| Hospital          | Kaieteur Falls | healthcare        |\n+-------------------+----------------+-------------------+\n3 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> delete from Public_Places where name='Hospital';\nQuery OK, 1 row affected (0.18 sec)\nmysql> select * from Public_Places;\n+-------------------+--------------+-------------------+\n| name              | location     | service_provided  |\n+-------------------+--------------+-------------------+\n| GPF               | Capital City | serve and protect |\n| Telephone Company | Georgetown   | Telephones        |\n+-------------------+--------------+-------------------+\n2 rows in set (0.01 sec)\nmysql>\n```", "```\nmysql> select * from myTable;\nERROR 1146 (42S02): Table 'netaccess.myTable' doesn't exist\nmysql>\n```", "```\nmysql> select * from Public_Places where name='GPF';\n+------+--------------+-------------------+\n| name | location     | service_provided  |\n+------+--------------+-------------------+\n| GPF  | Capital City | serve and protect |\n+------+--------------+-------------------+\n1 row in set (0.00 sec)\nmysql>\n```", "```\nmysql> select name from Public_Places group by name;\n+-------------------+\n| name              |\n+-------------------+\n| GPF               |\n| Telephone Company |\n+-------------------+\n2 rows in set (0.02 sec)\nmysql>\n```", "```\nmysql> select * from Public_Places order by service_provided;\n+-------------------+--------------+-------------------+\n| name              | location     | service_provided  |\n+-------------------+--------------+-------------------+\n| GPF               | Capital City | serve and protect |\n| Telephone Company | Georgetown   | Telephones        |\n+-------------------+--------------+-------------------+\n2 rows in set (0.02 sec)\nmysql>\n```", "```\nmysql> select * from Public_Places order by service_provided DESC;\n+-------------------+--------------+-------------------+\n| name              | location     | service_provided  |\n+-------------------+--------------+-------------------+\n| Telephone Company | Georgetown   | Telephones        |\n| GPF               | Capital City | serve and protect |\n+-------------------+--------------+-------------------+\n2 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> select * from Cust;\n+--------+-------------------------+--------------------+\n| custID | custName                | location           |\n+--------+-------------------------+--------------------+\n|      1 | Philip Inshanally       | Georgetown, Guyana |\n|      2 | Matthew Zach Inshanally | Georgetown, Guyana |\n+--------+-------------------------+--------------------+\n2 rows in set (0.03 sec)\nmysql> select * from Purchase;\n+---------+------------+-----------+\n| orderID | purchaseID | orderDate |\n+---------+------------+-----------+\n|       2 |   20150202 | 201800902 |\n|       1 |   10031984 |  20180310 |\n+---------+------------+-----------+\n2 rows in set (0.00 sec)\nmysql>\n```", "```\nmysql> SELECT Purchase.orderID, Cust.custName, Purchase.orderDate FROM Purchase INNER JOIN Cust ON Purchase.orderID=Cust.custID;\n+---------+-------------------------+-----------+\n| orderID | custName                | orderDate |\n+---------+-------------------------+-----------+\n|       1 | Philip Inshanally       |  20180310 |\n|       2 | Matthew Zach Inshanally | 201800902 |\n+---------+-------------------------+-----------+\n2 rows in set (0.01 sec)\nmysql>\n```"]