- en: Network Configuration and Troubleshooting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络配置和故障排除
- en: In the last chapter, we took quite an in-depth look into the world of Internet
    Protocol version 4 or IPv4, and Internet Protocol version 6 or (IPv6). In addition
    to this, we then covered subnet masks. After this, we covered subnetting. Finally,
    we worked with well-known protocols. We covered some of the most widely used protocols
    and their port numbers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们深入研究了IPv4或IPv4和IPv6或（IPv6）的世界。除此之外，我们还涵盖了子网掩码。之后，我们涵盖了子网划分。最后，我们使用了一些知名协议。我们涵盖了一些最常用的协议及其端口号。
- en: In this chapter, our focus moves into the configuration of IPv4 and IPv6\. First,
    we will work with ways of configuring an IPv4 address along with its subnet mask.
    Next, we will look at the routing table in a Linux system; particularly looking
    at configuring a static route, and ending with a default route configuration.
    This is then followed with the configuration of an IPv6 address inside a Linux
    system; followed by the routing table for IPv6\. This is then followed by configuring
    an IPv6 route; ending off with the configuration of a default route for IPv6\.
    After this, our focus switches over to the configuration of DNS; particularly,
    configuring DNS IP addresses pointing to DNS servers within a Linux environment.
    Finally, this chapter concludes with network troubleshooting; we look at various
    command-line tools that we can use in order to aid us in troubleshooting a potential
    connection related issue.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们的重点转向了IPv4和IPv6的配置。首先，我们将研究配置IPv4地址及其子网掩码的方法。接下来，我们将查看Linux系统中的路由表；特别是配置静态路由，最后是默认路由配置。然后是在Linux系统中配置IPv6地址；然后是IPv6的路由表。然后是配置IPv6路由；最后是配置IPv6的默认路由。之后，我们的重点转向DNS的配置；特别是在Linux环境中配置指向DNS服务器的DNS
    IP地址。最后，本章结束于网络故障排除；我们将研究各种命令行工具，以帮助我们解决潜在的连接问题。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: IPv4 configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPv4配置
- en: IPv6 configuration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPv6配置
- en: Client-side DNS
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端DNS
- en: Network troubleshooting
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络故障排除
- en: IPv4 configuration
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPv4配置
- en: There are various ways of configuring an IPv4 address within a Linux system.
    First, we can use a GUI utility to perform IPv4 configuration. Let's look at our
    Ubuntu 18 system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统中，有各种配置IPv4地址的方法。首先，我们可以使用GUI实用程序执行IPv4配置。让我们看看我们的Ubuntu 18系统。
- en: 'We can select the network icon and then select the drop-down arrow and select
    Wired Settings, as shown in the following screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择网络图标，然后选择下拉箭头，选择有线设置，如下截图所示：
- en: '![](img/00156.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00156.jpeg)'
- en: 'Awesome! Based on what we can see in the previous example, when we select Wired
    Settings, it will open up the Settings dialog box; after this, we should select
    the gear icon. This would then open network settings. In order to configure the
    IPv4 settings, we would select the IPv4 tab, as shown in the following screenshot:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据我们在上一个例子中所看到的，当我们选择有线设置时，它会打开设置对话框；之后，我们应该选择齿轮图标。然后会打开网络设置。为了配置IPv4设置，我们会选择IPv4选项卡，如下截图所示：
- en: '![](img/00157.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00157.jpeg)'
- en: 'Based on the previous example, we can see that the default method for the IPv4
    addressing is Automatic (DHCP); this means that the system is going to acquire
    its IPv4 addressing information via a server out on the network that is configured
    to issue IPv4 addressing information dynamically. For the purpose of demonstration,
    we want to assign our IPv4 address using the Manual method. After we have selected
    Manual, an Addresses field will appear, allowing us to enter the IPv4 addressing
    information, as can be seen in the following screenshot:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的例子，我们可以看到IPv4寻址的默认方法是自动（DHCP）；这意味着系统将通过网络上配置为动态分配IPv4寻址信息的服务器获取其IPv4寻址信息。为了演示目的，我们希望使用手动方法分配IPv4地址。在我们选择手动后，将出现一个地址字段，允许我们输入IPv4寻址信息，如下截图所示：
- en: '![](img/00158.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00158.jpeg)'
- en: 'Excellent! Based on the previous screenshot, we can see that we are given the
    opportunity to enter the IPv4 information. We''ve entered an IPv4 address; additionally,
    we will see a text box titled Netmask, this is another name for a subnet mask.
    Once we have finished entering the IPv4 address information, we would then select
    the Apply button. An important thing to keep in mind is the fact that we''re allowed
    to configure multiple IPv4 addresses on an interface. Yes! We can simply click
    inside the text box in the second row and enter an IPv4 address of our choice,
    as seen in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒！根据之前的截图，我们可以看到我们有机会输入IPv4信息。我们已经输入了一个IPv4地址；此外，我们会看到一个名为Netmask的文本框，这是子网掩码的另一个名称。一旦我们完成了输入IPv4地址信息，我们就会选择应用按钮。需要记住的一件重要事情是，我们可以在接口上配置多个IPv4地址。是的！我们可以简单地点击第二行的文本框并输入我们选择的IPv4地址，如下截图所示：
- en: '![](img/00159.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00159.jpeg)'
- en: Based on what we have seen in the previous example, as we enter the second IPv4
    address, another text box should appear in the third row; this would happen again
    if we were to enter an IPv4 address in the third row. Once we're satisfied with
    our configuration, we should then select the Apply button in order to save our
    changes. Another way to manage the IPv4 addressing is through the shell; we can
    add and remove IPv4 addresses using various commands at the command prompt.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在上一个例子中所看到的，当我们输入第二个IPv4地址时，第三行会出现另一个文本框；如果我们在第三行输入IPv4地址，这种情况会再次发生。一旦我们对配置满意，我们应该选择应用按钮以保存更改。管理IPv4寻址的另一种方法是通过shell；我们可以使用命令提示符处的各种命令添加和删除IPv4地址。
- en: The ifconfig command
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ifconfig命令
- en: 'The `ifconfig` command can be used to manage IPv4 addressing information at
    the command line. We can run the `ifconfig` command without any options and it
    will display only active interfaces, as seen in the following command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig`命令可以用于在命令行管理IPv4地址信息。我们可以运行`ifconfig`命令而不带任何选项，它将只显示活动接口，如下面的命令所示：'
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Based on what we have found in the preceding command, we see that the `ifconfig`
    utility is not installed in Ubuntu 18 by default; this can easily be remedied
    by running either the `apt` or `apt-get` command, as shown in the following example:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的命令中找到的信息，我们看到`ifconfig`实用程序在Ubuntu 18中默认没有安装；这可以通过运行`apt`或`apt-get`命令轻松解决，如下面的示例所示：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Some output has been omitted for brevity. Now we can run the `ifconfig` command
    once again, as shown in the following :'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，一些输出已被省略。现在我们可以再次运行`ifconfig`命令，如下所示：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Awesome! Based on what we have found in the preceding code, we can see that
    we get a wealth of information; particularly, that the IPv4 addressing is located
    in the `inet` section. We can filter through to display only the IPv4 addressing
    information, as shown in the following code:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据我们在前面的代码中找到的信息，我们可以看到我们获得了大量信息；特别是IPv4地址位于`inet`部分。我们可以通过筛选来显示只有IPv4地址信息，如下所示的代码：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Based on the previous code, we can see the IPv4 addressing information in addition
    to some IPv6\. We had previously configured two more IPv4 addresses; however,
    they''re not displayed because, by default, only the primary IPv4 address will
    be displayed. We will see in the next command how we can easily view those additional
    IPv4 addresses. In addition to viewing only active interfaces, we can also view
    inactive interfaces; we would pass the `-a` option, as shown in the following
    code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的代码，我们可以看到IPv4地址信息以及一些IPv6。我们之前配置了另外两个IPv4地址；然而，它们没有显示出来，因为默认情况下只会显示主要的IPv4地址。我们将在下一个命令中看到如何轻松查看这些额外的IPv4地址。除了查看活动接口，我们还可以查看非活动接口；我们将传递`-a`选项，如下面的代码所示：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Based on what we can see in the previous example, only one physical interface
    is on this system so the output is the same as running the `ifconfig` command
    without any option. Furthermore, we can choose which interface we want to be displayed
    using the `ifconfig` command; we would specify the interface as shown in the following
    code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中所看到的，这个系统上只有一个物理接口，所以输出与运行不带任何选项的`ifconfig`命令的输出相同。此外，我们可以选择要显示的接口，使用`ifconfig`命令；我们将指定接口，如下面的代码所示：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Awesome! This is useful in situations where the system may have a lot of interfaces
    and you''re only interested in a particular interface. We can assign an IPv4 address
    using the `ifconfig` command; we would simply pass the interface and the IPv4
    address, as shown in the following code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！这在系统可能有很多接口并且你只对特定接口感兴趣的情况下非常有用。我们可以使用`ifconfig`命令分配IPv4地址；我们只需传递接口和IPv4地址，如下面的代码所示：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Based on what we have found in the preceding code, we can see that the primary
    IPv4 address has been changed to the IPv4 address we specified. So what if we
    did not want to remove the previous IPv4 address? We can satisfy this requirement
    by creating an alias interface; it''s merely a logical interface. We would then
    assign the second IPv4 address onto the alias interface. Here is how we would
    accomplish this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的代码中找到的信息，我们可以看到主要的IPv4地址已经更改为我们指定的IPv4地址。那么如果我们不想删除先前的IPv4地址呢？我们可以通过创建一个别名接口来满足这个要求；它只是一个逻辑接口。然后我们将第二个IPv4地址分配到别名接口上。这是我们将如何完成这个任务的方式：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Excellent! Based on the that, we can now see that we''ve got the original IPv4
    on the physical interface in addition to the creation of an alias interface that
    has the secondary IPv4 address. A point to note is the fact that when we specified
    the IPv4 address for the alias interface, we did not specify any subnet mask.
    The system auto-detected the subnet mask based on the first octet; the subnet
    mask was set to a Class B subnet mask of `255.255.0.0` or `/16`. We can remedy
    this by either removing the IPv4 address and then adding the IPv4 address with
    the subnet mask in CIDR notation, as shown in the following code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！基于此，我们现在可以看到我们在物理接口上有原始的IPv4地址，另外还创建了一个具有次要IPv4地址的别名接口。需要注意的是，当我们为别名接口指定IPv4地址时，我们没有指定任何子网掩码。系统根据第一个八位自动检测了子网掩码；子网掩码设置为`255.255.0.0`或`/16`的B类子网掩码。我们可以通过删除IPv4地址然后以CIDR表示法添加带有子网掩码的IPv4地址来解决这个问题，如下面的代码所示：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Great job! Based on what we have found in the preceding code, in order to remove
    the IPv4 address, we could disable the interface by typing `down`. We should then
    add the IPv4 address with the subnet mask in CIDR notation. Added to this, the
    broadcast address was set for us and the system calculated the broadcast address
    based on the subnet mask. However, we can set the broadcast using the `ifconfig`
    command, and thus we would pass the `broadcast` option, as shown in the following
    example:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！根据我们在前面的代码中找到的信息，为了删除IPv4地址，我们可以通过输入`down`来禁用接口。然后我们应该以CIDR表示法添加带有子网掩码的IPv4地址。除此之外，广播地址已经为我们设置好了，系统根据子网掩码计算了广播地址。然而，我们可以使用`ifconfig`命令设置广播，因此我们将传递`broadcast`选项，如下面的示例所示：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Based on what we have found in the preceding code, we can see that the broadcast
    address was changed using the address which we supplied. Let''s fix this by changing
    it back to its correct broadcast address, as shown in the following example:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的代码中找到的信息，我们可以看到广播地址已经被我们提供的地址改变了。让我们通过将其改回正确的广播地址来修复这个问题，如下面的示例所示：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Another way to remove the IPv4 address, is to pass the `del` option with the
    `ifconfig` command, as shown in the following example:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 删除IPv4地址的另一种方法是使用`ifconfig`命令传递`del`选项，如下面的示例所示：
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Awesome! In the previous example, we saw that the IPv4 address was removed
    successfully. When we''ve finished working with the alias, we can remove its configuration
    by passing the `down` option as seen in the following code:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的例子中，我们看到IPv4地址已成功删除。当我们完成与别名的工作时，可以通过传递`down`选项来删除其配置，如下面的代码所示：
- en: '[PRE12]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Excellent! Looking at the previous example, we can see that the interface is
    no longer recognized with the `ifconfig` command.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！从前面的例子中可以看出，接口在`ifconfig`命令中不再被识别。
- en: The ifup command
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ifup命令
- en: The `ifup` command is used to bring up or enable an interface. The interface
    is then able to send and receive packets.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifup`命令用于启动或启用接口。然后，接口就能够发送和接收数据包。'
- en: 'However, only interfaces which are listed in `/etc/network/interfaces` are
    recognized by the `ifup` command. Let''s shut down the `ens33` interface and use
    the `ifup` command to bring back up the `ens33` interface. Here is how we would
    do this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，只有列在`/etc/network/interfaces`中的接口才会被`ifup`命令识别。让我们关闭`ens33`接口，并使用`ifup`命令重新启动`ens33`接口。这是我们将如何做到这一点：
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Based on what we have seen in the previous example, the `ifup` does not recognize
    the `ens33` interface. This is due to the fact that the `ens33` interface is not
    listed in the `/etc/network/interfaces`. We can add this entry and then it will
    work with the `ifup` command. This can be seen in the following example:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的例子中看到的，`ifup`不会识别`ens33`接口。这是因为`ens33`接口没有列在`/etc/network/interfaces`中。我们可以添加这个条目，然后它将与`ifup`命令一起工作。这可以在下面的例子中看到：
- en: '[PRE14]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Excellent! Based on what we have seen in the previous example, the `ifup` command
    has successfully brought up the `ens33` interface. Moreover, the IPv4 address
    which was assigned was the IPv4 address which we configured via the GUI network
    settings.In Ubuntu 18, by default all of the network settings are handled by the
    network-manager service; whenever we make a change via the command prompt, if
    the system is restarted or the network-manager service is restarted, then all
    of changes via the command prompt are lost and only changes that reside in the
    `network-manager.service` are used. To work around  this we would to stop the
    `network-manger.service` and then disable the network-manager service. Be aware
    that doing this could leave your system without connectivity if you don't save
    the changes for your network settings in the `/etc/network/interfaces` (these
    include the IP, subnet mask default gateway, DNS and IPs) for the Ubuntu 18 system.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据我们在前面的例子中看到的，`ifup`命令成功地启动了`ens33`接口。此外，分配的IPv4地址是我们通过GUI网络设置配置的IPv4地址。在Ubuntu
    18中，默认情况下所有的网络设置都由network-manager服务处理；每当我们通过命令提示符进行更改，如果系统重新启动或者network-manager服务重新启动，那么通过命令提示符进行的所有更改都会丢失，只有`network-manager.service`中的更改才会被使用。为了解决这个问题，我们需要停止`network-manger.service`，然后禁用network-manager服务。请注意，如果您没有在Ubuntu
    18系统的`/etc/network/interfaces`中保存网络设置的更改（包括IP、子网掩码默认网关、DNS和IP），这样做可能会导致系统失去连接。
- en: Do not stop the `network-manager.service` unless you're sure that you've saved
    the network configuration in the `/etc/network/interfaces` file.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您确定已经将网络配置保存在`/etc/network/interfaces`文件中，否则不要停止`network-manager.service`。
- en: The ifdown command
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ifdown命令
- en: 'The `ifdown` command can be used to bring down or disable an interface; again,
    only interfaces that are listed in the `/etc/network/interfaces` are recognized.
    Let''s bring down the `ens33` interface using the `ifdown` command, as seen in
    the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifdown`命令可用于关闭或禁用接口；同样，只有列在`/etc/network/interfaces`中的接口才会被识别。让我们使用`ifdown`命令关闭`ens33`接口，如下面的代码中所示：'
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Awesome! In the previous example, the `ifdown` command successfully brought
    down the `ens33` interface due to the fact that we added the `ens33` interface
    inside the `/etc/network/interfaces` file.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的例子中，`ifdown`命令成功地关闭了`ens33`接口，因为我们将`ens33`接口添加到了`/etc/network/interfaces`文件中。
- en: The ip command
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ip命令
- en: 'The `ip` command is far more scalable than the `ifconfig` command. For instance,
    we can view all of the secondary IPv4 addresses that are configured on every interface
    with the ip command. Without any option, the `ip` command will display the options
    that can be used; this can be seen in the following example:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip`命令比`ifconfig`命令更具可扩展性。例如，我们可以使用ip命令查看在每个接口上配置的所有次要IPv4地址。没有任何选项，`ip`命令将显示可以使用的选项；这可以在下面的例子中看到：'
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Based on the previous example, we can see a number of options that can be passed;
    one such option is the `a` option. This displays all of the addressing information,
    as seen in the following code:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的例子，我们可以看到可以传递一些选项；其中一个选项是`a`选项。这会显示所有的寻址信息，就像下面的代码中所示：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Awesome! Looking at the previous example, right away we can see multiple IPv4
    addresses for the `ens33` interface. We can add an IPv4 address using the `ip`
    command; we would pass the `add` option, as can be seen in the following code:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！从前面的例子中可以立即看到`ens33`接口有多个IPv4地址。我们可以使用`ip`命令添加IPv4地址；我们将传递`add`选项，如下面的代码中所示：
- en: '[PRE18]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Excellent! So now we can see that the IPv4 address has been added. Similarly,
    we can remove and IPv4 address; we would pass the `del` option, as can be seen
    in the following code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在我们可以看到IPv4地址已经添加了。同样，我们也可以删除IPv4地址；我们会传递`del`选项，就像下面的代码中所示：
- en: '[PRE19]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Based on that, we can see that the IPv4 address that we specified with the
    `del` option, has been removed. Also, we used `show` option, this enabled us to
    specify the interface that we''re interested in seeing. It is also possible to
    specify a broadcast address similar to the `ifconfig` command. To do this, we
    would pass either the `brd` or `broadcast` option, as shown in the following example:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此，我们可以看到我们使用`del`选项指定的IPv4地址已被删除。此外，我们使用了`show`选项，这使我们能够指定我们感兴趣的接口。类似于`ifconfig`命令，也可以指定广播地址。为此，我们将传递`brd`或`broadcast`选项，如下例所示：
- en: '[PRE20]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Excellent! Based on the previous example, we can see that the broadcast address
    has been assigned for the IPv4 address. Added to this, it possible to shut down
    or enable an interface with the `ip` command. To do this, we would use pass the
    `link` option of the `ip` command, as can be seen in the following code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据先前的例子，我们可以看到为IPv4地址分配了广播地址。此外，可以使用`ip`命令关闭或启用接口。为此，我们将使用`ip`命令的`link`选项，如下代码所示：
- en: '[PRE22]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'By looking at the previous example, we can see that the link has been brought
    down. Similarly, we can bring up an interface by passing the `up` option, as seen
    in the following code:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看先前的例子，我们可以看到链接已经断开。同样，我们可以通过传递`up`选项来启动接口，如下代码所示：
- en: '[PRE23]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Awesome! Based on the previous example, we can see that the interface was brought
    back up. We can also work with an alias using the IP command; we would pass the
    `a` or `add` option with the `ip` command. This can be seen in the following code:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据先前的例子，我们可以看到接口已经重新启动。我们也可以使用IP命令来处理别名；我们将通过`ip`命令传递`a`或`add`选项。这可以在下面的代码中看到：
- en: '[PRE24]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Awesome! Based on the previous example, we can see the alias being listed under
    `ens33` with the `ip` command. However, when we use the `ifconfig` command, we
    see the `ens33:1` listed as a separate logical interface. Once we''ve finished
    using the alias, we can remove the alias by passing the `del` option with the
    `ip` command, as shown in the following example:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据先前的例子，我们可以看到别名在`ens33`下使用`ip`命令列出。然而，当我们使用`ifconfig`命令时，我们会看到`ens33:1`被列为一个单独的逻辑接口。一旦我们完成使用别名，可以通过在`ip`命令中传递`del`选项来删除别名，如下例所示：
- en: '[PRE25]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Some output as been omitted for brevity. Based the previous example, we can
    see that the alias interface has been removed. In environments where the network
    is using VLANs or Virtual LANs, it is possible to create sub-interfaces that can
    map to a VLAN, effectively making the Linux system able to handle VLAN traffic
    that is tagged. You would need to configure the network switch to tag the traffic,
    which will then send the traffic inside the VLAN to the Linux system. The link
    between the Linux system and the switch is then treated as a `trunk` port because
    it can send multiple VLANs across its physical link, and the Linux system can
    handle the traffic because it is aware of the VLANs that we create. We would use
    the `ip link` with the `add` option. Here is how we would create a sub-interface
    and map it to a VLAN:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁起见，一些输出已被省略。根据先前的例子，我们可以看到别名接口已被删除。在网络使用VLAN或虚拟局域网的环境中，可以创建映射到VLAN的子接口，从而使Linux系统能够处理标记的VLAN流量。您需要配置网络交换机以标记流量，然后将流量发送到Linux系统中的VLAN。Linux系统和交换机之间的链接被视为`trunk`端口，因为它可以通过其物理链接发送多个VLAN，并且Linux系统可以处理流量，因为它知道我们创建的VLAN。我们将使用`ip
    link`和`add`选项。以下是我们如何创建一个子接口并将其映射到VLAN：
- en: '[PRE26]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Excellent! Based on what we have seen in the previous example, the interface
    was created and is being treated as a separate interface. To check this out, we
    can assign an IPv4 address just as we would a physical interface, as shown in
    the following example:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据我们在先前的例子中看到的，接口已经创建，并且被视为一个独立的接口。为了检查这一点，我们可以像为物理接口一样分配IPv4地址，如下例所示：
- en: '[PRE27]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Awesome! The last step would be to bring up the interface. To do this, we would
    pass the `up` option to the `ip link` command, as shown in the following code:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！最后一步是启动接口。为此，我们将通过`ip link`命令传递`up`选项，如下代码所示：
- en: '[PRE28]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Based on the previous example, we can see that the sub-interface that maps
    to VLAN 100 is now up. We can make add and remove IP addressing information similar
    to that of a physical interface. When we''ve finished working with the sub-interface,
    we can remove it by passing the `del` option to the `ip link` command, as shown
    in the following example:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 基于先前的例子，我们可以看到映射到VLAN 100的子接口现在已经启动。我们可以添加和删除IP地址信息，类似于物理接口。当我们完成对子接口的操作后，可以通过在`ip
    link`命令中传递`del`选项来删除它，如下例所示：
- en: '[PRE29]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Wonderful! Looking at that example, we can see that the sub-interface is no
    longer present. Another useful purpose of the `ip` command is the ability to view
    the statistics of an interface. We would pass the `-s` and the `ls` option with
    the `ip link` command, as shown in the following code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！通过查看该示例，我们可以看到子接口不再存在。`ip`命令的另一个有用用途是查看接口的统计信息。我们将通过`ip link`命令传递`-s`和`ls`选项，如下代码所示：
- en: '[PRE30]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Based on the previous example, we can see statistics regarding packets received
    and transmitted; we can even see frame, missed, and CRC errors by adding another
    `-s` option to the current command, as shown in the following code:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 根据先前的例子，我们可以看到关于接收和发送的数据包统计；通过向当前命令添加另一个`-s`选项，我们甚至可以看到帧、丢失和CRC错误，如下代码所示：
- en: '[PRE31]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Excellent! Based on the previous example, we can see counters pertaining to
    CRC, frames, and so on.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据先前的例子，我们可以看到与CRC、帧等相关的计数器。
- en: Configuring IPv4 routing
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置IPv4路由
- en: 'So far, we''ve been assigning IPv4 addressing information but we''ve not specified
    any type of routing information. We can view the current routing table by using
    a number of commands. For instance, we can use the `route` command to display
    the routing table, as shown in the following example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在分配IPv4地址信息，但没有指定任何类型的路由信息。我们可以使用多个命令查看当前的路由表。例如，我们可以使用`route`命令显示路由表，如下例所示：
- en: '[PRE32]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Based on what we have seen in the previous example, only connected routes that
    map to the configured IPv4 addresses are displayed. It is also possible to display
    the routing table using the `ip` command; we would pass the `route` option, as
    shown in the following command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在先前的例子中看到的，只显示与配置的IPv4地址相对应的连接路由。还可以使用`ip`命令显示路由表；我们将传递`route`选项，如下命令所示：
- en: '[PRE33]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Based on the previous example, we can see similar information to that of the
    route command. Another command that can be used to print the routing table is
    the `netstat` command; to do this, we would pass the `-r` option, as shown in
    the following example:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的例子，我们可以看到与route命令类似的信息。另一个可以用来打印路由表的命令是`netstat`命令；为了做到这一点，我们会传递`-r`选项，就像下面的例子中所示的那样。
- en: '[PRE34]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Great job! In the previous example, the routing table has been printed once
    again. We have not configured a default route; a default route is used for reaching
    hosts who are not on the same subnet, or who reside outside of the LAN. We will
    use the `ip route` command with the `add` and `default` options to define a default
    route. The following example shows how this would look:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！在前面的例子中，路由表再次被打印出来。我们还没有配置默认路由；默认路由用于到达不在同一子网上的主机，或者在LAN外部的主机。我们将使用`ip route`命令并传递`add`和`default`选项来定义一个默认路由。下面的例子展示了这是什么样子：
- en: '[PRE35]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Awesome! Based on the previous example, we can see that a default route has
    been added. When we ran the `route` command, we saw the word `_gateway` instead
    of the IPv4 address; we can pass the `-n` option to view the numerical value of
    the default gateway. The following example demonstrates this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的例子，我们可以看到已经添加了一个默认路由。当我们运行`route`命令时，我们看到了`_gateway`这个词，而不是IPv4地址；我们可以传递`-n`选项来查看默认网关的数值。下面的例子演示了这一点：
- en: '[PRE36]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Excellent! We can also create a static route by specifying the subnet that
    we are trying to reach. Here is how we would accomplish this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们还可以通过指定我们要到达的子网来创建一个静态路由。下面是我们如何做到这一点的：
- en: '[PRE37]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Excellent! Based on the previous example, we can now see the static route added
    for the `10.20.0.0/24` subnet via `172.16.30.1`. When we no longer desire a route,
    we can remove it using the `ip route` command with the `del` option, as shown
    in the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的例子，我们现在可以看到为`10.20.0.0/24`子网添加的静态路由，通过`172.16.30.1`。当我们不再需要一个路由时，我们可以使用`ip
    route`命令并传递`del`选项来删除它，就像下面的命令中所示的那样。
- en: '[PRE38]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: As we can see in the previous example, the static route for `10.20.0.0/24` is
    no longer present in our routing table.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的例子中所看到的，`10.20.0.0/24`的静态路由不再存在于我们的路由表中。
- en: IPv6 configuration
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPv6配置
- en: 'We can configure IPv6 addressing information in a similar way to that used
    for IPv4\. To view only IPv6 addresses, we can use the `ip` command and pass the
    `-6` option, as shown in the following command:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以以与IPv4相似的方式配置IPv6寻址信息。为了只查看IPv6地址，我们可以使用`ip`命令并传递`-6`选项，就像下面的命令中所示的那样。
- en: '[PRE39]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Based on the previous example, we can see only IPv6 information, particularly
    the link-local address, which starts with `fe80`. We can add an IPv6 address using
    the `ip` command. We would add an IPv6 address in the following way:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的例子，我们只能看到IPv6信息，特别是以`fe80`开头的链路本地地址。我们可以使用`ip`命令添加一个IPv6地址。我们将以以下方式添加IPv6地址：
- en: '[PRE41]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Excellent! In the previous example, we can see that the IPv6 address was assigned
    to the `ens33` interface. Also, we could use the `ifconfig` command to display
    the IPv6 addressing information, as shown in the following example:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的例子中，我们可以看到IPv6地址被分配给了`ens33`接口。此外，我们可以使用`ifconfig`命令来显示IPv6寻址信息，就像下面的例子中所示的那样：
- en: '[PRE42]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Looking at the previous example, we can see the IPv6 information in the `inet6`
    section. It is also possible to configure multiple IPv6 addresses; we would simply
    use the `ip` with `-6` command, as shown in the following command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的例子中可以看到，在`inet6`部分中有IPv6信息。也可以配置多个IPv6地址；我们只需使用带有`-6`的`ip`命令，就像下面的命令中所示的那样。
- en: '[PRE43]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Based on that example, we can see that the second IPv6 address has been added.
    When we no longer need an IPv6 address, we can pass the `del` option with the
    `ip` command, as shown in the following example:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 根据那个例子，我们可以看到第二个IPv6地址已经被添加。当我们不再需要一个IPv6地址时，我们可以使用`ip`命令并传递`del`选项，就像下面的例子中所示的那样。
- en: '[PRE44]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Excellent! In the previous example, the IPv6 address was removed, which we specified
    with the `del` option.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的例子中，我们删除了IPv6地址，这是我们用`del`选项指定的。
- en: Configuring IPv6 routing
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置IPv6路由
- en: 'We''ve looked at the IPv4 routing table but there is also an IPv6 routing table.
    We can use the same `ip route` command with the `-6` option, as shown in the following
    example:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经查看了IPv4路由表，但也有一个IPv6路由表。我们可以使用相同的`ip route`命令和`-6`选项，就像下面的例子中所示的那样。
- en: '[PRE45]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'As we have seen in the previous example, only the IPv6 routing information
    is being displayed. There is currently no default gateway configured for IPv6
    in this system. We can fix this by using the `ip route` command and passing the
    `-6` and `add` options, as shown in the following example:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们只显示了IPv6路由信息。目前在这个系统中没有配置IPv6的默认网关。我们可以使用`ip route`命令并传递`-6`和`add`选项来修复这个问题，就像下面的例子中所示的那样。
- en: '[PRE46]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Awesome! In the previous example, we can see that a default route was added
    for IPv6\. We can also see the IPv6 routing information using the route command;
    we would pass the `-6` option, as shown in the next example:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的例子中，我们可以看到为IPv6添加了一个默认路由。我们还可以使用route命令查看IPv6路由信息；我们会传递`-6`选项，就像下一个例子中所示的那样。
- en: '[PRE47]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Excellent! Based on the previous example, we can see the IPv6 address of the
    default gateway. It is also possible to configure a static route for an IPv6 subnet,
    which is on a different IPv6 subnet, or outside the LAN. Here is how we would
    add a static route for an IPv6 subnet:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的例子，我们可以看到默认网关的IPv6地址。我们也可以为一个不同的IPv6子网或LAN外的IPv6子网配置静态路由。下面是我们如何为一个IPv6子网添加静态路由的：
- en: '[PRE48]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Great job! In the previous example, you can see that we''ve added a static
    route for an IPv6 subnet. Similarly, we can remove a static route for an IPv6
    subnet by passing the `del` option with the `ip route` command, as shown in the
    following example:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！在前面的例子中，你可以看到我们为一个IPv6子网添加了一个静态路由。同样，我们可以通过在`ip route`命令中传递`del`选项来删除一个IPv6子网的静态路由，就像下面的例子中所示的那样。
- en: '[PRE49]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Excellent!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: Client-side DNS
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端DNS
- en: 'Up to this point, we''ve assigned addressing information (IPv4 & IPv6) in our
    system for connectivity on the network. However, in order for us to be able to
    browse the internet, we''re going to have to configure DNS  in the system; particularly,
    we need to tell the Linux system which DNS server to use when attempting to go
    out to the internet. As we''ve seen earlier in this chapter, there are various
    text boxes that we can fill out for IPv4, IPv6, gateway and DNS information using
    a GUI utility. Here, we will look at configuring the DNS information at the command
    prompt; particularly the `/etc/resolv.conf` file. Here is the content of the `/etc/resolv.conf`
    file:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经在系统中为网络连接分配了寻址信息（IPv4和IPv6）。然而，为了能够浏览互联网，我们需要在系统中配置DNS；特别是，我们需要告诉Linux系统在尝试连接到互联网时使用哪个DNS服务器。正如我们在本章前面看到的，我们可以使用各种文本框来填写IPv4、IPv6、网关和DNS信息，使用GUI实用程序。在这里，我们将看看如何在命令提示符下配置DNS信息；特别是`/etc/resolv.conf`文件。以下是`/etc/resolv.conf`文件的内容：
- en: '[PRE50]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Some output has been omitted for brevity. As can be seen in the previous example,
    the format for defining DNS server in Ubuntu 18 is as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁起见，一些输出已被省略。正如在前面的示例中所看到的，Ubuntu 18中定义DNS服务器的格式如下：
- en: '[PRE51]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Based on that code, we can specify our DNS server IPs in this file. Let''s
    see if we can browse the internet, as shown in the following screenshot:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这段代码，我们可以在此文件中指定我们的DNS服务器IP。让我们看看是否可以浏览互联网，如下面的屏幕截图所示：
- en: '![](img/00160.jpeg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00160.jpeg)'
- en: 'Based on what we have seen in the previous example, we''re unable to reach
    out onto the internet. Let''s put in a DNS server''s IP address inside `/etc/resolv.conf`
    by using an editor such as vi or nano; the following entry is what we want to
    put in:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们无法连接到互联网。让我们使用vi或nano等编辑器在`/etc/resolv.conf`中放入DNS服务器的IP地址；以下条目是我们要放入的：
- en: '[PRE52]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'As we have seen in the previous example, we''ve added a DNS entry. Now, when
    we refresh the page, we will see the content start to populate the page as shown
    in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的示例中看到的，我们已经添加了一个DNS条目。现在，当我们刷新页面时，我们将看到内容开始填充页面，如下面的屏幕截图所示：
- en: '![](img/00161.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00161.jpeg)'
- en: 'Excellent! We can also create local DNS entries for local name resolution inside
    the `/etc/hosts` file. Here is the content of the `/etc/hosts file`:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们还可以在`/etc/hosts`文件中为本地名称解析创建本地DNS条目。以下是`/etc/hosts`文件的内容：
- en: '[PRE53]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'We could edit this file and add an entry for the Fedora 28 system using a text
    editor such as vi or nano. Here is a sample entry that we have add to:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以编辑此文件，并使用vi或nano等文本编辑器为Fedora 28系统添加条目。以下是我们添加的示例条目：
- en: '[PRE54]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Awesome! Now we would be able to meet the Fedora 28 system by using either
    its IP address or its name, as shown in the following example:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在我们可以通过IP地址或名称访问Fedora 28系统，如下例所示：
- en: '[PRE55]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Excellent!
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: Network troubleshooting
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络故障排除
- en: We can use a number of tools to aid us in troubleshooting a network connection
    issue, ranging from GUI utilities to command-line tools. Our focus will be troubleshooting
    using the command-line tools available to us.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用多种工具来帮助我们解决网络连接问题，从GUI实用程序到命令行工具。我们的重点将是使用可用的命令行工具进行故障排除。
- en: The ping command
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ping命令
- en: 'The `ping` utility uses the ICMP protocol to send out requests and receive
    replies. We can use the ping utility to test for basic reachability between systems
    locally or out on the internet. The basic syntax for the ping utility is:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`实用程序使用ICMP协议发送请求并接收回复。我们可以使用`ping`实用程序测试系统之间的基本可达性，无论是本地还是互联网上。`ping`实用程序的基本语法如下：'
- en: '[PRE56]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Based on what we have seen in the previous example, we can now try out the
    `ping` utility, as shown in the following example:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，现在我们可以尝试使用`ping`实用程序，如下例所示：
- en: '[PRE57]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: As we have seen in the previous example, the `ping` utility will run until it
    is stopped by the user using *CTRL* + *C*; this is different in a Windows environment,
    where only four ICMP echo request/replies are seen.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的示例中看到的，`ping`实用程序将一直运行，直到用户使用*CTRL* + *C*停止；这在Windows环境中是不同的，那里只能看到四个ICMP回显请求/回复。
- en: The ping6 command
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ping6命令
- en: 'It is also possible to test for potential connectivity issues for IPv6\. We
    would use the `ping6` command; the syntax for the `ping6` command is as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以测试IPv6的潜在连接问题。我们将使用`ping6`命令；`ping6`命令的语法如下：
- en: '[PRE58]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Based on what we have seen in the previous example, we would simply need to
    specify either the DNS name or IPv6 address of the target system. Here is how
    we use the `ping6` command:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们只需要指定目标系统的DNS名称或IPv6地址。以下是如何使用`ping6`命令：
- en: '[PRE59]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Awesome!
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: The traceroute command
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: traceroute命令
- en: 'We can use the `traceroute` command to test for potential connectivity issues.
    The `traceroute` command displays each device that is on the path of the destination
    system; each device is considered a `hop`. The basic syntax for the `traceroute`
    is as follows:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`traceroute`命令来测试潜在的连接问题。`traceroute`命令显示了通往目标系统的每个设备；每个设备被视为一个“跳跃”。`traceroute`的基本语法如下：
- en: '[PRE60]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'You can see that we simply need to specify either the DNS name or IPv4 address
    of the target system. This is shown in the following example:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，我们只需要指定目标系统的DNS名称或IPv4地址。如下例所示：
- en: '[PRE61]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'As we have seen in the previous example, the `traceroute` utility is not installed
    by default in Ubuntu 18; we quickly remedied this by installing the `inetutils-traceroute`
    package. Now let''s try to run the `traceroute` command once again, as shown in
    the following example:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的示例中看到的，`traceroute`实用程序在Ubuntu 18中默认未安装；我们通过安装`inetutils-traceroute`软件包迅速解决了这个问题。现在让我们再次尝试运行`traceroute`命令，如下例所示：
- en: '[PRE62]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Awesome! Based on the previous example, we can see that the device is one hop
    away from the Ubuntu system.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的示例，我们可以看到设备距离Ubuntu系统只有一跳。
- en: The traceroute6 command
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: traceroute6命令
- en: 'It is also possible to test for a potential bottleneck between systems for
    IPv6 using the `traceroute6` command. The basic syntax for the `traceroute6` command
    is as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用`traceroute6`命令来测试IPv6系统之间的潜在瓶颈。`traceroute6`命令的基本语法如下：
- en: '[PRE63]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Based on what we have seen in the previous example, we would simply specify
    either the DNS name or IPv6 address of the target system. The following example
    shows how we would use the `traceroute6` command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们只需指定目标系统的DNS名称或IPv6地址。以下示例显示了如何使用`traceroute6`命令：
- en: '[PRE64]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: So we can see that the `traceroute6` command works in a similar way to that
    of the `traceroute` command.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以看到`traceroute6`命令的工作方式与`traceroute`命令类似。
- en: The netstat command
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: netstat命令
- en: 'We can use the `netstat` command to troubleshoot a number of different issues.
    We''ve seen earlier in this chapter, when we covered routing, that we needed to
    pass the `-r` option to view the routing table. Well, we can also use the `netstat`
    command to view active connections. This is especially useful in server environments
    when we are running various programs utilizing various ports; these ports could
    be either TCP or UDP ports. We can pass the `-n` option, which shows numerical
    address(s); the `-t` option, which shows TCP connections; the `-l`, which shows
    what sockets are listening; and the `-p` option, which shows the program ID and
    program name. These options work well together when trying to narrow down your
    TCP ports. Here is how this would look for TCP:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`netstat`命令来排除许多不同的问题。在本章的前面部分，当我们讨论路由时，我们需要传递`-r`选项来查看路由表。我们还可以使用`netstat`命令来查看活动连接。这在服务器环境中特别有用，当我们运行利用各种端口的各种程序时；这些端口可以是TCP端口或UDP端口。我们可以传递`-n`选项，显示数字地址；`-t`选项，显示TCP连接；`-l`选项，显示正在监听的套接字；`-p`选项，显示程序ID和程序名称。在尝试缩小TCP端口范围时，这些选项可以很好地配合使用。以下是TCP的示例：
- en: '![](img/00162.jpeg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00162.jpeg)'
- en: 'Excellent! Looking at the previous example, we can see a number of programs
    running, including `dns`, `sshd`, `ryslogd`, to name a few. Similarly, we can
    view UDP connections; we would pass the `nulp` options. The `-u` means UDP, as
    shown in the following example:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！从前面的示例中可以看出，有许多程序在运行，包括`dns`、`sshd`、`ryslogd`等。同样，我们可以查看UDP连接；我们将传递`nulp`选项。`-u`表示UDP，如以下示例所示：
- en: '![](img/00163.jpeg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00163.jpeg)'
- en: Excellent! Looking at the previous example, we can see quite a few services
    listening for connection, the `systemd-resolve` (port `53`) being one of them.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！从前面的示例中可以看出，有很多服务在等待连接，其中`systemd-resolve`（端口`53`）就是其中之一。
- en: The tracepath command
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: tracepath命令
- en: 'The `tracepath` command is another method for testing potential bottlenecks
    between systems. It works in a similar way to the `traceroute` command. The basic
    syntax for the `tracepath` command is as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`tracepath`命令是测试系统之间潜在瓶颈的另一种方法。它的工作方式类似于`traceroute`命令。`tracepath`命令的基本语法如下：'
- en: '[PRE65]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Based on what we have seen in the previous example, we would simply need to
    specify either the DNS name or IPv4 address in order to use the `tracepath` command.
    This is shown in the following command:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们只需指定目标系统的DNS名称或IPv4地址，即可使用`tracepath`命令。以下命令显示了这一点：
- en: '[PRE66]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: In the previous example, the `pmtu` or `Path MTU` is shown in addition to number
    of hop(s) to the destination device.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，除了到目标设备的跳数之外，还显示了`pmtu`或`Path MTU`。
- en: The tracepath -6 command
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: tracepath -6命令
- en: 'Similar to the `tracepath` command, `tracepath` with the `-6` option is another
    method for testing potential bottlenecks between systems using IPv6 addressing.
    The basic syntax for the `tracepath` with the `-6` option is as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 与`tracepath`命令类似，带有`-6`选项的`tracepath`是使用IPv6地址测试系统之间潜在瓶颈的另一种方法。`tracepath`带有`-6`选项的基本语法如下：
- en: '[PRE67]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Based on what we have seen in the previous example, we would simply need to
    specify either the DNS name or IPv6 address in order to use `tracepath` with the
    `-6` option. This is shown in the following example:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们只需指定目标系统的DNS名称或IPv6地址，即可使用带有`-6`选项的`tracepath`。以下示例显示了这一点：
- en: '[PRE68]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Excellent! Based on what we have seen in the previous example, we can see that
    the `tracepath` with the `-6` option works in a similar way to the `tracepath`
    command for IPv4.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据我们在前面的示例中看到的，我们可以看到带有`-6`选项的`tracepath`命令与IPv4的`tracepath`命令的工作方式类似。
- en: The nmap command
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: nmap命令
- en: The Network Mapper, or nmap, can also troubleshoot potential connection issues
    by using the `nmap` command; this command scans a given system and displays services
    and their respective port numbers which are open for the system specified with
    the `nmap` command.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 网络映射器（nmap）也可以使用`nmap`命令来排除潜在的连接问题；此命令扫描给定系统并显示为`nmap`命令指定的系统开放的服务及其相应的端口号。
- en: 'The basic syntax for the `nmap` command is as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`命令的基本语法如下：'
- en: '[PRE69]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Based on what we have seen in the previous example, we would specify the option
    and the IP of the destination system that we are troubleshooting as shown in the
    following example:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在前面的示例中看到的，我们会在以下示例中指定选项和目标系统的IP，这是我们正在进行故障排除的目标系统：
- en: '[PRE70]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Excellent! Based on the previous example, we can see which service and their
    respective port number is running on the destination system. The `-A` option is
    used to display OS and version detection; the `-T4` option is used for faster
    execution. You should seek permission from the owner or administrator of the destination
    system or network prior to running the `nmap` command; this is true especially
    in corporate environments where there are policies governing the use of a given
    network.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的示例，我们可以看到目标系统上正在运行的服务及其相应的端口号。`-A`选项用于显示OS和版本检测；`-T4`选项用于加快执行速度。在运行`nmap`命令之前，您应该征得目标系统或网络的所有者或管理员的许可；尤其是在有规定使用给定网络的公司环境中。
- en: Always seek permission before performing any kind of port scans in a network.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络中执行任何类型的端口扫描之前，始终寻求许可。
- en: The dig command
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dig命令
- en: 'So far, we''ve looked at ways of troubleshooting connectivity issues, but DNS
    issues could pose a risk too. We can use the `dig` utility to perform DNS lookups
    for a given domain. The basic syntax for the `dig` command is as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看过了解决连接问题的方法，但DNS问题也可能带来风险。我们可以使用`dig`实用程序来执行给定域的DNS查找。`dig`命令的基本语法如下：
- en: '[PRE71]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: As you can see, we simply specify the domain that we want to perform a lookup
    against.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们只需指定要执行查找的域。
- en: 'Here is how we would perform a simple lookup:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们执行简单查找的方法：
- en: '[PRE72]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Excellent! Based on the previous example, we can see the DNS record for the
    given domain; in particular we can see the `A` records. The server that answered
    our query is `8.8.8.8`, which we configured in the `/etc/resolv.conf`. However,
    we can use a different DNS server by passing the `@` with the `dig` command, as
    shown in the following example:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的示例，我们可以看到给定域的DNS记录；特别是我们可以看到`A`记录。回答我们查询的服务器是`8.8.8.8`，我们在`/etc/resolv.conf`中配置了该服务器。但是，我们可以通过在`dig`命令中传递`@`来使用不同的DNS服务器，如下例所示：
- en: '[PRE73]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'As we can see from the previous example, we have specified a different DNS
    server to answer our query. Adding to this, we can also look for particular DNS
    information such as the name server or NS by passing `NS` with the `dig` command,
    as shown in the following example:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们从前面的示例中看到的，我们已经指定了不同的DNS服务器来回答我们的查询。除此之外，我们还可以通过在`dig`命令中传递`NS`来查找特定的DNS信息，例如名称服务器或NS，如下例所示：
- en: '[PRE74]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Excellent!  In the previous example, we can see the name servers for the given
    domain.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！在前面的示例中，我们可以看到给定域的名称服务器。
- en: The whois command
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: whois命令
- en: 'It is also possible to gain information for a domain using the `whois` command.
    The basic syntax for the `whois` command is as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用`whois`命令获取域的信息。`whois`命令的基本语法如下：
- en: '[PRE75]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Thus we can simply pass a domain name with the `whois` command and get valuable
    information for a given domain, as shown in the following example:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以简单地通过`whois`命令传递一个域名，并获取给定域的有价值信息，如下例所示：
- en: '[PRE76]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Awesome! Some output has been omitted for brevity. The previous example shows
    that we are given a  wealth of information for the given domain.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！为了简洁起见，某些输出已被省略。前面的示例显示了我们为给定域提供了丰富的信息。
- en: The hostname command
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: hostname命令
- en: 'This command is simply used for setting or returning the DNS name of the system
    and the IP address of the system. The basic syntax is as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令仅用于设置或返回系统的DNS名称和系统的IP地址。基本语法如下：
- en: '[PRE77]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The example shows that, if we simply enter the `hostname` command, it will
    yield the following code:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例显示，如果我们只输入`hostname`命令，将产生以下代码：
- en: '[PRE78]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'So, we can see the DNS name of the system. We can also pass the `-i` option
    to view the IP associated with the `hostname`, as shown in the following example:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以看到系统的DNS名称。我们还可以传递`-i`选项来查看与`hostname`关联的IP，如下例所示：
- en: '[PRE79]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Excellent! Based on the previous example, we can see an IP from the loopback
    range of `127.0.0.0/8`. We can change the `hostname` by passing a new `hostname`
    value, as shown in the following code:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！根据前面的示例，我们可以看到来自`127.0.0.0/8`回环范围的IP。我们可以通过传递新的`hostname`值来更改`hostname`，如下面的代码所示：
- en: '[PRE80]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Using the previous example, we can see that the `hostname` command indicates
    that the `hostname` has been changed but it has not updated the prompt. We can
    exit out of root and sign back in and we will see the following changes:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，我们可以看到`hostname`命令指示`hostname`已更改，但未更新提示符。我们可以退出root并重新登录，然后我们将看到以下更改：
- en: '[PRE81]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Excellent! Now we can see that the hostname was changed to reflect the name
    that we specified. However, when we reboot the system the hostname will be set
    back to the value specified in the `/etc/hostname` file, as shown in the following
    example:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在我们可以看到主机名已更改以反映我们指定的名称。但是，当我们重新启动系统时，主机名将被设置回`/etc/hostname`文件中指定的值，如下例所示：
- en: '[PRE82]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'We can fix this by editing the `/etc/hostname` file using a text editor such
    as vi or nano and place the value as shown in the following code:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用文本编辑器（如vi或nano）编辑`/etc/hostname`文件并将值放置如下代码所示来解决这个问题：
- en: '[PRE83]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Excellent!
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: Summary
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we configured IPv4, IPv6 configuration, client-side DNS and
    network troubleshooting. First, we worked with IPv4, and we looked at various
    ways with which we would manage IPv4 addressing. Next, we covered IPv4 routing;
    we saw how we would add a default route in addition to adding static routes for
    subnets not directly connected. This was then followed with IPv6 configuration;
    we saw how we would manage our IPv6 infrastructure using various tools available
    via the command line. Following this, we looked at configuring routing for IPv6,
    particularly focusing on default routes and static routes for subnets not directly
    connected. Next, we covered client-side DNS. We looked at ways of configuring
    the DNS servers' IP addressing. We then tested our DNS configuration by browsing
    out to the internet. Finally, we covered network troubleshooting; we covered a
    number of tools available at the command line to assist us in troubleshooting
    potential network connectivity issues.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们配置了IPv4、IPv6配置、客户端DNS和网络故障排除。首先，我们使用IPv4，并且我们看了各种管理IPv4地址的方法。接下来，我们涵盖了IPv4路由；我们看到了如何添加默认路由以及添加静态路由以连接的子网。然后我们进行了IPv6配置；我们看到了如何使用命令行中可用的各种工具来管理我们的IPv6基础设施。接着，我们看了如何配置IPv6的路由，特别是关注默认路由和静态路由以连接的子网。接下来，我们涵盖了客户端DNS。我们看了配置DNS服务器IP地址的方法。然后我们通过浏览互联网来测试我们的DNS配置。最后，我们涵盖了网络故障排除；我们涵盖了一些可用于命令行的工具，以帮助我们解决潜在的网络连接问题。
- en: In the next chapter, we will focus on security; particularly, host security,
    SSH, and encryption. The next chapter is critical because of the many security
    risks that exist in today's environments. I hope to see you in the next chapter.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于安全性；特别是主机安全性，SSH和加密。下一章非常关键，因为当今环境中存在许多安全风险。希望在下一章中见到您。
- en: Questions
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which option with the `ifconfig` command displays all interfaces active and
    inactive?
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ifconfig`命令的哪个选项显示所有活动和非活动的接口？'
- en: A. `-s`
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-s`
- en: B. `-d`
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-d`
- en: C. `-A`
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-A`
- en: D. `-a`
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: D. `-a`
- en: Which keyword is used with the `ip` route command when creating a gateway of
    last resort?
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建默认网关时，`ip`路由命令使用哪个关键字？
- en: A. `default`
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: A. `default`
- en: B. `0.0.0.0`
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: B. `0.0.0.0`
- en: C. gateway
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: C. 网关
- en: D. None of the above
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: D. 以上都不是
- en: Which protocol does `ping` use to send and receive messages between source and
    destination?
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ping`使用哪种协议在源和目的地之间发送和接收消息？'
- en: A. FTP
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: A. FTP
- en: B. TFTP
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: B. TFTP
- en: C. ICMP
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: C. ICMP
- en: D. SSH.1.1
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: D. SSH.1.1
- en: Which file holds the `hostname` value for the system?
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个文件保存系统的`hostname`值？
- en: A. `/etc/hosts`
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: A. `/etc/hosts`
- en: B. `/etc/hostname`
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: B. `/etc/hostname`
- en: C. `/etc/hostname/hosts`
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: C. `/etc/hostname/hosts`
- en: D. `/var/log/hosts`
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: D. `/var/log/hosts`
- en: Which command performs a trace and outputs the hops along with the `pmtu` value?
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令执行跟踪并输出跳数以及`pmtu`值？
- en: A. `traceroute`
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: A. `traceroute`
- en: B. `trace`
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: B. `trace`
- en: C. `tracepath`
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: C. `tracepath`
- en: D. `tracert`
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: D. `tracert`
- en: Which command performs a DNS query for a given domain?
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令执行给定域的DNS查询？
- en: A. `ping`
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: A. `ping`
- en: B. `traceroute`
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: B. `traceroute`
- en: C. `dnsq`
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dnsq`
- en: D. `dig`
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dig`
- en: Which command adds a default route for IPv6?
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令为IPv6添加默认路由？
- en: A. `ip -6 route add default via 2001:db8:0:f101::2`
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: A. `ip -6 route add default via 2001:db8:0:f101::2`
- en: B. `iproute add default via 2001:db8:0:f101::2`
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: B. `iproute add default via 2001:db8:0:f101::2`
- en: C. `ip-6 route add default via 2001:db8:0:f101::2`
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: C. `ip-6 route add default via 2001:db8:0:f101::2`
- en: D. `ip -6 add default via 2001:db8:0:f101::2`
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: D. `ip -6 add default via 2001:db8:0:f101::2`
- en: Which options with the netstat command displays the IP address and port numbers
    for UDP connections which are open, and program ID, and program name?
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项与netstat命令一起显示打开的UDP连接的IP地址和端口号，程序ID和程序名称？
- en: A. `-t`
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: A. `-t`
- en: B. `-u`
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: B. `-u`
- en: C. `-udp`
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: C. `-udp`
- en: D. `-ulp`
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: D. `-ulp`
- en: Which command is used for scanning a system in order to expose the services
    and their respective port numbers being used?
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令用于扫描系统以公开正在使用的服务及其相应的端口号？
- en: A. `traceroute`
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: A. `traceroute`
- en: B. `dig`
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dig`
- en: C. `nmap`
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: C. `nmap`
- en: D. `ip`
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: D. `ip`
- en: Which command displays registry information for a given domain?
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令显示给定域的注册表信息？
- en: A. `who`
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: A. `who`
- en: B. `whois`
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: B. `whois`
- en: C. `whoami`
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: C. `whoami`
- en: D. `w`
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: D. `w`
- en: Further reading
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: This site gives useful information about configuring IPv4 and IPv6: [https://superuser.com](https://superuser.com)
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供有关配置IPv4和IPv6的有用信息：[https://superuser.com](https://superuser.com)
- en: This site gives useful information about configuring client-side DNS: [https://unix.stackexchange.com](https://unix.stackexchange.com)
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供有关配置客户端DNS的有用信息：[https://unix.stackexchange.com](https://unix.stackexchange.com)
- en: This site gives useful information about troubleshooting: [https://www.computernetworkingnotes.com](https://www.computernetworkingnotes.com)
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该网站提供有关故障排除的有用信息：[https://www.computernetworkingnotes.com](https://www.computernetworkingnotes.com)
