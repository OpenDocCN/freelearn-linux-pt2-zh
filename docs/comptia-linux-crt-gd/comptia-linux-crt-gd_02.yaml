- en: Booting the System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统引导
- en: In the previous chapter, we covered the common hardware settings we manage on
    a daily basis. We touched on some commands that can be used to identify the hardware
    within a Linux system. This chapter continues from there and takes a further step,
    this time focusing on the process of booting the system. It looks at the GRUB
    and GRUB2 configuration files, focusing on the timer, default boot entry, and
    passing arguments to the GRUB/GRUB2 boot menu. It also covers the `chkconfig`,
    `pstree`, `ps`, `systemctl`, and `dmeg` commands, and the various start/stop scripts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们涵盖了我们日常管理的常见硬件设置。我们提到了一些命令，可以用来识别 Linux 系统中的硬件。本章将从那里继续，并进一步进行，这次重点是系统引导的过程。它查看了
    GRUB 和 GRUB2 配置文件，重点关注了计时器、默认引导项以及向 GRUB/GRUB2 引导菜单传递参数。它还涵盖了 `chkconfig`、`pstree`、`ps`、`systemctl`
    和 `dmeg` 命令，以及各种启动/停止脚本。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: The boot process explained
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解释引导过程
- en: Understanding GRUB and GRUB2
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 GRUB 和 GRUB2
- en: Working with GRUB
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GRUB
- en: Working with GRUB2
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GRUB2
- en: The boot process explained
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释引导过程
- en: In Linux, during boot up, the looks for the boot sector on the hard disk. Once
    it finds the boot sector, it then searches for a boot loader. The boot loader
    in turn loads the boot manager. In Linux, this will usually be either GRUB or
    GRUB2\. After this stage, the user is presented with a boot menu. Finally, the
    user is given the opportunity to either select an operating system to load or
    edit an existing entry. The options available are usually going to be different
    versions of the Linux kernel. Sometimes, it might may an entirely different Linux
    distribution. However, in mixed environments, you may be come into contact with
    another operating system, such as Microsoft Windows.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，在启动过程中，会在硬盘上查找引导扇区。一旦找到引导扇区，它会搜索引导加载程序。引导加载程序然后加载引导管理器。在 Linux 中，这通常是
    GRUB 或 GRUB2。在这个阶段之后，用户会看到一个引导菜单。最后，用户有机会选择要加载的操作系统或编辑现有条目。可用的选项通常是不同版本的 Linux
    内核。有时，它可能是完全不同的 Linux 发行版。然而，在混合环境中，你可能会接触到另一个操作系统，比如 Microsoft Windows。
- en: 'After the user selects a Linux kernel, depending on the Linux distribution
    release, a single process is started, known as `init`, which stands for *initialization*.
    `init` is often referred to as *System V init* or SysV, because System V was the
    first commercial Unix operating system. Most early Linux distributions were identical
    to the System V operating system. The other daemon used to manage a Linux distribution
    is known as `systemd`, which stands for System Management Daemon. The following
    is a simple flow of the process that we just discussed:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 用户选择 Linux 内核后，根据 Linux 发行版的不同，会启动一个名为 `init` 的单个进程，它代表*初始化*。`init` 通常被称为*System
    V init* 或 SysV，因为 System V 是第一个商业 Unix 操作系统。大多数早期的 Linux 发行版与 System V 操作系统相同。用于管理
    Linux 发行版的另一个守护进程称为 `systemd`，代表 System Management Daemon。以下是我们刚刚讨论的过程的简单流程：
- en: '*Boot Sector > Boot Loader > Boot Menu  => OS loads*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*引导扇区 > 引导加载程序 > 引导菜单 => 操作系统加载*'
- en: In Linux, you may come across the term **daemon**. Rest assured, that's simply
    referring to a process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，你可能会遇到术语**守护进程**。请放心，这只是指一个进程。
- en: 'Before we go deeper, let''s keep in mind one of the biggest differences between
    `init` and `systemd`: `init` starts scripts one at a time, whereas `systemd` starts
    multiple scripts parallel to each other. That being said, here is the output from
    the `pstree` command on a CentOS 5 system that uses `init`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入之前，让我们记住 `init` 和 `systemd` 之间最大的区别之一：`init` 逐个启动脚本，而 `systemd` 同时并行启动多个脚本。话虽如此，在使用
    `init` 的 CentOS 5 系统上，以下是 `pstree` 命令的输出：
- en: '![](img/00041.gif)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.gif)'
- en: From the preceding output, we can see all of the processes originating from
    `init`; hence, they are considered child processes.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到所有起源于 `init` 的进程；因此，它们被视为子进程。
- en: Note: Some output omitted for brevity has been removed throughout the chapters.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：出于简洁起见，一些输出已在整个章节中被省略。
- en: 'Another command we can leverage to see the actual process number being used
    by `init` is the `ps` command in our CentOS 5 system:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以利用 `ps` 命令在我们的 CentOS 5 系统上查看 `init` 使用的实际进程号：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: From the preceding output, we can see that the first process started is `PID
    1`, and it is indeed the `init` process.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到第一个启动的进程是 `PID 1`，它确实是 `init` 进程。
- en: 'Here are some options that we can use with the `ps` command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们可以与 `ps` 命令一起使用的一些选项：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let''s turn our attention to `systemd`. We will run the `pstree` command
    on our Linux system:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们把注意力转向 `systemd`。我们将在我们的 Linux 系统上运行 `pstree` 命令：
- en: '![](img/00042.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: From the preceding output, we can see all other processes being spawned by the
    system. These are known as child processes.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到系统生成的所有其他进程。这些被称为子进程。
- en: 'We can also run the `pstree` command on the CentOS 7 distro, and see similar
    results:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以在 CentOS 7 发行版上运行 `pstree` 命令，并看到类似的结果：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On almost all newer Linux distributions, `systemd` has replaced `init.`
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在几乎所有较新的 Linux 发行版中，`systemd` 已经取代了 `init`。
- en: 'Now, let''s check which process number `systemd` is using on the Linux system
    by using the `ps` command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `ps` 命令查看 Linux 系统上 `systemd` 使用的进程号：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: From the preceding output, we can clearly see that the system is indeed listed
    as the first process started.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以清楚地看到系统确实被列为第一个启动的进程。
- en: '`systemd` emulates `init`. For example, we can start/stop daemon(s) with the
    `service` command.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd` 模拟 `init`。例如，我们可以使用 `service` 命令启动/停止守护进程。'
- en: 'Now, in order for us to see the processes that have been started on the Linux
    distribution, we can run the `chkconfig` command on our CentOS 7 distribution:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了查看在 Linux 发行版上启动的进程，我们可以在我们的 CentOS 7 发行版上运行 `chkconfig` 命令：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding output, we are only shown daemons that use `init`. This is
    useful on systems running native `init`, such as earlier Linux distributions.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，我们只显示使用`init`的守护程序。这对于运行原生`init`的系统非常有用，比如早期的Linux发行版。
- en: 'Here are the most commonly used options that can be passed with the `chkconfig`
    command for older Linux distributions that use `init`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以与使用`init`的旧Linux发行版一起传递的`chkconfig`命令的最常用选项：
- en: '| `--level levels` | Specifies the runlevels an operation should pertain to.
    It is given as a string of numbers from 0 to 6.For example, `--level 35` specifies
    runlevels 3 and 5. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `--level levels` | 指定操作应适用于的运行级别。它以0到6的数字字符串给出。例如，`--level 35`指定运行级别3和5。
    |'
- en: '| `--add name` | This option adds a new service for management by `chkconfig`.
    When a new service is added, `chkconfig`.ensures that the service has either a
    start or a kill entry in every runlevel. If any runlevel is missing such an entry,
    `chkconfig` creates the appropriate entry as specified by the default values in
    the `init` script. Note that default entries in LSB-delimited `INIT INFO` sections
    take precedence over the default runlevels in the `initscript`; if any `required-start`
    or `required-stop` entries are present, the start and stop priorities of the script
    will be adjusted to account for these dependencies. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `--add name` | 此选项通过`chkconfig`添加一个新的服务进行管理。添加新服务时，`chkconfig`确保该服务在每个运行级别中都有启动或杀死条目。如果任何运行级别缺少这样的条目，`chkconfig`将根据`init`脚本中的默认值创建适当的条目。请注意，LSB分隔的`INIT
    INFO`部分中的默认条目优先于`initscript`中的默认运行级别；如果存在任何`required-start`或`required-stop`条目，则脚本的启动和停止优先级将根据这些依赖关系进行调整。
    |'
- en: '|  `--del name` | The service is removed from `chkconfig` management, and any
    symbolic links in `/etc/rc[0-6].d` which pertain to it are removed.Note that future
    package installs for this service may run `chkconfig --add`, that will re-add
    such links. To disable a service, run `chkconfig name off`. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `--del name` | 服务从`chkconfig`管理中删除，并且`/etc/rc[0-6].d`中与之相关的任何符号链接都将被删除。请注意，将来安装此服务的软件包可能会运行`chkconfig
    --add`，这将重新添加这些链接。要禁用服务，请运行`chkconfig name off`。 |'
- en: '| `--override name` | If the service name is configured exactly as it would
    be if the `--add` option had been specified with no override file in `/etc/chkconfig.d/name`,
    and if `/etc/chkconfig.d/name` now exists and is specified differently from the
    base `initscript`, this changes the configuration for the service name to follow
    the overrides instead of the base configuration. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `--override name` | 如果服务名称的配置与在`/etc/chkconfig.d/name`中没有覆盖文件的情况下指定`--add`选项完全相同，并且现在`/etc/chkconfig.d/name`存在并且与基本`initscript`不同，这将更改服务名称的配置，使其遵循覆盖而不是基本配置。
    |'
- en: '| `--list name` | This option lists all of the services that `chkconfig` knows
    about, and whether they are stopped or started in each runlevel. If a name is
    specified, information is only displayed about the service name. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `--list name` | 此选项列出`chkconfig`知道的所有服务，以及它们在每个运行级别中是停止还是启动的。如果指定了名称，则只显示有关服务名称的信息。
    |'
- en: 'For us to see the daemons started in newer Linux distributions, we will use
    the `systemctl` command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看在较新的Linux发行版中启动的守护程序，我们将使用`systemctl`命令：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'From the preceding output, we can see a variety of options that can be passed
    with the `systemctl` command; we will use the `list-unit-files` option with `systemctl`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到可以与`systemctl`命令一起传递的各种选项；我们将使用`systemctl`的`list-unit-files`选项：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Some output is omitted for the sake of brevity:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，省略了一些输出：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'From the preceding output, we can see 392 units are listed. We can be more
    specific and look for only the services that are enabled/running:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到列出了392个单元。我们可以更具体地查找只启用/运行的服务：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can also see the status, the directory from where the daemon is being executed
    along with the **Process ID** (**PID**) for a daemon with the `systemctl` command.
    We will use the `status` option:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`systemctl`命令查看守护程序的状态、守护程序被执行的目录以及守护程序的**进程ID**（**PID**）。我们将使用`status`选项：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We can also stop, start, restart, enable, and disable a daemon with the `systemctl`
    command. Let''s say we want to stop the `ssd` service using the `systemctl` command.
    We would simply do this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用`systemctl`命令停止、启动、重启、启用和禁用守护程序。假设我们想使用`systemctl`命令停止`ssd`服务。我们只需这样做：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, as soon as we press *Enter* on the CentOS 7 system, we will get an authentication
    prompt because we are attempting to stop the `sshd` service as a standard user:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们在CentOS 7系统上按下*Enter*键时，我们将收到一个身份验证提示，因为我们正在尝试以标准用户身份停止`sshd`服务：
- en: '![](img/00043.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.jpeg)'
- en: '`sshd` is considered to be a system service. Also, a unit in the context of
    `systemd` is a service and vice versa.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`sshd`被认为是一个系统服务。此外，在`systemd`的上下文中，一个单元是一个服务，反之亦然。'
- en: 'Now we''ll enter the root password:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将输入root密码：
- en: '![](img/00044.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00044.jpeg)'
- en: 'And now the `sshd` service has been stopped:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`sshd`服务已经停止：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now let''s recheck the status of the `sshd` service to confirm it has indeed
    stopped, using the `systemctl` command:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们重新检查`sshd`服务的状态，以确认它确实已经停止，使用`systemctl`命令：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: From the preceding code, we can conclude that the `sshd` service has been stopped.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，我们可以得出`sshd`服务已经停止。
- en: DMESG
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DMESG
- en: Now, when the system is booting, there are a number of messages relating to
    various aspects of our system, ranging from hardware to services, that fly across
    the screen quickly. It would be useful to be able to view those messages while
    troubleshooting. It's always useful to gather as much information as possible
    to aid troubleshooting.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当系统启动时，屏幕上会快速显示与我们的系统各个方面相关的许多消息，从硬件到服务。在故障排除时，能够查看这些消息将非常有用。收集尽可能多的信息以帮助故障排除总是很有用。
- en: 'We can leverage yet another powerful command, the `dmesg` command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以利用另一个强大的命令，即`dmesg`命令：
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Some of the following output is omitted for the sake of brevity:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁起见，省略了一些输出：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: From the preceding output, we can see various pieces of information, including
    CPU detection, PCI drivers, and Ethernet, to name a few.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到各种信息，包括CPU检测、PCI驱动程序和以太网等。
- en: GRUB and GRUB2
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GRUB和GRUB2
- en: Now, we'll switch gears and discuss the boot managers whose jobs are to present
    the boot menu, from which the user has the options to select which operating system/Linux
    kernel to load or edit. First, we will focus on GRUB and then move on to GRUB2.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将转变方向，讨论引导管理器的工作是呈现引导菜单，用户可以从中选择要加载或编辑的操作系统/ Linux内核。首先，我们将重点放在GRUB上，然后转到GRUB2。
- en: GRUB
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GRUB
- en: GRUB stands for **Grand Unified Bootloader**. GRUB is primarily used for booting
    Linux distributions. However, GRUB can work with other boot loaders. A common
    use-case scenario is for dual booting with a Microsoft operating system, it does
    this by doing a hand-off to the Windows bootloader for Microsoft operating systems.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB代表**Grand Unified Bootloader**。GRUB主要用于引导Linux发行版。但是，GRUB可以与其他引导加载程序一起使用。一个常见的用例是与Microsoft操作系统双引导，它通过将控制权移交给Windows引导加载程序来实现这一点。
- en: 'GRUB uses the `/boot/grub/grub.conf` file. Sometimes you will see `/boot/grub/menu.lst`,
    but this file, is simply a symbolic link to `/boot/grub/grub.conf`. Using the
    CentOS 6.5 distro, run the following command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB使用`/boot/grub/grub.conf`文件。有时您会看到`/boot/grub/menu.lst`，但是这个文件只是`/boot/grub/grub.conf`的符号链接。使用CentOS
    6.5发行版，运行以下命令：
- en: '[PRE15]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: From the preceding output, we can see `/boot/grub/grub.conf` and also the symbolic
    link `/boot/grub/menu.lst`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到`/boot/grub/grub.conf`，还有符号链接`/boot/grub/menu.lst`。
- en: 'We can view the actual `/boot/grub/grub.conf` file:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看实际的`/boot/grub/grub.conf`文件：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: From the preceding output, the common options would be the following. `default=0` means
    it is the first entry to boot from the menu. `timeout=5` gives the amount of seconds
    (5 in that case) that the menu will be displayed for before the Linux kernel is
    booted or the Windows boot loader gets a hand-off from GRUB. `splashimage=(hd0,0)/grub/splash.xpm.gz`
    is the background image of the boot menu. `root (hd0,0)` refers to the first hard
    disk and the first partition on the first hard disk.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，常见的选项将是以下内容。`default=0`表示它是菜单中要启动的第一个条目。`timeout=5`给出了菜单显示的秒数（在这种情况下为5），在加载Linux内核或Windows引导加载程序从GRUB手中接管之前。`splashimage=(hd0,0)/grub/splash.xpm.gz`是引导菜单的背景图像。`root
    (hd0,0)`指的是第一个硬盘和第一个硬盘上的第一个分区。
- en: GRUB2
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GRUB2
- en: 'GRUB2 uses a more programmatic approach in the way the menu is presented. At
    first glance, GRUB2 may look intimidating, but rest assured that it''s not as
    complicated as it appears to be. The syntax is similar to a programming language,
    with lots of *if...then* statements. Here is what `/boot/grub/grub.cfg` on a CentOS
    7 system looks like:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB2在菜单呈现方式上使用了更加程序化的方法。乍一看，GRUB2可能看起来令人生畏，但请放心，它并不像看起来那么复杂。语法类似于编程语言，有很多*if...then*语句。以下是CentOS
    7系统上`/boot/grub/grub.cfg`的样子：
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Some of the following output is omitted for brevity. Following shows the last
    part of the `/boot/grub/grub.cfg`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁起见，以下部分输出被省略。以下显示了`/boot/grub/grub.cfg`的最后部分：
- en: '[PRE19]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: So, to interpret the `/boot/grub/grub.cfg` file, we look for lines that start
    with `menuentry`. These lines start the actual menu entry for an operating system,
    such as a Linux distribution or a Windows OS.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，要解释`/boot/grub/grub.cfg`文件，我们要查找以`menuentry`开头的行。这些行开始了操作系统的实际菜单条目，例如Linux发行版或Windows操作系统。
- en: Entries are enclosed within curly braces {}.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 条目被包含在大括号{}中。
- en: Working with GRUB
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与GRUB一起工作
- en: 'Now we''re going to interact with GRUB. We will add a custom boot entry. This
    will be presented upon reboot. We will use the `vi` command, which will open `/boot/grub/grub.conf` in
    the visual editor:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将与GRUB进行交互。我们将添加一个自定义引导条目。这将在重新启动时呈现。我们将使用`vi`命令，它将在可视编辑器中打开`/boot/grub/grub.conf`：
- en: Before you work with GRUB, always make a backup copy of your `/boot/grub/grub.conf`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用GRUB之前，始终备份您的`/boot/grub/grub.conf`。
- en: '[PRE20]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now we''re inside `vi`. We will press *I* on the keyboard to enter the insert
    mode, scroll down using the down-arrow key until we reach the last line, and press
    then *Enter* to go to a new line:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在`vi`中。我们将按下键盘上的*I*进入插入模式，使用下箭头键向下滚动，直到达到最后一行，然后按*Enter*进入新行：
- en: '[PRE21]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Next, we will start our entry using the following keywords: `title`, `root`,
    `kernel`, and `initrd`. We will insert our own custom values, as shown here:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用以下关键字启动我们的条目：`title`、`root`、`kernel`和`initrd`。我们将插入我们自己的自定义值，如下所示：
- en: '[PRE22]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now we will save and exit `vi`. We use `:wq` to save our change(s) and exit
    `vi`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将保存并退出`vi`。我们使用`:wq`来保存我们的更改并退出`vi`：
- en: '[PRE23]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Based on the preceding output, here is a breakdown of our custom entry:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，这是我们自定义条目的分解：
- en: The `title` defines our customer boot entry.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title`定义了我们的自定义引导条目。'
- en: '`root (hd0,0)` tells it to search for the first hard disk and the first partition
    on the first hard disk.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`root (hd0,0)` 告诉它搜索第一个硬盘和第一个硬盘上的第一个分区。'
- en: The `kernel /vmlinuz-2.6.32-431.el6.x86 ro` tells GRUB to look for the location
    of the Linux kernel. In this case, it's `vmlinuz-2.6.32-431.el6.x86 ro` (`ro` means
    it loads the kernel as read-only).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kernel /vmlinuz-2.6.32-431.el6.x86 ro` 告诉GRUB查找Linux内核的位置。在这种情况下，它是`vmlinuz-2.6.32-431.el6.x86
    ro`（`ro`表示以只读方式加载内核）。'
- en: '`inidrd /initramfs-2.6.32-431.el6.x86_64.img` specifies the initial RAM disk
    file to use (this aids the system boot up).'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inidrd /initramfs-2.6.32-431.el6.x86_64.img`指定要使用的初始RAM磁盘文件（这有助于系统启动）。'
- en: 'The last step is to reboot our CentOS system and be presented with the GRUB
    boot menu:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是重新启动我们的CentOS系统，并显示GRUB引导菜单：
- en: '![](img/00045.gif)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.gif)'
- en: 'From the preceding output, we can see our new custom boot entry is displayed
    in GRUB, which is awesome. We can interact in real time, right at the GRUB menu.
    Let''s say we wanted to tag on or remove an option from one of these entries.
    We would simply press the *E* key, as shown here:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到我们的新自定义引导条目显示在GRUB中，这很棒。我们可以实时交互，就在GRUB菜单上。假设我们想要在这些条目中添加或删除选项。我们只需按下*E*键，如下所示：
- en: '![](img/00046.gif)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.gif)'
- en: 'Now we can press the *E* key once again to edit the entry. Let''s say we want
    to specify that the root filesystem resides in `/dev/`; we would do this as shown in
    the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以再次按*E*键编辑该项。假设我们想指定根文件系统位于`/dev/`；我们可以按照以下截图所示进行操作：
- en: '![](img/00047.gif)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.gif)'
- en: 'Now, we can press the *Enter* key, which will save our changes, and the *Esc*
    key to return to the previous screen; we will see the new option added:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以按*Enter*键保存我们的更改，按*Esc*键返回到上一个屏幕；我们将看到新添加的选项：
- en: '![](img/00048.gif)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.gif)'
- en: From the preceding output, we can see how easy it is to work in real-time at
    the GRUB boot menu and also how to add a custom boot entry in GRUB.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到在GRUB引导菜单中实时工作以及如何在GRUB中添加自定义引导项是多么容易。
- en: In GRUB, the first hard disk and the first partition are identified as `(hd0,
    0)`, whereas in the Linux shell, the first hard disk and first partition are identified
    as `(sda1)`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在GRUB中，第一个硬盘和第一个分区被标识为`(hd0, 0)`，而在Linux shell中，第一个硬盘和第一个分区被标识为`(sda1)`。
- en: Working with GRUB2
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GRUB2
- en: 'We add a custom boot entry in GRUB2 in a slightly different way from GRUB.
    In GRUB2, instead of editing the actual `/boot/grub/grub.cfg`, we work with `/etc/default/grub`
    and `/etc/grub.d`. Let''s do a listing of `/etc/grub.d` to see all of the available
    files:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以与GRUB略有不同的方式在GRUB2中添加自定义引导项。在GRUB2中，我们不是编辑实际的`/boot/grub/grub.cfg`，而是使用`/etc/default/grub`和`/etc/grub.d`。让我们列出`/etc/grub.d`以查看所有可用的文件：
- en: '[PRE24]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Before you work with GRUB2, always make a backup copy of your `/boot/grub/grub.cfg`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用GRUB2之前，始终备份您的`/boot/grub/grub.cfg`。
- en: 'From the preceding output, we can see a number of files. Their names start
    with a number, and the numbers are read in sequential order. Let''s say we want
    to add a custom boot entry in GRUB2\. We are going to create a custom entry and
    name it `/etc/grub/40_custom`. We will see the following code in `vi`:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到许多文件。它们的名称以数字开头，并且数字是按顺序读取的。假设我们想在GRUB2中添加一个自定义的引导项。我们将创建一个自定义项并命名为`/etc/grub/40_custom`。我们将在`vi`中看到以下代码：
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'From the preceding output, we can see the syntax is a bit similar to programming.
    In GRUB2, it''s an entire programming language. The next step is to save our changes,
    then run `grub-mkconfig` (the name implies we''re talking about legacy GRUB, but
    we''re actually referring to GRUB2). This depends on the Linux distribution. In
    CentOS 7, you will see commands that start with `grub2`:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以看到语法与编程有些相似。在GRUB2中，它是一种完整的编程语言。下一步是保存我们的更改，然后运行`grub-mkconfig`（名称暗示我们在谈论旧版GRUB，但实际上是指GRUB2）。这取决于Linux发行版。在CentOS
    7中，您将看到以`grub2`开头的命令：
- en: '[PRE26]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Some of the following output is omitted for the sake of brevity:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁起见，以下部分输出被省略：
- en: '[PRE27]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'When we run this command, the `grub-mkconfig` command finds the custom entry.
    This then generates a new boot menu. Upon the the next reboot of the system, we
    will see the new boot menu. We can also change options in `/etc/default/grub`,
    including options such as the default OS, the timer, and so on. Here is the content
    of `/etc/default/grub`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行此命令时，`grub-mkconfig`命令会找到自定义项。然后生成一个新的引导菜单。在系统下一次重启时，我们将看到新的引导菜单。我们还可以更改`/etc/default/grub`中的选项，包括默认操作系统、计时器等。以下是`/etc/default/grub`的内容：
- en: '[PRE28]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Based on the preceding output, the timer value is set to `10`. Also, note that
    there is a default value of `0`. Continuing down the configuration file, we see
    the following code :'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，计时器值设置为`10`。还要注意默认值为`0`。在配置文件中继续向下，我们看到以下代码：
- en: '[PRE29]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now, let''s reboot our Ubuntu system and check out the GRUB2 boot menu:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们重新启动Ubuntu系统并查看GRUB2引导菜单：
- en: '![](img/00049.jpeg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: From the preceding screenshot, we can now see our custom menu option in GRUB2\.
    We can even scroll through the entries and edit them by pressing the E key.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们现在可以在GRUB2中看到我们的自定义菜单选项。我们甚至可以通过按E键滚动浏览条目并编辑它们。
- en: In GRUB2, the first hard disk starts with `0` and the first partition starts
    with `1`, unlike in legacy GRUB.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在GRUB2中，第一个硬盘从`0`开始，第一个分区从`1`开始，与旧版GRUB不同。
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we took a look at the boot process. We then discussed `init`
    and `systemd.` We used the `pstree` command and saw the first process that is
    loaded. Also, we used the `ps` command to identify the process number. We then
    looked at the boot messages that would normally scroll across the screen using
    the `dmesg` command. The messages displayed offer us hints as to what was loaded
    upon boot up. Furthermore, we can use the messages displayed to assist us whilst
    troubleshooting. Next, we covered GRUB and GRUB2, looking at the structure of
    GRUB, particularly `/boot/grub/grub/conf`. We looked at adding a custom menu entry
    in GRUB. We looked at interacting with GRUB in real time at the boot menu. After
    that, we looked at GRUB2, focusing on the structure of `/boot/grub/grub.cfg`.
    Also, we looked at the other locations that play a role in the GRUB2 configuration:
    the `/etc/default/grub/` and the `/etc/grub.d/` directories. We then added a custom
    menu entry inside `/etc/grub.d/` using the `/etc/grub.d/40_custom` file. After
    that, we updated GRUB2 with `grub-mkconfig` (Ubuntu distribution). Finally, we
    interacted in real time with the GRUB2 boot menu.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一下引导过程。然后讨论了`init`和`systemd`。我们使用了`pstree`命令并看到了加载的第一个进程。此外，我们使用了`ps`命令来识别进程号。然后，我们查看了通常会在屏幕上滚动的引导消息，使用`dmesg`命令。显示的消息为我们提供了关于引导时加载的内容的提示。此外，我们可以使用显示的消息来帮助我们进行故障排除。接下来，我们讨论了GRUB和GRUB2，查看了GRUB的结构，特别是`/boot/grub/grub/conf`。我们看了如何在GRUB中添加自定义菜单项。我们看了如何在引导菜单中实时与GRUB交互。之后，我们看了GRUB2，重点是`/boot/grub/grub.cfg`的结构。此外，我们还看了在GRUB2配置中起作用的其他位置：`/etc/default/grub/`和`/etc/grub.d/`目录。然后，我们使用`/etc/grub.d/40_custom`文件在`/etc/grub.d/`中添加了自定义菜单项。之后，我们使用`grub-mkconfig`（Ubuntu发行版）更新了GRUB2。最后，我们实时与GRUB2引导菜单进行了交互。
- en: In the next chapter, we will focus on runlevels and boot targets. These are
    critical topics that we need to fully understand as Linux engineers. We will manage
    the system using various methods at the command line. Commands such as `runlevel`,
    `init`, and `systemctl`, to name a few, will be covered. There is a whole lot
    of useful information to be gained in the next chapter. It's essential to understand
    how runlevels work. Adding to this is the concept of boot targets. On most newer
    distributions, you will come into contact with boot targets. This will aid you
    in managing your Linux systems from a command-line environment. Your skill set
    will continue to grow as you work throughout the next chapter. This will further
    take you closer to success in your quest for certification.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于运行级别和引导目标。这些是我们作为Linux工程师需要充分理解的关键主题。我们将使用各种方法在命令行上管理系统。我们将涵盖`runlevel`、`init`和`systemctl`等命令。在下一章中，有很多有用的信息可以获得。了解运行级别的工作原理至关重要。此外，还有引导目标的概念。在大多数较新的发行版中，您将接触到引导目标。这将帮助您在命令行环境中管理Linux系统。在下一章中，您的技能将继续增长。这将进一步使您更接近成功，获得认证。
- en: Questions
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Where is the boot loader located on the hard disk?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引导加载程序位于硬盘的哪个位置？
- en: A. The boot sector
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: A. 引导扇区
- en: B. The secondary partition
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: B. 次要分区
- en: C. The logical partition
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: C. 逻辑分区
- en: D. None of the above
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: D. 以上都不是
- en: Which was the first commercial Unix operating system?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个是第一个商业Unix操作系统？
- en: A. systemd
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: A. systemd
- en: B. upstart
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: B. upstart
- en: C. System X
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: C. System X
- en: D. System V
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: D. System V
- en: Which command displays the processes starting from the parent process followed
    by the child processes?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令显示从父进程开始的进程，然后是子进程？
- en: A. `dnf`
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dnf`
- en: B. `systemctl`
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: B. `systemctl`
- en: C. ` pstree`
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: C. ` pstree`
- en: D. `ps`
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: D. `ps`
- en: Which is the first process that is started on a CentOS 5 system?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CentOS 5系统上启动的第一个进程是什么？
- en: A. `systemd`
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: A. `systemd`
- en: B. `init`
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: B. `init`
- en: C. `kickstart`
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: C. `kickstart`
- en: D. `upstart`
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: D. `upstart`
- en: What has replaced `init` in newer releases of the Linux kernel?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Linux内核的较新版本中，`init`被什么取代了？
- en: A. `telinit`
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: A. `telinit`
- en: B. `systemctl`
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: B. `systemctl`
- en: C. `systemb`
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: C. `systemb`
- en: D. `systemd`
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: D. `systemd`
- en: Which command lists the processes that are running on a CentOS 7 distribution?
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令列出了在CentOS 7发行版上运行的进程？
- en: A. `systemd list-unit-files`
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: A. `systemd list-unit-files`
- en: B. `systemX list-unit-files`
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: B. `systemX list-unit-files`
- en: C. `systemctl list-unit-files`
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: C. `systemctl list-unit-files`
- en: D. `service status unit-files`
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: D. `service status unit-files`
- en: Which command lists the hardware drivers that are loaded during system boot?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令列出了系统引导时加载的硬件驱动程序？
- en: A. `cat /var/log/messages`
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: A. `cat /var/log/messages`
- en: B. `tail –f /var/log/startup`
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: B. `tail –f /var/log/startup`
- en: C. `head /var/messages`
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: C. `head /var/messages`
- en: D. `dmesg`
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dmesg`
- en: Which directory is the GRUB configuration file located in a CentOS 5 distribution?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CentOS 5发行版中，GRUB配置文件位于哪个目录？
- en: A. `/boot/`
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: A. `/boot/`
- en: B. `/grub/boot/`
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: B. `/grub/boot/`
- en: C. `/boot/grub/`
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: C. `/boot/grub/`
- en: D. `/grub/grub-config/`
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: D. `/grub/grub-config/`
- en: What starts a custom menu entry when adding an entry in GRUB?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GRUB中添加自定义菜单项时，是什么启动了自定义菜单项？
- en: A. `title`
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: A. `title`
- en: B. `menu entry`
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: B. `menu entry`
- en: C. `Operating System`
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: C. `操作系统`
- en: D. `default =0`
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: D. `default =0`
- en: What starts a custom menu entry when adding an entry in GRUB2?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GRUB2中添加自定义菜单项时，是什么启动了自定义菜单项？
- en: A. `title`
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: A. `title`
- en: B. `root = /vmlinuz/`
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: B. `root = /vmlinuz/`
- en: C. `menuentry`
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: C. `menuentry`
- en: D. `menu entry`
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: D. `menu entry`
- en: Which letter key is used to edit an entry in real-time at the GRUB boot menu?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个字母键用于在GRUB引导菜单中实时编辑条目？
- en: A. *C*
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: A. *C*
- en: B. *E*
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: B. *E*
- en: C. *B*
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: C. *B*
- en: D. *A*
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: D. *A*
- en: Further reading
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: You can get more information about the CentOS distributions, such as installing,
    configuration best practices, and so on at [https://www.centos.org.](https://www.centos.org)
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在[https://www.centos.org.](https://www.centos.org)获取有关CentOS发行版的更多信息，如安装、配置最佳实践等。
- en: The following website gives you a lot of useful tips and best practices from
    users in the Linux community, particularly for the Debian distributions, such
    as Ubuntu: [https://askubuntu.com.](https://askubuntu.com)
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下网站为您提供了许多有用的提示和Linux社区用户的最佳实践，特别是适用于Debian发行版，如Ubuntu：[https://askubuntu.com.](https://askubuntu.com)
- en: This following link gives you information in general that relates to various
    commands that work on both CentOS and Ubuntu. You can post your questions there
    and other community members will respond: [https://www.linuxquestions.org.](https://www.linuxquestions.org)
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下链接为您提供了一般信息，涉及适用于CentOS和Ubuntu的各种命令。您可以在那里发布您的问题，其他社区成员将会回答：[https://www.linuxquestions.org.](https://www.linuxquestions.org)
