["```\n    $> echo \"This is just a small file we'll use\" \\\n    > > testfile1\n    $> cat testfile1 \n    This is just a small file we'll use\n    ```", "```\n    $> stat testfile1 \n    \u00a0\u00a0File: testfile1\n    \u00a0\u00a0Size: 36\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Blocks: 8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IO Block: 262144 regular file\n    Device: 35h/53d Inode: 19374124\u00a0\u00a0\u00a0\u00a0Links: 1\n    Access: (0644/-rw-r--r--)\u00a0\u00a0Uid: ( 1000/\u00a0\u00a0\u00a0\u00a0jake)\u00a0\u00a0\u00a0Gid: ( 1000/\u00a0\u00a0\u00a0\u00a0jake)\n    Access: 2020-10-16 22:19:02.770945984 +0200\n    Modify: 2020-10-16 22:19:02.774945969 +0200\n    Change: 2020-10-16 22:19:02.774945969 +0200\n     Birth: -\n    ```", "```\n    $> wc -c testfile1 \n    36 testfile1\n    ```", "```\n    #include <stdio.h>\n    #include <sys/types.h>\n    #include <sys/stat.h>\n    #include <unistd.h>\n    #include <errno.h>\n    #include <string.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0struct stat filestat;\n    \u00a0\u00a0\u00a0if ( argc != 2 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s <file>\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0if ( stat(argv[1], &filestat) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't read file %s: %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[1], strerror(errno));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0printf(\"Inode: %lu\\n\", filestat.st_ino);\n    \u00a0\u00a0\u00a0printf(\"Size: %zd\\n\", filestat.st_size);\n    \u00a0\u00a0\u00a0printf(\"Links: %lu\\n\", filestat.st_nlink);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make my-stat-v1\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0my-stat-v1.c\u00a0\u00a0\u00a0-o my-stat-v1\n    ```", "```\n    $> ./my-stat-v1 testfile1 \n    Inode: 19374124\n    Size: 36\n    Links: 1\n    ```", "```\n    $> ./my-stat-v1\n    Usage: ./my-stat-v1 <file>\n    ```", "```\n    $> ./my-stat-v1 hello123\n    Can't read file hello123: No such file or directory\n    ```", "```\n    $> ln testfile1 my-file\n    ```", "```\n    $> cat my-file \n    This is just a small file we'll use\n    $> ls -l my-file \n    -rw-r--r-- 3 jake jake 36 okt 16 22:19 my-file\n    $> ./my-stat-v1 my-file \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    ```", "```\n    $> ls -l testfile1 \n    -rw-r--r-- 3 jake jake 36 okt 16 22:19 testfile1\n    $> ./my-stat-v1 testfile1 \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    ```", "```\n    $> ln my-file another-name\n    ```", "```\n    $> ls -l another-name \n    -rw-r--r-- 2 jake jake 36 okt 16 22:19 another-name\n    $> ./my-stat-v1 another-name \n    Inode: 19374124\n    Size: 36\n    Links: 3\n    ```", "```\n    $> rm testfile1\n    ```", "```\n    $> cat my-file \n    This is just a small file we'll use\n    $> ls -l my-file \n    -rw-r--r-- 2 jake jake 36 okt 16 22:19 my-file\n    $> ./my-stat-v1 my-file \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    $> cat another-name \n    This is just a small file we'll use\n    $> ls -l another-name \n    -rw-r--r-- 2 jake jake 36 okt 16 22:19 another-name\n    $> ./my-stat-v1 another-name \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    ```", "```\n    $> ln -s another-name my-soft-link\n    ```", "```\n    $> ls -l my-soft-link \n    lrwxrwxrwx 1 jake jake 12 okt 17 01:49 my-soft-link -> another-name\n    ```", "```\n    $> ./my-stat-v1 another-name \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    ```", "```\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <string.h>\n    #include <errno.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0if (argc != 3)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [target] \" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"[new-name]\\n\", argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if (link(argv[1], argv[2]) == -1)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't create link\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make new-name\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0new-name.c\u00a0\u00a0\u00a0-o new-name\n    ```", "```\n    $> ./new-name \n    Usage: ./new-name [target][new-name]\n    $> ./new-name my-file third-name\n    $> ./my-stat-v1 third-name\n    Inode: 19374124\n    Size: 36\n    Links: 3\n    $> ./new-name my-file /home/carl/hello\n    Can't create link: Permission denied\n    $> ./new-name my-file /mnt/localnas_disk2/\n    Can't create link: File exists\n    $> ./new-name my-file /mnt/localnas_disk2/third-name\n    Can't create link: Invalid cross-device link\n    ```", "```\n    #define _XOPEN_SOURCE 700\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <string.h>\n    #include <errno.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0if (argc != 3)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [target] \" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"[link]\\n\", argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if (symlink(argv[1], argv[2]) == -1)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't create link\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make new-symlink\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0new-symlink.c\u00a0\u00a0\u00a0-o new-symlink\n    ```", "```\n    $> ./new-symlink third-name new-soft-link\n    $> ls -l new-soft-link \n    lrwxrwxrwx 1 jake jake 10 okt 18 00:31 new-soft-link -> third-name\n    $> ./new-symlink third-name new-soft-link\n    Can't create link: File exists\n    $> ./new-symlink third-name /etc/new-soft-link\n    Can't create link: Permission denied\n    ```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <utime.h>\n    #define MAX_LENGTH 100\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[MAX_LENGTH] = { 0 };\n    \u00a0\u00a0\u00a0/* Check number of arguments */\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncat(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0/* Update the access and modification time */\n    \u00a0\u00a0\u00a0if ( utime(filename, NULL) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* If the file doesn't exist, create it */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (errno == ENOENT)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't create file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* If we can't update the timestamp,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0something is wrong */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't update timestamp\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v8\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v8.c\u00a0\u00a0\u00a0-o simple-touch-v8\n    ```", "```\n    $> ./simple-touch-v8 a-new-file\n    $> ls -l a-new-file \n    -rw-r--r-- 1 jake jake 0 okt 18 19:57 a-new-file\n    $> ls -l my-file \n    -rw-r--r-- 3 jake jake 36 okt 16 22:19 my-file\n    $> ls -l third-name \n    -rw-r--r-- 3 jake jake 36 okt 16 22:19 third-name\n    $> ./simple-touch-v8 third-name\n    $> ls -l my-file \n    -rw-r--r-- 3 jake jake 36 okt 18 19:58 my-file\n    $> ls -l third-name \n    -rw-r--r-- 3 jake jake 36 okt 18 19:58 third-name\n    $> ./simple-touch-v8 /etc/passwd\n    Can't change filename: Permission denied\n    $> ./simple-touch-v8 /etc/hello123\n    Can't create file: Permission denied\n    ```", "```\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <errno.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path]\\n\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ( unlink(argv[1]) == -1 )\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't remove file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make remove\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0remove.c\u00a0\u00a0\u00a0-o remove\n    ```", "```\n    $> ./my-stat-v1 my-file \n    Inode: 19374124\n    Size: 36\n    Links: 3\n    $> ./remove another-name \n    $> ./my-stat-v1 my-file \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    ```", "```\n    #include <stdio.h>\n    #include <sys/types.h>\n    #include <sys/stat.h>\n    #include <unistd.h>\n    #include <errno.h>\n    #include <string.h>\n    #include <pwd.h>\n    #include <grp.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0struct stat filestat;\n    \u00a0\u00a0\u00a0\u00a0struct passwd *userinfo;\n    \u00a0\u00a0\u00a0\u00a0struct group *groupinfo;\n    \u00a0\u00a0\u00a0\u00a0if ( argc != 2 )\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s <file>\\n\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ( stat(argv[1], &filestat) == -1 )\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't read file %s: %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[1], strerror(errno));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ( (userinfo = getpwuid(filestat.st_uid)) ==\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NULL )\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't get username\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ( (groupinfo = getgrgid(filestat.st_gid)) ==\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NULL )\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't get groupname\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0printf(\"Inode: %lu\\n\", filestat.st_ino);\n    \u00a0\u00a0\u00a0\u00a0printf(\"Size: %zd\\n\", filestat.st_size);\n    \u00a0\u00a0\u00a0\u00a0printf(\"Links: %lu\\n\", filestat.st_nlink);\n    printf(\"Owner: %d (%s)\\n\", filestat.st_uid, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0userinfo->pw_name);\n    printf(\"Group: %d (%s)\\n\", filestat.st_gid, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0groupinfo->gr_name);\n    \u00a0\u00a0\u00a0\u00a0printf(\"File mode: %o\\n\", filestat.st_mode);\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make my-stat-v2\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0my-stat-v2.c\u00a0\u00a0\u00a0-o my-stat-v2\n    ```", "```\n    $> ./my-stat-v2 third-name \n    Inode: 19374124\n    Size: 36\n    Links: 2\n    Owner: 1000 (jake)\n    Group: 1000 (jake)\n    File mode: 100644\n    $> ./my-stat-v2 /etc/passwd\n    Inode: 4721815\n    Size: 2620\n    Links: 1\n    Owner: 0 (root)\n    Group: 0 (root)\n    File mode: 100644\n    $> ./my-stat-v2 /bin/ls\n    Inode: 3540019\n    Size: 138856\n    Links: 1\n    Owner: 0 (root)\n    Group: 0 (root)\n    File mode: 100755\n    ```", "```\n$> ls -l Makefile \n```", "```\n-rw-r--r-- 1 jake devops 134 okt 27 23:39 Makefile\n```", "```\nrw- r-- r\u2014\n```", "```\n421 421 421\n```", "```\n 6\u00a0\u00a0\u00a04\u00a0\u00a0\u00a04\n```", "```\nrwx rwx r-x\n```", "```\n421 421 421\n```", "```\n 7\u00a0\u00a0\u00a07\u00a0\u00a0\u00a05\n```", "```\nrw- --- ---\n```", "```\n421 421 421\n```", "```\n 6\u00a0\u00a0\u00a00\u00a0\u00a0\u00a00\n```", "```\n 7\u00a0\u00a0\u00a05\u00a0\u00a0\u00a00\n```", "```\n421 401 000\n```", "```\nrwx r-x ---\n```", "```\ns s t\n```", "```\n4 2 1\n```", "```\nFile mode: 100755\n```", "```\n14\u00a0\u00a0\u00a0socket\n```", "```\n12\u00a0\u00a0\u00a0symbolic link\n```", "```\n10\u00a0\u00a0\u00a0regular file\n```", "```\n06\u00a0\u00a0\u00a0block device\n```", "```\n04\u00a0\u00a0\u00a0directory\n```", "```\n02\u00a0\u00a0\u00a0character device\n```", "```\n01\u00a0\u00a0\u00a0FIFO\n```", "```\n10\u00a0\u00a0= a regular file\n```", "```\n0\u00a0\u00a0\u00a0= no set-user-ID, set-group-ID or sticky bit is set\n```", "```\n755 = the user can read, write, and execute it. The group can read and execute it, and all others can also read and execute it.\n```", "```\ns\u00a0\u00a0\u00a0socket\n```", "```\nl\u00a0\u00a0\u00a0symbolic link\n```", "```\n-\u00a0\u00a0\u00a0regular file\n```", "```\nb\u00a0\u00a0\u00a0block device\n```", "```\nd\u00a0\u00a0\u00a0directory\n```", "```\nc\u00a0\u00a0\u00a0character device\n```", "```\np\u00a0\u00a0\u00a0FIFO\n```", "```\n    $> chmod -x my-stat-v2\n    ```", "```\n    $> ./my-stat-v2\n    bash: ./my-stat-v2: Permission denied\n    ```", "```\n    $> chmod 755 my-stat-v2\n    ```", "```\n    ./my-stat-v2 \n    Usage: ./my-stat-v2 <file>\n    ```", "```\n    #include <stdio.h>\n    #include <sys/stat.h>\n    #include <string.h>\n    #include <stdlib.h>\n    void printUsage(FILE *stream, char progname[]);\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0long int accessmode; /*To hold the access mode*/\n    \u00a0\u00a0\u00a0/* Check that the user supplied two arguments */\n    \u00a0\u00a0\u00a0if (argc != 3)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printUsage(stderr, argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* Simple check for octal numbers and \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0correct length */\n    \u00a0\u00a0\u00a0if( strspn(argv[1], \"01234567\\n\") \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0!= strlen(argv[1]) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|| ( strlen(argv[1]) != 3 && \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strlen(argv[1]) != 4 ) )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printUsage(stderr, argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* Convert to octal and set the permissions */\n    \u00a0\u00a0\u00a0accessmode = strtol(argv[1], NULL, 8);\n    \u00a0\u00a0\u00a0if (chmod(argv[2], accessmode) == -1)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't change permissions\");\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    void printUsage(FILE *stream, char progname[])\n    {\n    \u00a0\u00a0\u00a0\u00a0fprintf(stream, \"Usage: %s <numerical \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"permissions> <path>\\n\", progname);\n    }\n    ```", "```\n    $> make my-chmod\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0my-chmod.c\u00a0\u00a0\u00a0-o my-chmod\n    ```", "```\n    $> ./my-chmod \n    Usage: ./my-chmod <numerical permissions> <path>\n    $> ./my-chmod 700 my-stat-v2\n    $> ls -l my-stat-v2\n    -rwx------ 1 jake jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    $> ./my-chmod 750 my-stat-v2\n    $> ls -l my-stat-v2\n    -rwxr-x--- 1 jake jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    $> chmod 4755 my-stat-v2\n    $> ls -l my-stat-v2\n    -rwsr-xr-x 1 jake jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    $> chmod 7777 my-stat-v2\n    $> ls -l my-stat-v2\n    -rwsrwsrwt 1 jake jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    $> chmod 755 my-stat-v2\n    $> ls -l my-stat-v2\n    -rwxr-xr-x 1 jake jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    $> sudo chown root my-stat-v2\n    $> ls -l my-stat-v2\n    -rwxr-xr-x 1 root jake 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    $> sudo chown root:root my-stat-v2\n    $> ls -l my-stat-v2\n    -rwxr-xr-x 1 root root 17072 Nov\u00a0\u00a01 07:29 my-stat-v2\n    ```", "```\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <unistd.h>\n    #include <sys/types.h>\n    #include <pwd.h>\n    #include <grp.h>\n    #include <string.h>\n    #include <errno.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0struct passwd *user; /* struct for getpwnam */\n    \u00a0\u00a0\u00a0struct group *grp; /* struct for getgrnam */\n    \u00a0\u00a0\u00a0char *username = { 0 }; /* extracted username */\n    \u00a0\u00a0\u00a0char *groupname = { 0 }; /*extracted groupname*/\n    \u00a0\u00a0\u00a0unsigned int uid, gid; /* extracted UID/GID */\n    \u00a0\u00a0\u00a0/* Check that the user supplied two arguments \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(filename and user or user:group) */\n    \u00a0\u00a0\u00a0if (argc != 3)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [user][:group]\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\" [path]\\n\", argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n     /* Extract username and groupname */\n    \u00a0\u00a0\u00a0username = strtok(argv[1], \":\");\n    \u00a0\u00a0\u00a0groupname = strtok(NULL, \":\");\n\n    \u00a0\u00a0\u00a0if ( (user = getpwnam(username)) == NULL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Invalid username\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0uid = user->pw_uid; /* get the UID */\n    \u00a0\u00a0\u00a0if (groupname != NULL) /* if we typed a group */\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( (grp = getgrnam(groupname)) == NULL )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Invalid groupname\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gid = grp->gr_gid; /* get the GID */\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* if no group is specifed, -1 won't change \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it (man 2 chown) */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gid = -1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0/* update user/group (argv[2] is the filename)*/\n    \u00a0\u00a0\u00a0if ( chown(argv[2], uid, gid) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't change owner/group\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make my-chown\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0my-chown.c\u00a0\u00a0\u00a0-o my-chown\n    ```", "```\n    $> ls -l my-stat-v2 \n    -rwxr-xr-x 1 root root 17072 nov\u00a0\u00a07 19:59 my-stat-v2\n    $> sudo ./my-chown jake my-stat-v2 \n    $> ls -l my-stat-v2 \n    -rwxr-xr-x 1 jake root 17072 nov\u00a0\u00a07 19:59 my-stat-v2\n    $> sudo ./my-chown carl:carl my-stat-v2 \n    $> ls -l my-stat-v2 \n    -rwxr-xr-x 1 carl carl 17072 nov\u00a0\u00a07 19:59 my-stat-v2\n    ```", "```\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <sys/types.h>\n    #include <sys/stat.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0int fd; /* for the file descriptor */\n    \u00a0\u00a0\u00a0if (argc != 3)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path] [string]\\n\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* Open the file (argv[1]) and create it if it \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0doesn't exist and set it in read-write mode. \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Set the access mode to 644 */\n    \u00a0\u00a0\u00a0if ( (fd = open(argv[1], O_CREAT|O_RDWR, 00644)) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0== -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for writing\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* write content to file */\n    \u00a0\u00a0\u00a0if ( (write(fd, argv[2], strlen(argv[2]))) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0== -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't write to file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make fd-write\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0fd-write.c\u00a0\u00a0\u00a0-o fd-write\n    ```", "```\n    $> ./fd-write testfile1.txt \"Hello! How are you doing?\"\n    $> cat testfile1.txt \n    Hello! How are you doing?$>*Enter*\n    $> ls -l testfile1.txt \n    -rw-r--r-- 1 jake jake 2048 nov\u00a0\u00a08 16:34 testfile1.txt\n    $> ./fd-write testfile1.txt \"A new text\"\n    $> cat testfile1.txt \n    A new text are you doing?$>\n    ```", "```\n    $> head -n 3 /etc/passwd | xargs -0 \\\n    > ./fd-write testfile1.txt \n    $> cat testfile1.txt \n    root:x:0:0:root:/root:/bin/bash\n    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n    bin:x:2:2:bin:/bin:/usr/sbin/nologin\n    ```", "```\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <fcntl.h>\n    #include <sys/stat.h>\n    #include <sys/types.h>\n    #define MAXSIZE 4096\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0int fd; /* for the file descriptor */\n    \u00a0\u00a0\u00a0int maxread; /* the maximum we want to read*/\n    \u00a0\u00a0\u00a0off_t filesize; /* for the file size */\n    \u00a0\u00a0\u00a0struct stat fileinfo; /* struct for fstat */\n    \u00a0\u00a0\u00a0char rbuf[MAXSIZE] = { 0 }; /* the read buffer*/\n\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path]\\n\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0/* open the file in read-only mode and get\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the file size */\n    \u00a0\u00a0\u00a0if ( (fd = open(argv[1], O_RDONLY)) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for reading\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0fstat(fd, &fileinfo);\n    \u00a0\u00a0\u00a0filesize = fileinfo.st_size;\n    \u00a0\u00a0\u00a0/* determine the max size we want to read\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0so we don't overflow the read buffer */\n    \u00a0\u00a0\u00a0if ( filesize >= MAXSIZE )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxread = MAXSIZE-1;\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxread = filesize;\n\n    \u00a0\u00a0\u00a0/* read the content and print it */\n    \u00a0\u00a0\u00a0if ( (read(fd, rbuf, maxread)) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't read file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0printf(\"%s\", rbuf);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make fd-read\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0fd-read.c\u00a0\u00a0\u00a0-o fd-read\n    ```", "```\n    $> ./fd-read testfile1.txt \n    root:x:0:0:root:/root:/bin/bash\n    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n    bin:x:2:2:bin:/bin:/usr/sbin/nologin\n    $> ./fd-read Makefile \n    CC=gcc\n    CFLAGS=-Wall -Wextra -pedantic -std=c99\n    $> ./fd-read /etc/shadow\n    Can't open file for reading: Permission denied\n    $> ./fd-read asdfasdf\n    Can't open file for reading: No such file or directory\n    ```", "```\n    #include <stdio.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0FILE *fp; /* pointer to a file stream */\n    \u00a0\u00a0\u00a0char linebuf[1024] = { 0 }; /* line buffer */\n    \u00a0\u00a0\u00a0if ( argc != 2 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path]\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* open file with write mode */\n    \u00a0\u00a0\u00a0if ( (fp = fopen(argv[1], \"w\")) == NULL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for writing\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0} \n\n    \u00a0\u00a0\u00a0/*loop over each line and write it to the file*/\n    \u00a0\u00a0\u00a0while(fgets(linebuf, sizeof(linebuf), stdin) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0!= NULL)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(fp, linebuf);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0fclose(fp); /* close the stream */\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make stream-write\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0stream-write.c\u00a0\u00a0\u00a0-o stream-write\n    ```", "```\n    $> ./stream-write my-test-file.txt\n    Hello! How are you doing?\n    I'm doing just fine, thank you. \n    *Ctrl*+*D*\n    $> cat my-test-file.txt \n    Hello! How are you doing?\n    I'm doing just fine, thank you.\n    $> cat /etc/passwd | ./stream-write my-test-file.txt\n    $> tail -n 3 my-test-file.txt \n    telegraf:x:999:999::/etc/telegraf:/bin/false\n    _rpc:x:103:65534::/run/rpcbind:/usr/sbin/nologin\n    systemd-coredump:x:997:997:systemd Core Dumper:/:/usr/sbin/nologin\n    $> diff /etc/passwd my-test-file.txt\n    $> ./stream-write /a-new-file.txt\n    Can't open file for writing: Permission denied\n    ```", "```\n    #include <stdio.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0FILE *fp; /* pointer to a file stream */\n    \u00a0\u00a0\u00a0char linebuf[1024] = { 0 }; /* line buffer */\n    \u00a0\u00a0\u00a0if ( argc != 2 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path]\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0/* open file with read mode */\n    \u00a0\u00a0\u00a0if ( (fp = fopen(argv[1], \"r\")) == NULL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for reading\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0} \n\n    \u00a0\u00a0\u00a0/* loop over each line and write it to stdout */\n    \u00a0\u00a0\u00a0while(fgets(linebuf, sizeof(linebuf), fp) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0!= NULL)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%s\", linebuf);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0fclose(fp); /* close the stream */\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make stream-read\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0stream-read.c\u00a0\u00a0\u00a0-o stream-read\n    ```", "```\n    $> ./stream-read testfile1.txt \n    root:x:0:0:root:/root:/bin/bash\n    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n    bin:x:2:2:bin:/bin:/usr/sbin/nologin\n    $> ./stream-read Makefile \n    CC=gcc\n    CFLAGS=-Wall -Wextra -pedantic -std=c99\n    ```", "```\n    #include <stdio.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0FILE *fp;\n    \u00a0\u00a0\u00a0float x[2];\n    \u00a0\u00a0\u00a0if ( (fp = fopen(\"my-binary-file\", \"wb\")) == 0 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't open file for \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"writing\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0printf(\"Type two floating point numbers, \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"separated by a space: \");\n    \u00a0\u00a0\u00a0scanf(\"%f %f\", &x[0], &x[1]);\n    \u00a0\u00a0\u00a0fwrite(&x, sizeof(float), \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sizeof(x) / sizeof(float), fp);\n    \u00a0\u00a0\u00a0fclose(fp);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make binary-write\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0binary-write.c\u00a0\u00a0\u00a0-o binary-write\n    ```", "```\n    $> ./binary-write \n    Type two floating point numbers, separated by a space: 3.14159 2.71828\n    $> file my-binary-file \n    my-binary-file: data\n    $> hexdump -C my-binary-file \n    00000000\u00a0\u00a0d0 0f 49 40 4d f8 2d 40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|..I@M.-@|\n    00000008\n    ```", "```\n    #include <stdio.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0FILE *fp;\n    \u00a0\u00a0\u00a0float x[2];\n    \u00a0\u00a0\u00a0if ( (fp = fopen(\"my-binary-file\", \"rb\")) == 0 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't open file for \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"reading\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0fread(&x, sizeof(float), \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sizeof(x) / sizeof(float), fp);\n    \u00a0\u00a0\u00a0printf(\"The first number was: %f\\n\", x[0]);\n    \u00a0\u00a0\u00a0printf(\"The second number was: %f\\n\", x[1]);\n    \u00a0\u00a0\u00a0fclose(fp);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make binary-read\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0binary-read.c\u00a0\u00a0\u00a0-o binary-read\n    ```", "```\n    $> ./binary-read \n    The first number was: 3.141590\n    The second number was: 2.718280\n    ```", "```\nfwrite(&x, sizeof(float), sizeof(x) / sizeof(float), fp);\n```", "```\nfseek(fp, 0, SEEK_END); /* move to the end of the file */\n```", "```\nbytes = ftell(fp); /* the total number of bytes */\n```", "```\nrewind(fp); /* go back to the start of the file */\n```", "```\nitems = bytes / sizeof(float); /*number of items (floats)*/\n```", "```\n    #include <stdio.h>\n    #include <unistd.h>\n    #include <fcntl.h>\n    #include <sys/stat.h>\n    #include <sys/types.h>\n    #include <stdlib.h>\n    #define MAXSIZE 4096\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0int fd; /* for the file descriptor */\n    \u00a0\u00a0\u00a0int maxread; /* the maximum we want to read*/\n    \u00a0\u00a0\u00a0off_t filesize; /* for the file size */\n    \u00a0\u00a0\u00a0struct stat fileinfo; /* struct for fstat */\n    \u00a0\u00a0\u00a0char rbuf[MAXSIZE] = { 0 }; /* the read buffer */\n    \u00a0\u00a0\u00a0if (argc < 3 || argc > 4)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path] [from pos] \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"[bytes to read]\\n\", argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0/* open the file in read-only mode and get\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the file size */\n    \u00a0\u00a0\u00a0if ( (fd = open(argv[1], O_RDONLY)) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for reading\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0fstat(fd, &fileinfo);\n    \u00a0\u00a0\u00a0filesize = fileinfo.st_size;\n    \u00a0\u00a0\u00a0/* determine the max size we want to read\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0so we don't overflow the read buffer */\n    \u00a0\u00a0\u00a0if ( filesize >= MAXSIZE )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxread = MAXSIZE-1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else if ( argv[3] != NULL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( atoi(argv[3]) >= MAXSIZE )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"To big size specified\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxread = atoi(argv[3]);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxread = filesize;\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    \u00a0\u00a0\u00a0/* move the read position */\n    \u00a0\u00a0\u00a0lseek(fd, atoi(argv[2]), SEEK_SET);\n    \u00a0\u00a0\u00a0/* read the content and print it */\n    \u00a0\u00a0\u00a0if ( (read(fd, rbuf, maxread)) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't read file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0printf(\"%s\\n\", rbuf);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make fd-seek\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0fd-seek.c\u00a0\u00a0\u00a0-o fd-seek\n    ```", "```\n    $> ./fd-seek /etc/passwd 40 100\n    :1:1:daemon:/usr/sbin:/usr/sbin/nologin\n    bin:x:2:2:bin:/bin:/usr/sbin/nologin\n    sys:x:3:3:sys:/dev:/usr\n    $> ./fd-seek Makefile 10\n    AGS=-Wall -Wextra -pedantic -std=c99\n    $> ./fd-seek Makefile\n    Usage: ./fd-seek [path] [from pos] [bytes to read]\n    ```", "```\n    #include <stdio.h>\n    #include <stdlib.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0int ch; /* for each character */\n    \u00a0\u00a0\u00a0FILE *fp; /* pointer to a file stream */\n    \u00a0\u00a0\u00a0if ( argc < 3 || argc > 4 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Usage: %s [path] [from pos]\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\" [to pos]\\n\", argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n\n    \u00a0\u00a0\u00a0/* open file with read mode */\n    \u00a0\u00a0\u00a0if ( (fp = fopen(argv[1], \"r\")) == NULL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't open file for reading\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0} \n\n    \u00a0\u00a0\u00a0fseek(fp, atoi(argv[2]), SEEK_SET);\n    \u00a0\u00a0\u00a0/* loop over each line and write it to stdout */\n    \u00a0\u00a0\u00a0while( (ch = fgetc(fp)) != EOF )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( argv[3] != NULL)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( ftell(fp) >= atoi(argv[3]) )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0putchar(ch);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0printf(\"\\n\");\n    \u00a0\u00a0\u00a0fclose(fp); /* close the stream */\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make stream-seek\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0stream-seek.c\u00a0\u00a0\u00a0-o stream-seek\n    ```", "```\n    $> ./stream-seek /etc/passwd 2000 2100\n    24:Libvirt Qemu,,,:/var/lib/libvirt:/bin/false\n    Debian-exim:x:120:126::/var/spool/exim4:/bin/false\n    s\n    $> ./stream-seek Makefile 20\n    -Wextra -pedantic -std=c99\n    ```"]