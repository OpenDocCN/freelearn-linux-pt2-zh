["```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], PATH_MAX-1);\n    \u00a0\u00a0\u00a0creat(filename, 00644);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v1\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v1.c\u00a0\u00a0\u00a0-o simple-touch-v1\n    ```", "```\n    $> ./simple-touch-v1 \n    You must supply a filename as an argument\n    $> ./simple-touch-v1 my-test-file\n    $> ls -l my-test-file \n    -rw-r--r-- 1 jake jake 0 okt 12 22:46 my-test-file\n    ```", "```\n    $> ./simple-touch-v1 /abcd1234\n    ```", "```\n    $> ls -l /abcd1234\n    ls: cannot access '/abcd1234': No such file or directory\n    ```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], PATH_MAX-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    fprintf(stderr, \"Can't create file %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filename);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v2\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v2.c\u00a0\u00a0\u00a0-o simple-touch-v2\n    ```", "```\n    $> ./simple-touch-v2 hello123\n    $> ./simple-touch-v2 /abcd1234\n    Couldn't create file /abcd1234\n    ```", "```\n    #include <stdio.h>\n    #include <math.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0int number = 9999;\n    \u00a0\u00a0\u00a0double answer;\n    \u00a0\u00a0\u00a0if ( (answer = pow(number, number)) == HUGE_VAL )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"A huge value\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%lf\\n\", answer);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc -Wall -Wextra -pedantic -lm huge-test.c \\\n    > -o huge-test\n    $> ./huge-test \n    A huge value\n    ```", "```\n    #include <stdio.h>\n    #include <string.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0char buf[10] = { 0 };\n    \u00a0\u00a0\u00a0\u00a0strcat(buf, argv[1]);\n    \u00a0\u00a0\u00a0\u00a0printf(\"Text: %s\\n\", buf);\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make str-unsafe\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0str-unsafe.c\u00a0\u00a0\u00a0-o str-unsafe\n    str-unsafe.c: In function 'main':\n    str-unsafe.c:4:14: warning: unused parameter 'argc' [-Wunused-parameter]\n     int main(int argc, char *argv[])\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0~~~~^~~~\n    ```", "```\n    $> ./str-unsafe \n    Segmentation fault\n    $> ./str-unsafe hello\n    Text: hello\n    $> ./str-unsafe \"hello! how are you doing?\"\n    Text: hello! how are you doing?\n    Segmentation fault\n    ```", "```\n    #include <stdio.h>\n    #include <string.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Supply exactly one \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0char buf[10] = { 0 };\n    \u00a0\u00a0\u00a0strncat(buf, argv[1], sizeof(buf)-1);\n    \u00a0\u00a0\u00a0printf(\"Test: %s\\n\", buf);\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make str-safe\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0str-safe.c\u00a0\u00a0\u00a0-o str-safe\n    ```", "```\n    $> ./str-safe \n    Supply exactly one argument\n    $> ./str-safe hello\n    Text: hello\n    $> ./str-safe \"hello, how are you doing?\"\n    Text: hello, ho\n    $> ./str-safe asdfasdfasdfasdfasdfasdfasdfasdf\n    Text: asdfasdfa\n    ```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't create file %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filename);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (errno == EACCES)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Permission denied\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Unknown error\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v3\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v3.c\u00a0\u00a0\u00a0-o simple-touch-v3\n    ```", "```\n    $> ./simple-touch-v3 asdf\n    $> ls -l asdf\n    -rw-r--r-- 1 jake jake 0 okt 13 23:30 asdf\n    $> ./simple-touch-v3 /asdf\n    Can't create file /asdf\n    Permission denied\n    $> ./simple-touch-v3 /non-existent-dir/hello\n    Can't create file /non-existent-dir/hello\n    Unknown error\n    ```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    fprintf(stderr, \"Can't create file %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filename);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (errno == EACCES)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Permission denied\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else if (errno == ENOENT)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Parent directories does \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"not exist\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Unknown error\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v4\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v4.c\u00a0\u00a0\u00a0-o simple-touch-v4\n    ```", "```\n    $> ./simple-touch-v4 asdf123\n    $> ./simple-touch-v4 /hello\n    Can't create file /hello\n    Permission denied\n    $> ./simple-touch-v4 /non-existent/hello\n    Can't create file /non-existent/hello\n    Parent directories do not exist\n    ```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0int errornum;\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errornum = errno;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Can't create file %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0filename);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"%s\\n\", strerror(errornum));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v5\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v5.c\u00a0\u00a0\u00a0-o simple-touch-v5\n    ```", "```\n    $> ./simple-touch-v5 hello123 \n    $> ls hello123\n    hello123\n    $> ./simple-touch-v5 /asdf123\n    Can't create file /asdf123\n    Permission denied\n    $> ./simple-touch-v5 /asdf123/hello\n    Can't create file /asdf123/hello\n    No such file or directory\n    How it works\u2026\n    ```", "```\nfprintf(stderr, \"%s\\n\", strerror(error));\n```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't create file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v6\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v6.c\u00a0\u00a0\u00a0-o simple-touch-v6\n    ```", "```\n    $> ./simple-touch-v6 abc123\n    $> ./simple-touch-v6 /asdf123\n    Can't create file: Permission denied\n    $> ./simple-touch-v6 /asdf123/hello\n    Can't create file: No such file or directory\n    How it works\u2026\n    ```", "```\nperror(\"Can't create file\");\n```", "```\n    #include <stdio.h>\n    #include <fcntl.h>\n    #include <string.h>\n    #include <errno.h>\n    #include <linux/limits.h>\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char filename[PATH_MAX] = { 0 };\n    \u00a0\u00a0\u00a0if (argc != 2)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"You must supply a filename \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"as an argument\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0strncpy(filename, argv[1], sizeof(filename)-1);\n    \u00a0\u00a0\u00a0if ( creat(filename, 00644) == -1 )\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0perror(\"Can't create file\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return errno;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> make simple-touch-v7\n    gcc -Wall -Wextra -pedantic -std=c99\u00a0\u00a0\u00a0\u00a0simple-touch-v7.c\u00a0\u00a0\u00a0-o simple-touch-v7\n    ```", "```\n    $> ./simple-touch-v7 asdf\n    $> echo $\n    0\n    $> ./simple-touch-v7 /asdf\n    Can't create file: Permission denied\n    $> echo $?\n    13\n    $> ./simple-touch-v7 /asdf/hello123\n    Can't create file: No such file or directory\n    $> echo $?\n    2\n    ```"]