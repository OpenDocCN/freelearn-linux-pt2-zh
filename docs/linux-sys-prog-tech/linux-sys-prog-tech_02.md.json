["```\n    $> test -e /\n    $> echo $?\n    0\n    $> test -e /asdfasdf\n    $> echo $?\n    1\n    ```", "```\n    #!/bin/bash \n    # Check if the user supplied exactly one argument \n    if [ \"$#\" -ne 1 ]; then \n    \u00a0\u00a0\u00a0\u00a0echo \"You must supply exactly one argument.\" \n    \u00a0\u00a0\u00a0\u00a0echo \"Example: $0 /etc\" \n    \u00a0\u00a0\u00a0\u00a0exit 1 # Return with value 1 \n    fi \n    # Check if the file/directory exists \n    test -e \"$1\" # Perform the actual test\n    if [ \"$?\" -eq 0 ]; then \n    \u00a0\u00a0\u00a0\u00a0echo \"File or directory exists\" \n    elif [ \"$?\" -eq 1 ]; then \n    \u00a0\u00a0\u00a0\u00a0echo \"File or directory does not exist\" \n    \u00a0\u00a0\u00a0\u00a0exit 3 # Return with a special code so other\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# programs can use the value to see if a \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# file dosen't exist\n    else \n    \u00a0\u00a0\u00a0\u00a0echo \"Unknown return value from test...\"\n    \u00a0\u00a0\u00a0\u00a0exit 1 # Unknown error occured, so exit with 1\n    fi \n    exit 0 # If the file or directory exists, we exit \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# with \n    ```", "```\n    $> chmod +x exist.sh\n    ```", "```\n    $> ./exist.sh\u00a0\u00a0\n    You must supply exactly one argument. \n    Example: ./exist.sh /etc \n    $> echo $?\n    1\n    $> ./exist.sh /etc \n    File or directory exists \n    $> echo $?\n    0\n    $> ./exist.sh /asdfasdf \n    File or directory does not exist\n    $> echo $?\n    3\n    ```", "```\n    $> ./exist.sh / && echo \"Nice, that one exists\"\n    File or directory exists\n    Nice, that one exists\n    $> ./exist.sh /asdf && echo \"Nice, that one exists\"\n    File or directory does not exist\n    ```", "```\n    $> ./exist.sh /asdf &> /dev/null; \\\n    > if [ $? -eq 3 ]; then echo \"That doesn't exist\"; fi\n    That doesn't exist\n    ```", "```\n$> ./exist.sh / && echo \"Nice, that one exists\"\n```", "```\n$> ./exist.sh / || echo \"That doesn't exist\"\n```", "```\nFile or directory exists\n```", "```\n$> ./exist.sh /asdf || echo \"That doesn't exist\"\n```", "```\nFile or directory does not exist\n```", "```\nThat doesn't exist\n```", "```\n    #include <stdio.h>\n    int func1(void);\n    int func2(void);\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0printf(\"Inside main\\n\");\n    \u00a0\u00a0\u00a0printf(\"Calling function one\\n\");\n    \u00a0\u00a0\u00a0if (func1())\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Everything ok from function one\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Return with 0 from main - all ok\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 0;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Caught an error from function one\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Return with 1 from main - error\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0; /* We shouldn't reach this, but \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0just in case */\n    }\n    int func1(void)\n    {\n    \u00a0\u00a0\u00a0printf(\"Inside function one\\n\");\n    \u00a0\u00a0\u00a0printf(\"Calling function two\\n\");\n    \u00a0\u00a0\u00a0if (func2())\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Everything ok from function two\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Caught an error from function two\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 0;\n    \u00a0\u00a0\u00a0}\n    }\n    int func2(void)\n    {\n    \u00a0\u00a0\u00a0printf(\"Inside function two\\n\");\n    \u00a0\u00a0\u00a0printf(\"Returning with 0 (error) from \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"function two\\n\");\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc functions_ver1.c -o functions_ver1\n    ```", "```\n    $> ./functions-ver1\n    Inside main \n    Calling function one \n    Inside function one \n    Calling function two \n    Inside function two \n    Returning with 0 (error) from function two \n    Caught an error from function two \n    Caught an error from function one \n    Return with 1 from main \u2013 error\n    ```", "```\n    $> echo $?\n    1\n    ```", "```\n    #include <stdio.h>\n    #include <stdlib.h>\n    int func1(void);\n    int func2(void);\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0printf(\"Inside main\\n\");\n    \u00a0\u00a0\u00a0printf(\"Calling function one\\n\");\n    \u00a0\u00a0\u00a0if (func1())\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Everything ok from function one\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Return with 0 from main - all ok\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 0;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Caught an error from funtcion one\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Return with 1 from main - error\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0; /* We shouldn't reach this, but just \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0in case */\n    }\n    int func1(void)\n    {\n    \u00a0\u00a0\u00a0printf(\"Inside function one\\n\");\n    \u00a0\u00a0\u00a0printf(\"Calling function two\\n\");\n    \u00a0\u00a0\u00a0if (func2())\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Everything ok from function two\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exit(0);\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Caught an error from function two\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exit(1);\n    \u00a0\u00a0\u00a0}\n    }\n    ```", "```\n    $> gcc functions_ver2.c -o functions_ver2\n    ```", "```\n    $> ./functions_ver2\n    Inside main\n    Calling function one\n    Inside function one\n    Calling function two\n    Inside function two\n    Returning with (error) from function two\n    ```", "```\n    $> echo $?\n    1\n    ```", "```\n    $> cd\n    $> ls / > root-directory.txt\n    ```", "```\n    $> cat root-directory.txt\n    ```", "```\n    $> wc\n    hello,\n    how are you?\n    *Ctrl+D*\n    \u00a0\u00a0\u00a0\u00a0\u00a02 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a04 \u00a0\u00a0\u00a0\u00a0\u00a020\n    ```", "```\n    $> wc < root-directory.txt\n    29\u00a0\u00a029 177\n    ```", "```\n    $> ls /asdfasdf > non-existent.txt\n    ls: cannot access '/asdfasdf': No such file or directory\n    ```", "```\n    $> ls /asdfasdf 2> errors.txt\n    ```", "```\n    $> cat errors.txt\n    ls: cannot access '/asdfasdf': No such file or directory\n    ```", "```\n    $> ls /asdfasdf > root-directory.txt 2> errors.txt\n    ```", "```\n    $> ls /asdfasdf &> all-output.txt\n    ```", "```\n    $> wc < all-output.txt > wc-output.txt 2> \\\n    > wc-errors.txt\n    ```", "```\n    $> echo hello > /dev/stderr\n    hello\n    ```", "```\n    $> echo hello 1>&2\n    hello\n    ```", "```\n    $> (echo hello > /dev/stderr) > hello.txt\n    hello\n    $> (echo hello 1>&2) > hello.txt\n    hello\n    ```", "```\n    $> wc < /dev/stdin\n    hello, world!\n    *Ctrl+D*\n    \u00a0\u00a0\u00a0\u00a0\u00a01 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a02 \u00a0\u00a0\u00a0\u00a0\u00a014\n    ```", "```\n    $> (ls /asdfasdf 2> /dev/stdout) > \\ \n    > error-msg-from-stdout.txt\n    $> cat error-msg-from-stdout.txt \n    ls: cannot access '/asdfasdf': No such file or directory\n    ```", "```\n$> ls / > /dev/fd/2\n```", "```\n    $> ls / | wc -l\n    29\n    ```", "```\n    $> ls -l / | grep lrwx\n    lrwxrwxrwx\u00a0\u00a0\u00a01 root root\u00a0\u00a0\u00a0\u00a031 okt 21 06:53 initrd.img -> boot/initrd.img-4.19.0-12-amd64\n    lrwxrwxrwx\u00a0\u00a0\u00a01 root root\u00a0\u00a0\u00a0\u00a031 okt 21 06:53 initrd.img.old -> boot/initrd.img-4.19.0-11-amd64\n    lrwxrwxrwx\u00a0\u00a0\u00a01 root root\u00a0\u00a0\u00a0\u00a028 okt 21 06:53 vmlinuz -> boot/vmlinuz-4.19.0-12-amd64\n    lrwxrwxrwx\u00a0\u00a0\u00a01 root root\u00a0\u00a0\u00a0\u00a028 okt 21 06:53 vmlinuz.old -> boot/vmlinuz-4.19.0-11-amd64\n    ```", "```\n    $> ls -l / | grep lrwx | awk '{ print $9 }'\n    initrd.img\n    initrd.img.old\n    vmlinuz\n    vmlinuz.old\n    ```", "```\n    $> ls -l / | grep lrwx | awk '{ print $9 }' \\\n    > | sed 's/^/This is a link: /'\n    This is a link: initrd.img\n    This is a link: initrd.img.old\n    This is a link: vmlinuz\n    This is a link: vmlinuz.old\n    ```", "```\n$> ls / | cat\n```", "```\nsed 's/^/This is a link: /'\n```", "```\n$> ls / | cat | grep tmp\n```", "```\ntmp\n```", "```\n$> ls / | grep tmp\n```", "```\ntmp\n```", "```\n$> cat /etc/passwd | grep root\n```", "```\nroot:x:0:0:root:/root:/bin/bash\n```", "```\n$> grep root /etc/passwd\n```", "```\nroot:x:0:0:root:/root:/bin/bash\n```", "```\n    #define _POSIX_C_SOURCE 200809L\n    #include <stdio.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0printf(\"A regular message on stdout\\n\");\n    \u00a0\u00a0\u00a0/* Using streams with fprintf() */\n    \u00a0\u00a0\u00a0fprintf(stdout, \"Also a regular message on \" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\t \"stdout\\n\");\n    \u00a0\u00a0\u00a0fprintf(stderr, \"An error message on stderr\\n\");\n    \u00a0\u00a0\u00a0/* Using file descriptors with dprintf().\n    \u00a0\u00a0\u00a0\u00a0* This requires _POSIX_C_SOURCE 200809L \n    \u00a0\u00a0\u00a0\u00a0* (man 3 dprintf)*/\n    \u00a0\u00a0\u00a0dprintf(1, \"A regular message, printed to \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t\u00a0\u00a0\"fd 1\\n\");\n    \u00a0\u00a0\u00a0dprintf(2, \"An error message, printed to \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t\u00a0\u00a0\u00a0\"fd 2\\n\");\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc output.c -o output\n    ```", "```\n    $> ./output \n    A regular message on stdout\n    Also a regular message on stdout\n    An error message on stderr\n    A regular message, printed to fd 1\n    An error message, printed to fd 2\n    ```", "```\n    $> ./output 2> /dev/null \n    A regular message on stdout\n    Also a regular message on stdout\n    A regular message, printed to fd 1\n    ```", "```\n    $> ./output > /dev/null\n    An error message on stderr\n    An error message, printed to fd 2\n    ```", "```\n    $> ./output &> /dev/null\n    ```", "```\n    #include <stdio.h>\n    #include <string.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0\u00a0char c[20] = { 0 };\n    \u00a0\u00a0\u00a0\u00a0char newcase[20] = { 0 };\n    \u00a0\u00a0\u00a0\u00a0int i;\n    \u00a0\u00a0\u00a0\u00a0while(fgets(c, sizeof(c), stdin) != NULL)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for(i=0; i<=sizeof(c); i++)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* Upper case to lower case */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( (c[i] >= 65) && (c[i] <= 90) )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newcase[i] = c[i] + 32;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* Lower case to upper case */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ( (c[i] >= 97 && c[i] <= 122) )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newcase[i] = c[i] - 32;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%s\\n\", newcase);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* zero out the arrays so there are no\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0left-overs in the next run */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memset(c, 0, sizeof(c));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memset(newcase, 0, sizeof(newcase));\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc case-changer.c -o case-changer\n    ```", "```\n    $> ./case-changer\n    hello\n    HELLO\n    AbCdEf\n    aBcDeF\n    ```", "```\n    $> ls / | head -n 5 | ./case-changer\n    BIN\n    BOOT\n    DEV\n    ETC\n    HOME\n    ```", "```\n    $> man ls | egrep '^[A-Z]+$' | ./case-changer \n    name\n    synopsis\n    description\n    author\n    copyrigh\n    ```", "```\nfgets(c, sizeof(c), stdin)\n```", "```\n#include <stdio.h>\n```", "```\nint main(void)\n```", "```\n{\n```", "```\n\u00a0\u00a0\u00a0\u00a0char c;\n```", "```\n\u00a0\u00a0\u00a0\u00a0for (c = 65; c<=90; c++)\n```", "```\n\u00a0\u00a0\u00a0\u00a0{\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%c = %d\u00a0\u00a0\u00a0\u00a0\", c, c); /* upper case */\n```", "```\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%c = %d\\n\", c+32, c+32); /* lower case */\n```", "```\n\u00a0\u00a0\u00a0\u00a0}\n```", "```\n\u00a0\u00a0\u00a0\u00a0return 0;\n```", "```\n}\n```", "```\n    10-minute average: 61 mph\n    30-minute average: 55 mph\n    45-minute average: 54 mph\n    60-minute average: 52 mph\n    90-minute average: 52 mph\n    99-minute average: nn mph\n    ```", "```\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <string.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0\u00a0char mph[10] = { 0 };\n    \u00a0\u00a0\u00a0\u00a0while(fgets(mph, sizeof(mph), stdin) != NULL)\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* Check if mph is numeric \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* (and do conversion) */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if( strspn(mph, \"0123456789.-\\n\") == \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strlen(mph) )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%.1f\\n\", (atof(mph)*1.60934) );\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* If mph is NOT numeric, print error \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* and return */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Found non-numeric\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\" value\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc mph-to-kph.c -o mph-to-kph\n    ```", "```\n    $> ./mph-to-kph \n    50\n    80.5\n    60\n    96.6\n    100\n    160.9\n    hello\n    Found non-numeric value\n    $> echo $?\n    1\n    $> ./mph-to-kph\n    50\n    80.5\n    *Ctrl+D*\n    $> echo $?\n    0\n    ```", "```\n    $> cat avg.txt | awk '{ print $3 }'\n    61\n    55\n    54\n    52\n    52\n    nn\n    ```", "```\n    $> cat avg.txt | awk '{ print $3 }' | ./mph-to-kph \n    98.2\n    88.5\n    86.9\n    83.7\n    83.7\n    Found non-numeric value\n    ```", "```\n    $> (cat avg.txt | awk '{ print $3 }' | \\ \n    > ./mph-to-kph) 2> /dev/null\n    98.2\n    88.5\n    86.9\n    83.7\n    83.7\n    ```", "```\n    $> (cat avg.txt | awk '{ print $3 }' | \\ \n    > ./mph-to-kph) 2> /dev/null | sed 's/$/ km\\/h/'\n    98.2 km/h\n    88.5 km/h\n    86.9 km/h\n    83.7 km/h\n    83.7 km/h\n    ```", "```\nif( strspn(mph, \"0123456789.-\\n\") == strlen(mph) )\n```", "```\nsed 's/$/ km\\/h/'\n```", "```\n    #define _XOPEN_SOURCE 500\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <string.h>\n    #include <unistd.h\n    ```", "```\n    void printHelp(FILE *stream, char progname[]);\n    int main(int argc, char *argv[])\n    {\n    \u00a0\u00a0\u00a0char mph[10] = { 0 };\n    \u00a0\u00a0\u00a0int opt;\n    \u00a0\u00a0\u00a0int cont = 0; \n    ```", "```\n    /* Parse command-line options */\u00a0\u00a0\u00a0\u00a0\n    \u00a0\u00a0\u00a0while ((opt = getopt(argc, argv, \"ch\")) != -1)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0switch(opt)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 'h':\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printHelp(stdout, argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 0;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 'c':\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cont = 1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printHelp(stderr, argv[0]);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0}\n    ```", "```\n    while(fgets(mph, sizeof(mph), stdin) != NULL)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* Check if mph is numeric \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* (and do conversion) */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if( strspn(mph, \"0123456789.-\\n\") == \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strlen(mph) )\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"%.1f\\n\", (atof(mph)*1.60934) );\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* If mph is NOT numeric, print error \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* and return */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fprintf(stderr, \"Found non-numeric \" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"value\\n\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (cont == 1) /* Check if -c is set */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0continue; /* Skip and continue if \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* -c is set */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 1; /* Abort if -c is not set */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    void printHelp(FILE *stream, char progname[])\n    {\n    \u00a0\u00a0\u00a0fprintf(stream, \"%s [-c] [-h]\\n\", progname);\n    \u00a0\u00a0\u00a0fprintf(stream, \" -c continues even though a non\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"-numeric value was detected in the input\\n\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\" -h print help\\n\");\n    } \n    ```", "```\n    $> make mph-to-kph_v2\n    cc\u00a0\u00a0\u00a0\u00a0\u00a0mph-to-kph_v2.c\u00a0\u00a0\u00a0-o mph-to-kph_v2\n    ```", "```\n    $> ./mph-to-kph_v2 \n    60\n    96.6\n    40\n    64.4\n    hello\n    Found non-numeric value\n    ```", "```\n    $> ./mph-to-kph_v2 -c\n    50\n    80.5\n    90\n    144.8\n    hello\n    Found non-numeric value\n    10\n    16.1\n    20\n    32.2\n    ```", "```\n    10-minute average: 61 mph\n    30-minute average: 55 mph\n    45-minute average: 54 mph\n    60-minute average: 52 mph\n    90-minute average: 52 mph\n    99-minute average: nn mph\n    120-minute average: 49 mph\n    160-minute average: 47 mph\n    180-minute average: nn mph\n    error reading data from interface\n    200-minute average: 43 mph\n    ```", "```\n    $> cat avg-with-garbage.txt | awk '{ print $3 }'\n    61\n    55\n    54\n    52\n    52\n    nn\n    49\n    47\n    nn\n    data\n    43\n    ```", "```\n    $> cat avg-with-garbage.txt | awk '{ print $3 }' \\\n    > | ./mph-to-kph_v2 -c\n    98.2\n    88.5\n    86.9\n    83.7\n    83.7\n    Found non-numeric value\n    78.9\n    75.6\n    Found non-numeric value\n    Found non-numeric value\n    69.2\n    ```", "```\n    $> (cat avg-with-garbage.txt | awk '{ print $3 }' \\\n    > | ./mph-to-kph_v2 -c) 2> errors.txt 1> output.txt\n    ```", "```\n    $> cat output.txt \n    98.2\n    88.5\n    86.9\n    83.7\n    83.7\n    78.9\n    75.6\n    69.2\n    $> cat errors.txt \n    Found non-numeric value\n    Found non-numeric value\n    Found non-numeric value\n    ```", "```\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <string.h>\n    int main(void)\n    {\n    \u00a0\u00a0\u00a0/* Using getenv() to fetch env. variables */\n    \u00a0\u00a0\u00a0printf(\"Your username is %s\\n\", getenv(\"USER\"));\n    \u00a0\u00a0\u00a0printf(\"Your home directory is %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getenv(\"HOME\"));\n    \u00a0\u00a0\u00a0printf(\"Your preferred editor is %s\\n\", \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getenv(\"EDITOR\"));\n    \u00a0\u00a0\u00a0printf(\"Your shell is %s\\n\", getenv(\"SHELL\"));\n    \u00a0\u00a0\u00a0/* Check if the current terminal support colors*/\n    \u00a0\u00a0\u00a0if ( strstr(getenv(\"TERM\"), \"256color\")\u00a0\u00a0)\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/* Color the output with \\033 + colorcode */\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"\\033[0;31mYour \\033[0;32mterminal \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\\033[0;35msupport \"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\\033[0;33mcolors\\033[0m\\n\");\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\"Your terminal doesn't support\" \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\" colors\\n\");\n    \u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0return 0;\n    }\n    ```", "```\n    $> gcc env-var.c -o env-var\n    ```", "```\n    $> ./env-var \n    Your username is jake\n    Your home directory is /home/jake\n    Your preferred editor is vim\n    Your shell is /bin/bash\n    Your terminal support colors\n    ```", "```\n    $> echo $USER\n    jake\n    $> echo $HOME\n    /home/jake\n    $> echo $EDITOR\n    vim\n    $> echo $SHELL\n    /bin/bash\n    $> echo $TERM\n    screen-256color\n    ```", "```\n    $> export TERM=xterm\n    $> ./env-var \n    Your username is jake\n    Your home directory is /home/jake\n    Your preferred editor is vim\n    Your shell is /bin/bash\n    Your terminal doesn't support colors\n    ```", "```\n    $> export TERM=screen-256color\n    ```", "```\n    $> echo $TERM\n    xterm-256color\n    $> TERM=xterm ./env-var\n    Your username is jake\n    Your home directory is /home/jake\n    Your preferred editor is vim\n    Your shell is /bin/bash\n    Your terminal doesn't support colors\n    $> echo $TERM\n    xterm-256colo\n    ```", "```\n    $> env\n    ```", "```\n#define _POSIX_C_SOURCE 200112L\n```", "```\n#include <stdio.h>\n```", "```\n#include <stdlib.h>\n```", "```\nint main(void)\n```", "```\n{\n```", "```\n\u00a0\u00a0\u00a0\u00a0setenv(\"FULLNAME\", \"Jack-Benny\", 1);\n```", "```\n\u00a0\u00a0\u00a0\u00a0printf(\"Your full name is %s\\n\", getenv(\"FULLNAME\"));\n```", "```\n\u00a0\u00a0\u00a0\u00a0return 0;\n```", "```\n}\n```", "```\n$> gcc env-var-set.c -o env-var-set\n```", "```\n$> ./env-var-set \n```", "```\nYour full name is Jack-Benny\n```", "```\n$> echo $FULLNAME\n```"]