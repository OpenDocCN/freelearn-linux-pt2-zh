- en: Who Is Root?
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 谁是root？
- en: 'So far, user `elliot` has been able to do quite a few things on the system.
    However, there are a whole lot of things that user `elliot` can''t do! To demonstrate,
    let''s try to create a file named `happy` in the `/var` directory:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，用户`elliot`已经能够在系统上做了很多事情。但是，有很多事情用户`elliot`无法做！为了演示，让我们尝试在`/var`目录中创建一个名为`happy`的文件：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Oops! We got a `Permission denied` error.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！我们得到了`Permission denied`错误。
- en: 'Now let''s try to create a new directory named `games` in `/etc`:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试在`/etc`中创建名为`games`的新目录：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Again! We are getting the same error, `Permission denied`!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 再次！我们得到了相同的错误，`Permission denied`！
- en: So what's going on here? Well, the user `elliot` doesn't have permission to
    do whatever he wants on the system! So who then? Who has permission to do anything
    on the system? It's the root user.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这里发生了什么？嗯，用户`elliot`没有权限在系统上做任何他想做的事情！那么谁？谁有权限在系统上做任何事情？是root用户。
- en: '**WHO IS ROOT?**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**谁是root？**'
- en: '`root` is a Linux user that has permission to do anything on the system. `root`
    is also known as the superuser.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`root`是具有在系统上执行任何操作权限的Linux用户。`root`也被称为超级用户。'
- en: Accessing the root user
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问root用户
- en: 'You can run the `sudo -i` command to access the `root` user for the first time
    on your system:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以运行`sudo -i`命令首次访问系统上的`root`用户：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You will be prompted to enter your password, and then, all of a sudden, you
    have got superpowers!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示输入密码，然后突然之间，您拥有了超级权限！
- en: Notice how the command prompt changed instead of a dollar sign (`$`), it now
    shows a `#` to greet the root user.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意命令提示符的变化，而不是美元符号（`$`），它现在显示`#`来欢迎root用户。
- en: 'Let''s run the `whoami` command to make sure that we are now logged in as the
    root user:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行`whoami`命令，确保我们现在已登录为root用户：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Awesome! Now let''s display the current working directory:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在让我们显示当前工作目录：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Remember earlier that I told you that the home directory for the `root` user
    is `/root` and not under `/home`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 记得之前我告诉过你，`root`用户的主目录是`/root`而不是在`/home`下。
- en: '![](img/f5edc3f1-29b6-486b-b355-08e82f6ca86d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5edc3f1-29b6-486b-b355-08e82f6ca86d.png)'
- en: 'Figure 1: /root is the home directory for the root user'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：/root是root用户的主目录
- en: Now let's rerun both commands that we got permission denied for, but this time,
    we run both commands as the `root` user.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们重新运行我们两次被拒绝的命令，但这次，我们以`root`用户身份运行两个命令。
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As you can see, nothing can stop the `root` user from doing anything! Now let''s
    create the directory `games` in `/etc`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，没有什么可以阻止`root`用户做任何事情！现在让我们在`/etc`中创建目录`games`：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We got no error, and that's because you have the power to do whatever you want
    as the `root` user. But ALWAYS remember, with great power comes great responsibility.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有错误，这是因为您作为`root`用户有权进行任何操作。但是请永远记住，伴随着强大的力量而来的是巨大的责任。
- en: Setting the root password
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置root密码
- en: 'You can also use the `su` command to switch to the `root` user but first, you
    need to set the `root`''s password:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`su`命令切换到`root`用户，但首先，您需要设置`root`的密码：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Amazing, now exit the `root` user:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，现在退出`root`用户：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now you can use the `su root` command to switch to the `root` user:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以使用`su root`命令切换到`root`用户：
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The dash difference
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 破折号的区别
- en: 'Notice that my current working directory is now `/home/elliot` and not `/root`.
    If I want to change that, I can exit back to user `elliot` and rerun the `su`
    command but this time, I will add a dash (hyphen) before `root` as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我的当前工作目录现在是`/home/elliot`而不是`/root`。如果我想更改，我可以退出到用户`elliot`，然后重新运行`su`命令，但这次，在用户名之前加上破折号（连字符）。
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: So what is the difference?
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 那么有什么区别吗？
- en: Here's the deal. When you don't add the dash before the username, the shell
    preserves the current user shell environment settings, which includes the current
    working directory. On the other hand, when you add the dash, the shell acquires
    the environment settings of the new user (the user you switched to).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是交易。当您在用户名之前不添加破折号时，shell会保留当前用户的shell环境设置，其中包括当前工作目录。另一方面，当您添加破折号时，shell会获取新用户（您切换到的用户）的环境设置。
- en: 'So let''s do some practice. If you want to switch to user `elliot` but preserve
    `root`''s shell environment settings, then you don''t need the dash:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们练习一下。如果您想切换到用户`elliot`但保留`root`的shell环境设置，则不需要破折号：
- en: '[PRE11]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Notice how the current working directory didn''t change when I switched to
    user `elliot`. Now, let''s exit and switch back again to user `elliot`, but this
    time, we will put a dash before the username:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 注意当我切换到用户`elliot`时，当前工作目录没有更改。现在，让我们退出并再次切换到用户`elliot`，但这次，在用户名之前加上破折号：
- en: '[PRE12]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Now notice how the current working directory changed from `/root` to `/home/elliot`.
    So here, the shell acquired the environment settings of user `elliot`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在注意当前工作目录如何从`/root`更改为`/home/elliot`。因此，在这里，shell获取了用户`elliot`的环境设置。
- en: '**A COOL TIP**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**一个很酷的提示**'
- en: If you run `su` with no username, then `su` will switch to the root user. So
    if you want to save yourself some typing, you can omit the username every time
    you want to switch to the root user.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运行`su`而不指定用户名，则`su`将切换到root用户。因此，如果您想节省一些输入，每次想切换到root用户时都可以省略用户名。
- en: 'Let''s try out our cool tip! As user `elliot`, run the `su` command without
    specifying a username:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一下我们很酷的提示！作为用户`elliot`，运行`su`命令而不指定用户名：
- en: '[PRE13]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You can then enter the `root` password to log in as `root`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以输入`root`密码以登录为`root`。
- en: 'You can also use the dash to acquire `root`''s shell environment settings:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用破折号获取`root`的shell环境设置：
- en: '[PRE14]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This time I landed in `/root` because I used the dash.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我降落在`/root`，因为我使用了破折号。
- en: Well, this was a short chapter, but the `root` user certainly deserves a whole
    section by itself. Also, remember that you have got superpowers when you are the
    `root` user as you have the permission to do anything on your system. And so if
    you are not very careful, you can damage your system, and that's why there is
    a very famous Linux meme that says, "Don't drink and root!."
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，这是一个简短的章节，但`root`用户肯定值得有一个专门的部分。还要记住，当你是`root`用户时，你拥有超级权限，可以在系统上做任何事情。所以如果你不非常小心，你可能会损坏你的系统，这就是为什么有一个非常著名的Linux迷因说，“不要喝酒然后使用root！”
- en: Knowledge check
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知识检查
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下练习，打开你的终端并尝试解决以下任务：
- en: Switch to the `root` user.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到`root`用户。
- en: Change the password for the `root` user.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改`root`用户的密码。
- en: Switch to user `elliot` and land in `/home/elliot`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到用户`elliot`并登陆到`/home/elliot`。
- en: Now switch to user root but preserve the current working directory `/home- /elliot`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在切换到root用户，但保留当前工作目录`/home/elliot`。
- en: True or false
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 真或假
- en: The `root` user is the most powerful user in Linux.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`root`用户是Linux中最强大的用户。'
- en: Using the `su` command without specifying a username will switch you to the
    root user.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`su`命令而不指定用户名将切换到root用户。
- en: We use the `passroot` command to change the password for the `root` user.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用`passroot`命令来更改`root`用户的密码。
