- en: Everyone Needs Disk Space
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都需要磁盘空间
- en: In this chapter, you will learn how to manage your hard disk in Linux. You will
    learn how to create new partitions on your drive. Then you will learn how to create
    and mount filesystems. Finally, you will learn how to use LVM to create logical
    volumes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何在Linux中管理硬盘。您将学习如何在驱动器上创建新分区。然后您将学习如何创建和挂载文件系统。最后，您将学习如何使用LVM创建逻辑卷。
- en: Where are your devices?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您的设备在哪里？
- en: As we all know by now, a file represents everything in Linux, and devices are
    no exception. All your devices are located inside the `/dev` directory; this includes
    your keyboard, mouse, terminal, hard disk, USB devices, CD-ROM, and so on.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们现在都知道的那样，在Linux中，文件代表一切，设备也不例外。所有设备都位于`/dev`目录中；这包括您的键盘、鼠标、终端、硬盘、USB设备、CD-ROM等。
- en: The terminal you are working on right now is, in fact, a device. If you run
    the `w` command, you will see the name of the terminal you are connected to in
    the second column of the output.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在正在使用的终端实际上是一个设备。如果运行`w`命令，您将在输出的第二列中看到您连接到的终端的名称。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In my case, it is `pts/0`; **pts** is short for **pseudoterminal** slave. Now,
    this terminal is represented by the file `/dev/pts/0`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，它是`pts/0`；**pts**是**伪终端**的缩写。现在，这个终端由文件`/dev/pts/0`表示：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'I will echo the line `Hello Friend` to `/dev/pts/0` and pay close attention
    to what will happen:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把`Hello Friend`这一行回显到`/dev/pts/0`，并密切关注接下来会发生什么：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see, `Hello Friend` got printed to my terminal! Now you can play
    that game with other users on your system. You can run the `w` command to figure
    out which terminal they are using and then start sending them messages!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，`Hello Friend`被打印到我的终端！现在您可以在系统上与其他用户玩这个游戏。您可以运行`w`命令来找出他们正在使用的终端，然后开始发送消息给他们！
- en: Where is your hard disk?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您的硬盘在哪里？
- en: 'To know which file represents your hard disk; you need to run the command `lsblk`,
    which is short for **list block**:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要知道哪个文件代表您的硬盘，您需要运行`lsblk`命令，这是**列出块**的缩写：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'From the output, I can see that the name of my hard disk device is **sda**,
    which is short for **SCSI Disk A**. Now you need to understand that depending
    on the type of your hard disk drive, you may get a different name. `Figure 1`
    summarizes Linux naming strategies for different types of hard drives:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，我可以看到我的硬盘设备的名称是**sda**，这是**SCSI Disk A**的缩写。现在您需要明白，根据您的硬盘驱动器类型，您可能会得到不同的名称。`图1`总结了不同类型硬盘驱动器的Linux命名策略：
- en: '![](img/82b56fd7-4fe7-4523-872b-b91c61bce092.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82b56fd7-4fe7-4523-872b-b91c61bce092.png)'
- en: 'Figure 1: Hard disk naming in Linux'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：Linux中的硬盘命名
- en: So from the output of the `lsblk` command, you can conclude that I only have
    one disk (`sda`) on my virtual machine. Now we don't want to play with this disk
    as it contains the root filesystem, so let's add another disk to our virtual machine
    for learning purposes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从`lsblk`命令的输出中，您可以得出结论，我在我的虚拟机上只有一个磁盘（`sda`）。现在我们不想操作这个磁盘，因为它包含了根文件系统，所以让我们为学习目的向我们的虚拟机添加另一个磁盘。
- en: Adding disks to your virtual machine
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向虚拟机添加磁盘
- en: 'There are a few steps you need to follow to successfully add a new disk to
    your virtual machine. You have to follow these steps in this specific order:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要成功向虚拟机添加新磁盘，您需要遵循一些步骤。您必须按照特定顺序执行这些步骤：
- en: Shut down your virtual machine.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭您的虚拟机。
- en: Go to Virtual Machine Settings | Storage | Create new Disk.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到虚拟机设置|存储|创建新磁盘。
- en: Start your virtual machine.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动您的虚拟机。
- en: 'So the first step is pretty simple; shut down your virtual machine because
    you cannot add a new disk to your virtual machine while it is still running. For
    the second step, you need to go to your virtual machine settings, then click on
    storage and then select your disk controller, right-click, and then create a new
    disk as shown in `Figure 2`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一步非常简单；关闭您的虚拟机，因为在虚拟机仍在运行时无法向其添加新磁盘。对于第二步，您需要进入虚拟机设置，然后点击存储，然后选择您的磁盘控制器，右键单击，然后按`图2`所示创建新磁盘：
- en: '![](img/024cef9e-10f2-4238-8345-1497975ccc2c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/024cef9e-10f2-4238-8345-1497975ccc2c.png)'
- en: 'Figure 2: Creating a new disk on your virtual machine'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：在虚拟机上创建新磁盘
- en: You will then be asked to choose the size for your new disk. You can select
    any size you want. I have an abundance of disk space on my host machine, so I
    will add a 10 GB disk to my virtual machine. After you are done, the last step
    is to start up your virtual machine again.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您将被要求选择新磁盘的大小。您可以选择任何大小。我在我的主机机器上有大量的磁盘空间，所以我将向我的虚拟机添加一个10 GB的磁盘。完成后，最后一步是再次启动您的虚拟机。
- en: 'You should be able to see your new disk as soon as your virtual machine starts:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 只要您的虚拟机启动，您应该能够看到您的新磁盘：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: My new disk got the name `sdb` because it is the second disk on my virtual machine,
    and you can also see that its size is 10 GB.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我的新磁盘得到了名称`sdb`，因为它是我虚拟机上的第二个磁盘，您还可以看到它的大小为10 GB。
- en: Creating new disk partitions
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新磁盘分区
- en: 'Now let''s play with the new disk that we just created. The first thing you
    may want to do is to create a new partition. To create a new partition, we use
    the `fdisk` command followed by the disk name:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来玩一下我们刚刚创建的新磁盘。您可能想要做的第一件事是创建一个新分区。要创建一个新分区，我们使用`fdisk`命令，后面跟着磁盘名称：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'So to create a new partition on the `/dev/sdb` disk; you can run the following
    command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，要在`/dev/sdb`磁盘上创建一个新分区，可以运行以下命令：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This opens up the `fdisk` utility. If you are unsure what to do; you can enter
    `m` for help:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这打开了`fdisk`实用程序。如果你不确定该怎么做，可以输入`m`来获取帮助：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We want to create a new partition so enter `n`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想创建一个新分区，所以输入`n`：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It will then ask you if you want a primary partition or an extended partition.
    We would accept the default selection (primary) so just hit *Enter*:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后它会问你是要主分区还是扩展分区。我们会接受默认选择（主分区），所以只需按*Enter*：
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'It will then ask you to select a partition number. We will also accept the
    default, which is partition number `1`, so just hit *Enter*. Notice that you can
    create up to four primary partitions on a given disk:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后它会要求您选择一个分区号。我们也会接受默认值，即分区号`1`，所以只需按*Enter*。请注意，您可以在给定磁盘上创建最多四个主分区：
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You will then be prompted to choose the sector you would want your new partition
    to start at; hit *Enter* to accept the default (`2048`):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您将被提示选择您希望新分区从哪个扇区开始；按*Enter*接受默认值（`2048`）：
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now you will be asked to choose the size of your new partition; I want a 2
    GB partition so I would type `+2G` and then hit *Enter*:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您将被要求选择新分区的大小；我想要一个2GB的分区，所以我会输入`+2G`，然后按*Enter*：
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, you have to save the configuration by hitting `w`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您需要按`w`保存配置：
- en: '[PRE13]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now you can run `lsblk` to see the new partition you just created:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以运行`lsblk`来查看您刚刚创建的新分区：
- en: '[PRE14]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can see the 2 GB partition `sdb1` is listed under `sdb`. You can also use
    the `-l` option with the `fdisk` command to print out the partition table of your
    disk:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到2GB分区`sdb1`列在`sdb`下。您还可以使用`fdisk`命令的`-l`选项打印出磁盘的分区表：
- en: '[PRE15]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Creating new filesystems
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新文件系统
- en: I cannot start creating files and directories on my `/dev/sdb1` partition just
    yet; first, I need to create a filesystem. A filesystem basically dictates how
    data is organized and stored on a disk (or partition). A good analogy would be
    passengers on an airplane; flight companies can't just let the passengers (data)
    seat themselves in an airplane (partition); it would be a total mess.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在还不能在我的`/dev/sdb1`分区上创建文件和目录；首先，我需要创建一个文件系统。文件系统基本上决定了数据在磁盘（或分区）上的组织和存储方式。一个很好的类比是飞机上的乘客；航空公司不能让乘客（数据）自己在飞机（分区）上就座；那将是一团糟。
- en: 'There are many different types of filesystems available on Linux. It is important
    to note that `ext4` and `xfs` are the most commonly used filesystems. `Figure
    3` shows you only a few of the available filesystems that are supported on Linux:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上有许多不同类型的文件系统可用。重要的是要注意，`ext4`和`xfs`是最常用的文件系统。`图3`向您展示了Linux支持的一些可用文件系统：
- en: '![](img/0169a0bc-a2a3-4d85-b34a-6bf083622441.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0169a0bc-a2a3-4d85-b34a-6bf083622441.png)'
- en: 'Figure 3: Linux filesystems'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：Linux文件系统
- en: 'You can read the description of each Linux filesystem type in the filesystems
    `man` page:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件系统的`man`页面中阅读每种Linux文件系统类型的描述：
- en: '[PRE16]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To create a filesystem, we use the `mkfs` command, which is short for make
    filesystem. The general syntax for the `mkfs` command is as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建文件系统，我们使用`mkfs`命令，它是make filesystem的缩写。`mkfs`命令的一般语法如下：
- en: '[PRE17]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now let''s create an `ext4` filesystem on our new partition `/dev/sdb1`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在我们的新分区`/dev/sdb1`上创建一个`ext4`文件系统：
- en: '[PRE18]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We have created an `ext4` filesystem on our partition `/dev/sdb1`. We can verify
    our work by running the `file -s` command on the `/dev/sdb1` partition:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在我们的分区`/dev/sdb1`上创建了一个`ext4`文件系统。我们可以通过在`/dev/sdb1`分区上运行`file -s`命令来验证我们的工作：
- en: '[PRE19]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you can see, it displays that there is an `ext4` filesystem on the `/dev/sdb1`
    partition.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它显示`/dev/sdb1`分区上有一个`ext4`文件系统。
- en: 'You can use the `wipefs` command to remove (wipe out) a filesystem. For example,
    if you want to remove the `ext4` filesystem that we just created on `/dev/sdb1`,
    you can run the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`wipefs`命令来删除（擦除）文件系统。例如，如果您想要删除我们刚在`/dev/sdb1`上创建的`ext4`文件系统，可以运行以下命令：
- en: '[PRE20]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now if you rerun `file -s` on the `/dev/sdb1` partition, you will see there
    is no filesystem signature:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果您在`/dev/sdb1`分区上重新运行`file -s`，您将看到没有文件系统签名：
- en: '[PRE21]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let''s recreate an `ext4` filesystem on `/dev/sdb1` and keep it this time around:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新在`/dev/sdb1`上创建一个`ext4`文件系统并保留它：
- en: '[PRE22]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Mounting filesystems
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挂载文件系统
- en: We have created an `ext4` filesystem on the partition `/dev/sdb1`. Now we need
    to mount our filesystem somewhere in the Linux directory tree.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在分区`/dev/sdb1`上创建了一个`ext4`文件系统。现在我们需要在Linux目录树中的某个地方挂载我们的文件系统。
- en: '**WHAT IS MOUNTING?**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是挂载？**'
- en: Mounting refers to the process of attaching any filesystem or any storage device
    (like USB flash drives, CDs, etc.) to a directory.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 挂载是指将任何文件系统或任何存储设备（如USB闪存驱动器、CD等）附加到目录的过程。
- en: But why do we need to mount? I mean we have just created an `ext4` filesystem
    on the 2 GB partition `/dev/sdb1`. Can't we just start creating files in `/dev/sdb1`?
    The answer is a big FAT NO! Remember, `/dev/sdb1` is only a file that represents
    a partition.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 但是为什么我们需要挂载？我的意思是，我们刚刚在2GB分区`/dev/sdb1`上创建了一个`ext4`文件系统。我们不能直接开始在`/dev/sdb1`上创建文件吗？答案是否定的！请记住，`/dev/sdb1`只是一个代表分区的文件。
- en: 'To mount a filesystem, we use the mount command as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要挂载文件系统，我们使用如下的mount命令：
- en: '[PRE23]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'So let''s assume we are going to use the filesystem `/dev/sdb1` to store our
    games. In this case, let''s create a new directory `/games`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所以假设我们将使用文件系统`/dev/sdb1`来存储我们的游戏。在这种情况下，让我们创建一个新目录`/games`：
- en: '[PRE24]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now the only thing left is to mount our filesystem `/dev/sdb1` on the `/games`
    directory:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在唯一剩下的就是将我们的文件系统`/dev/sdb1`挂载到`/games`目录上：
- en: '[PRE25]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We can verify our work by running the `lsblk` command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过运行`lsblk`命令来验证我们的工作：
- en: '[PRE26]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As you can see, `/dev/sdb1` is indeed mounted on `/games`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，`/dev/sdb1`确实挂载在`/games`上。
- en: 'You can also use the `mount` command by itself to list all the mounted filesystems
    on your system. For example, to verify that `/dev/sdb1` is mounted on `/games`,
    you can run the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`mount`命令本身来列出系统上已挂载的所有文件系统。例如，要验证`/dev/sdb1`是否挂载在`/games`上，可以运行以下命令：
- en: '[PRE27]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We now have 2 GB available for us to use in `/games` and you can use the `df`
    command to display the filesystem disk space usage:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有2GB可供我们在`/games`中使用，您可以使用`df`命令来显示文件系统磁盘空间的使用情况：
- en: '[PRE28]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now let''s create three files in `/games`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在`/games`中创建三个文件：
- en: '[PRE29]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Unmounting filesystems
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卸载文件系统
- en: 'You can also unmount (the reverse of mounting) a filesystem. As you may have
    guessed, unmounting refers to the process of detaching a filesystem or a storage
    device. To unmount a filesystem, you can use `umount` as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以卸载（与挂载相反）文件系统。正如您可能已经猜到的，卸载是指分离文件系统或存储设备的过程。要卸载文件系统，您可以使用`umount`如下：
- en: '[PRE30]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Change to the `/games` directory and try to unmount the `/dev/sdb1` filesystem:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到`/games`目录并尝试卸载`/dev/sdb1`文件系统：
- en: '[PRE31]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Oops! It is saying that the target is busy! That''s because I am inside the
    mount point `/games`; I will back up one directory and then try again:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！它说目标正忙！那是因为我在挂载点`/games`内；我将备份到上一级目录，然后再试一次：
- en: '[PRE32]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This time it worked! You have to be careful and never unmount a filesystem or
    any storage device while it is actively being used; otherwise, you may lose data!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这次成功了！您必须小心，永远不要在文件系统或任何存储设备正在被使用时卸载它；否则，您可能会丢失数据！
- en: 'Now let''s verify the filesystem `/dev/sdb1` is indeed unmounted:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们验证文件系统`/dev/sdb1`确实已卸载：
- en: '[PRE33]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Yup! It is definitely unmounted! Now let''s list the contents of the `/games`
    directory:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 是的！它肯定已经卸载了！现在让我们列出`/games`目录的内容：
- en: '[PRE34]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Nothing! But do not panic or worry! The three files we created still exist
    in the `/dev/sdb1` filesystem. We need to mount the filesystem again, and you
    will see the files:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 什么都没有！但不要惊慌或担心！我们创建的三个文件仍然存在于`/dev/sdb1`文件系统中。我们需要重新挂载文件系统，然后您将看到这些文件：
- en: '[PRE35]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Permanently mounting filesystems
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 永久挂载文件系统
- en: The `mount` command only mounts a filesystem temporarily; that is, filesystems
    mounted with the `mount` command won't survive a system reboot. If you want to
    mount a filesystem permanently, then you need to include it in the filesystem
    table file `/etc/fstab`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`mount`命令只会临时挂载文件系统；也就是说，使用`mount`命令挂载的文件系统不会在系统重新启动后保留。如果要永久挂载文件系统，那么您需要将其包含在文件系统表文件`/etc/fstab`中。'
- en: 'Each entry (or line) in `/etc/fstab` represents a different filesystem, and
    each line consists of the following six fields:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/fstab`中的每个条目（或行）代表一个不同的文件系统，每行由以下六个字段组成：'
- en: '`filesystem`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filesystem`'
- en: '`mount_dir`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mount_dir`'
- en: '`fstype`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fstype`'
- en: '`mount_options`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mount_options`'
- en: '`dump`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dump`'
- en: '`check_fs`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_fs`'
- en: 'So, for example, to mount our `/dev/sdb1` filesystem on `/games` permanently,
    you need to include the following line in `/etc/fstab`:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，例如，要永久将我们的`/dev/sdb1`文件系统挂载到`/games`上，您需要在`/etc/fstab`中包含以下行：
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'You should add the line to the end of the `/etc/fstab` file:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该将该行添加到`/etc/fstab`文件的末尾：
- en: '[PRE37]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now let''s unmount `/dev/sdb1`:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们卸载`/dev/sdb1`：
- en: '[PRE38]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Finally, you can now mount `/dev/sdb1` permanently by running:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您现在可以通过运行以下命令永久挂载`/dev/sdb1`：
- en: '[PRE39]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Notice we did not specify a mount destination this time; that''s because the
    mount destination is already specified in the `/etc/fstab` file. You can use the
    `-a` option with the `mount` command:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这次我们没有指定挂载目标；那是因为挂载目标已经在`/etc/fstab`文件中指定了。您可以在`mount`命令中使用`-a`选项：
- en: '[PRE40]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'To mount all the filesystems that are included in `/etc/fstab`. It is also
    used to check for syntax errors. For example, if you made a typo in `/etc/fstab`
    and wrote `/dev/sdx1` instead of `/dev/sdb1`, it will show you the following error:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要挂载`/etc/fstab`中包含的所有文件系统。它还用于检查语法错误。例如，如果您在`/etc/fstab`中写错了`/dev/sdx1`，而不是`/dev/sdb1`，它将显示以下错误：
- en: '[PRE41]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'All the mounts specified in `/etc/fstab` are permanent and they will survive
    a system reboot. You may also refer to the `fstab` man page for more information
    on `/etc/fstab`:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 所有在`/etc/fstab`中指定的挂载点都是永久的，它们将在系统重新启动后保留。您还可以参考`fstab`手册页，了解有关`/etc/fstab`的更多信息：
- en: '[PRE42]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Running out of space
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 空间用完
- en: Let's create huge files that would consume all the available disk space in `/games`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建巨大的文件，以消耗`/games`中所有可用的磁盘空间。
- en: 'A fast way to create big files in Linux is by using the `dd` command. To demonstrate,
    let''s first change to the `/games` directory:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中快速创建大文件的一种方法是使用`dd`命令。为了演示，让我们首先切换到`/games`目录：
- en: '[PRE43]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now you can run the following command to create a `1` GB file named `bigGame`:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以运行以下命令创建一个名为`bigGame`的`1`GB文件：
- en: '[PRE44]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'We have now already used more than half of the available space in `/games`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经使用了`/games`中超过一半的可用空间：
- en: '[PRE45]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now let''s attempt to create another file named `bigFish` of size 3 GB:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试创建另一个名为`bigFish`的大小为`3`GB的文件：
- en: '[PRE46]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'We got an error as we ran out of space:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遇到了错误，因为空间用完了：
- en: '[PRE47]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now we can''t even create a tiny file with the word `Hello` in it:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们甚至无法创建一个带有`Hello`一词的小文件：
- en: '[PRE48]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Corrupting and fixing filesystems
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 损坏和修复文件系统
- en: In some unfortunate situations, you may run into an issue where your system
    will not boot because of a corrupted filesystem. In this case, you have to fix
    your filesystem so your system boots properly. I will show you how you can corrupt
    a filesystem, and then I will show you how you can repair it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些不幸的情况下，您可能会遇到系统由于文件系统损坏而无法启动的问题。在这种情况下，您必须修复文件系统，以便系统正常启动。我将向您展示如何损坏文件系统，然后向您展示如何修复它。
- en: An easy way to corrupt a filesystem is by writing random data to it.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向其写入随机数据，轻松损坏文件系统。
- en: 'The following command will surely corrupt your `/dev/sdb1` filesystem:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令肯定会损坏您的`/dev/sdb1`文件系统：
- en: '[PRE49]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Your `/dev/sdb1` filesystem is now corrupted! If you don''t believe me, unmount
    it and then try to mount it back again:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您的`/dev/sdb1`文件系统现在已损坏！如果您不相信我，卸载它，然后再尝试重新挂载它：
- en: '[PRE50]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'OK, it unmounted successfully! Let''s see if it will mount:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，它成功卸载了！让我们看看它是否会挂载：
- en: '[PRE51]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: As you can see, it fails to mount as it spits out an error message.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，它无法挂载，因为它会输出错误消息。
- en: Congrats! Your filesystem is corrupted. What can we do now? Well, we can certainly
    fix it!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您的文件系统已损坏。现在我们能做什么？好吧，我们肯定可以修复它！
- en: 'You can use the file system check command `fsck` to check and repair filesystems.
    So let''s run `fsck` on our corrupted filesystem:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用文件系统检查命令`fsck`来检查和修复文件系统。因此，让我们在我们损坏的文件系统上运行`fsck`：
- en: '[PRE52]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'As you can see, it states that the filesystem contains garbage data and asks
    if you want to clear the errors. You can hit *Y*, but it will keep asking you
    again and again for every single inode it is fixing! You can avoid that by using
    the `-y` option, which answers an automatic yes to all prompts during the repair
    process:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它指出文件系统包含垃圾数据，并询问您是否要清除错误。您可以按*Y*，但它会一遍又一遍地询问您是否要清除每个修复的inode！您可以使用`-y`选项来避免这种情况，该选项会在修复过程中自动回答是。
- en: '[PRE53]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: When you run it, you will see a lot of numbers running down on your screen.
    Do not worry! It is fixing your corrupted filesystem. It is basically going through
    thousands of inodes.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 运行时，您会看到屏幕上出现很多数字。不用担心！它正在修复您损坏的文件系统。它基本上是在浏览成千上万的inode。
- en: 'After it finishes, you can rerun `fsck` to verify the filesystem is now clean:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以重新运行`fsck`来验证文件系统现在已经干净：
- en: '[PRE54]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Amazing! Now let''s try to mount it:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在让我们尝试挂载它：
- en: '[PRE55]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: It mounted this time around. Mission accomplished! We have successfully fixed
    the filesystem.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这次成功挂载了。任务完成！我们成功修复了文件系统。
- en: LVM to the rescue
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LVM来拯救
- en: When you run out of space on a filesystem, things can get very ugly. We already
    ran out of space in `/games`, and there is no easy solution that exists for adding
    more space using standard partitioning. Luckily, **Logical Volume Manager **(**LVM**)
    offers a better alternative for managing filesystems.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 当文件系统的空间用完时，情况可能会变得非常糟糕。我们已经在`/games`中用完了空间，使用标准分区没有简单的解决方案来增加更多的空间。幸运的是，**逻辑卷管理器**（**LVM**）为管理文件系统提供了更好的替代方案。
- en: Installing the LVM package
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装LVM软件包
- en: 'Before we start playing with LVM, first, we need to install the `lvm2` package:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用LVM之前，首先需要安装`lvm2`软件包：
- en: '[PRE56]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'After the installation is complete, you can run the `lvm version` command to
    verify the installation is successful:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可以运行`lvm version`命令来验证安装是否成功：
- en: '[PRE57]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Three layers of abstraction
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 三层抽象
- en: To understand how LVM works, you first need to visualize it. LVM is like a cake
    that is made up of three layers, as shown in `Figure 4`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解LVM的工作原理，首先需要将其可视化。LVM就像是由三层组成的蛋糕，如`图4`所示。
- en: '![](img/2cd58b01-8016-44de-8b93-83690b286996.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2cd58b01-8016-44de-8b93-83690b286996.png)'
- en: 'Figure 4: Visualizing LVM'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：LVM可视化
- en: Physical volumes construct the first (base layer) of the LVM cake. Physical
    volumes can either be whole disks (`/dev/sdb`, `/dev/sdc`, etc) or partitions
    (`/dev/sdb2`, `/dev/sdc3`, etc).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 物理卷构成了LVM蛋糕的第一（基础）层。物理卷可以是整个磁盘（`/dev/sdb`，`/dev/sdc`等）或分区（`/dev/sdb2`，`/dev/sdc3`等）。
- en: The **Volume Group** layer is the second and biggest layer in the LVM cake,
    and it sits on top of the **Physical Volume** layer. A volume group can span multiple
    physical volumes; that is, one volume group can be composed of one or more physical
    volumes.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**卷组**层是LVM蛋糕中的第二层，也是最大的一层，它位于**物理卷**层的顶部。一个卷组可以跨多个物理卷；也就是说，一个卷组可以由一个或多个物理卷组成。'
- en: The **Logical Volume** layer makes up the third and last layer in the LVM cake.
    Multiple logical volumes can belong to the same volume group, as shown in `Figure
    4`. Finally, you can create filesystems on logical volumes.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**逻辑卷**层构成了LVM蛋糕的第三层，也是最后一层。多个逻辑卷可以属于同一个卷组，如`图4`所示。最后，您可以在逻辑卷上创建文件系统。'
- en: Creating physical volumes
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建物理卷
- en: The recipe for creating physical volumes is pretty simple; you only need a disk
    or a partition. We have already created a `2` GB partition `/dev/sdb1`. Now go
    ahead and create three more partitions under `/dev/sdb`, each of size `2` GB.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 创建物理卷的步骤非常简单；您只需要一个磁盘或一个分区。我们已经创建了一个`2`GB的分区`/dev/sdb1`。现在继续在`/dev/sdb`下创建三个大小为`2`GB的分区。
- en: 'This is what the end result should look like:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果应该是这样的：
- en: '[PRE58]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'To create a physical volume, we use the `pvcreate` command followed by a disk
    or a partition:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建物理卷，我们使用`pvcreate`命令，后面跟着一个磁盘或一个分区：
- en: '[PRE59]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'We are going to create three physical volumes: `/dev/sdb2`, `/dev/sdb3`, and
    `/dev/sdb4`. You can create all three with one command:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建三个物理卷：`/dev/sdb2`，`/dev/sdb3`和`/dev/sdb4`。您可以使用一个命令创建所有三个：
- en: '[PRE60]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Cool stuff! You can also use the `pvs` command to list all physical volumes:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷！您还可以使用`pvs`命令列出所有物理卷：
- en: '[PRE61]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Alright! Everything looks good so far.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！到目前为止一切看起来都很好。
- en: Creating volume groups
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建卷组
- en: 'One volume group can span multiple physical volumes. So let''s create a volume
    group that would consist of the two physical volumes: `/dev/sdb2` and `/dev/sdb3`.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 一个卷组可以跨多个物理卷。因此，让我们创建一个卷组，它将由两个物理卷`/dev/sdb2`和`/dev/sdb3`组成。
- en: 'To create a volume group, we use the `vgcreate` command followed by the name
    of the new volume group and then the physical volumes:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建卷组，我们使用`vgcreate`命令，后面跟着新卷组的名称，然后是物理卷：
- en: '[PRE62]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Let''s create a volume group named `myvg` that would span `/dev/sdb2` and `/de-
    v/sdb3`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`myvg`的卷组，它将跨越`/dev/sdb2`和`/de- v/sdb3`：
- en: '[PRE63]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Awesome! You can also use the `vgs` command to list all volume groups:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！您还可以使用`vgs`命令列出所有卷组：
- en: '[PRE64]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Notice that the size of the volume group `myvg` is equal to `4` GB, which is
    the total size of `/dev/sdb2` and `/dev/sdb3`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，卷组`myvg`的大小等于`4`GB，这是`/dev/sdb2`和`/dev/sdb3`的总大小。
- en: Creating logical volumes
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建逻辑卷
- en: We can now create logical volumes on top of our `mvg` volume group.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在我们的`mvg`卷组上创建逻辑卷。
- en: 'To create a logical volume, we use the `lvcreate` command followed by the size
    of the logical volume, the name of the logical volume, and finally, the volume
    group name:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建逻辑卷，我们使用`lvcreate`命令，后面跟着逻辑卷的大小、逻辑卷的名称，最后是卷组名称：
- en: '[PRE65]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Let''s create a logical volume named `mybooks` of size `2` GB:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`mybooks`的逻辑卷，大小为`2`GB：
- en: '[PRE66]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Now create another logical volume named `myprojects` of size `500` MB:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建另一个名为`myprojects`的逻辑卷，大小为`500`MB：
- en: '[PRE67]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'You can use the `lvs` command to list all logical volumes:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`lvs`命令列出所有逻辑卷：
- en: '[PRE68]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: One final step remains, which is creating filesystems on our logical volumes.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 还有最后一步，就是在我们的逻辑卷上创建文件系统。
- en: 'Your logical volumes are represented in the device mapper directory `/dev/mapper`:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你的逻辑卷在设备映射目录`/dev/mapper`中表示：
- en: '[PRE69]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Let''s create an `ext4` filesystem on our `mybooks` logical volume:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在`mybooks`逻辑卷上创建一个`ext4`文件系统：
- en: '[PRE70]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Similarly, we can create an `ext4` filesystem on our `myprojects` logical volume:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，我们可以在`myprojects`逻辑卷上创建一个`ext4`文件系统：
- en: '[PRE71]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'We have to mount both filesystems somewhere so we will create two new directories,
    `/books` and `/projects`:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须在某个地方挂载两个文件系统，所以我们将创建两个新目录，`/books`和`/projects`：
- en: '[PRE72]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Now we can mount both filesystems:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以挂载两个文件系统了：
- en: '[PRE73]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'We can check the last two lines of the `mount` command output:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以检查`mount`命令输出的最后两行：
- en: '[PRE74]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Indeed! Both filesystems are mounted.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 确实！两个文件系统都已挂载。
- en: 'To summarize; these are the steps that you need to follow to create LVM logical
    volumes:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下；这些是你需要遵循的创建LVM逻辑卷的步骤：
- en: Create a physical volume(s).
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个物理卷。
- en: Create a volume group(s).
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个卷组。
- en: Create a logical volume(s).
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个逻辑卷。
- en: Create a filesystem(s) on the logical volume(s).
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在逻辑卷上创建一个文件系统。
- en: Mount the filesystem(s).
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 挂载文件系统。
- en: Pretty easy, right?
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 相当容易，对吧？
- en: Extending logical volumes
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展逻辑卷
- en: Now comes the moment of appreciation. After all the hard work you have put in
    so far, you will see why LVM is such a big deal in Linux.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是欣赏的时刻。在你迄今为止所付出的辛苦工作之后，你会明白为什么LVM在Linux中如此重要。
- en: 'Let''s consume all the available space in `/books`. Notice we only have 2 GB
    to use:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们消耗掉`/books`中所有可用的空间。注意我们只有2 GB可用：
- en: '[PRE75]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Change to the `/books` directory and create a 1 GB file named `book1` as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到`/books`目录并创建一个名为`book1`的1 GB文件，如下所示：
- en: '[PRE76]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Now create another file `book2` of size 900 MB:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建另一个大小为900 MB的文件`book2`：
- en: '[PRE77]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'We are now running out of space! You will get an error if you attempt to create
    a 100 MB file:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的磁盘空间不够了！如果你尝试创建一个100 MB的文件，你会收到一个错误：
- en: '[PRE78]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'We are now officially out of disk space in `/books`:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在`/books`中正式用完了磁盘空间：
- en: '[PRE79]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Here comes LVM to our rescue. We do have some disk space left on our `myvg`
    volume group, so we can extend the size of our logical volumes and thus the size
    of our filesystems:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: LVM来拯救我们了。我们的`myvg`卷组上还有一些磁盘空间，所以我们可以扩展我们的逻辑卷的大小，从而扩展我们的文件系统的大小：
- en: '[PRE80]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'We precisely have 1.5 GB of disk space left on `myvg`. We can now use the `lvextend`
    command to add 1 GB to our `/dev/mapper/myvg-mybooks` logical volume:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`myvg`中确切还剩下1.5 GB的磁盘空间。现在我们可以使用`lvextend`命令向我们的`/dev/mapper/myvg-mybooks`逻辑卷添加1
    GB：
- en: '[PRE81]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'The `-r` option is essential as it resizes the filesystem along with the logical
    volume. We can now see that our `mybooks` logical volume has grown from 2 GB to
    3 GB:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`-r`选项是必需的，因为它会随着逻辑卷一起调整文件系统的大小。现在我们可以看到我们的`mybooks`逻辑卷已经从2 GB增长到3 GB：'
- en: '[PRE82]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Consequently, we have gained more disk space in `/books`:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们在`/books`中获得了更多的磁盘空间：
- en: '[PRE83]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Now let''s check how much disk size we have remaining in our `myvg` volume
    group:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们检查一下我们的`myvg`卷组中还剩下多少磁盘空间：
- en: '[PRE84]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Let''s go all out and extend our `myprojects` logical volume to take up all
    the remaining space left in `myvg`:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们全力以赴，将我们的`myprojects`逻辑卷扩展到`myvg`中剩下的所有空间：
- en: '[PRE85]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Notice that the size of our `myprojects` logical volume has increased and eaten
    up all that''s left in `myvg`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们的`myprojects`逻辑卷的大小已经增加，并且已经占用了`myvg`中剩下的所有空间：
- en: '[PRE86]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Now we can''t extend our logical volumes as the `myvg` volume group ran out
    of space. Try to add 12 MB to our `mybooks` logical volume, and you will get an
    error message:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们无法扩展我们的逻辑卷，因为`myvg`卷组的空间用完了。尝试向我们的`mybooks`逻辑卷添加12 MB，你会收到一个错误消息：
- en: '[PRE87]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Extending volume groups
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展卷组
- en: We can only extend our logical volumes if we have available space on the volume
    group. Now how do we extend a volume group? We simply add a physical volume to
    it!
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在卷组上有可用空间时，我们才能扩展我们的逻辑卷。那么如何扩展卷组呢？我们只需向其中添加一个物理卷即可！
- en: Remember, I left out the one physical volume `/dev/sdb4` that I didn't add to
    the volume group `myvg`. Now it's time to add it!
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我漏掉了一个物理卷`/dev/sdb4`，我没有将其添加到卷组`myvg`中。现在是时候添加它了！
- en: 'To extend a volume group, we use the `vgextend` command followed by the volume
    group name and then the physical volumes you wish to add. So to add the physical
    volume `dev/sdb4` to our `myvg` volume group, you can run the command:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 要扩展卷组，我们使用`vgextend`命令，后面跟着卷组名称，然后是你希望添加的物理卷。所以要将物理卷`dev/sdb4`添加到我们的`myvg`卷组中，你可以运行以下命令：
- en: '[PRE88]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Now we have added a whole 2 GB to our `myvg` volume group:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经向我们的`myvg`卷组中添加了整整2 GB：
- en: '[PRE89]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: How amazing is that? You can now extend either of your two logical volumes as
    we added more disk space to the volume group. We should all take a moment to appreciate
    the power and flexibility of Linux LVM.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这是多么令人惊奇啊？现在你可以扩展你的两个逻辑卷中的任意一个，因为我们向卷组添加了更多的磁盘空间。我们都应该花点时间来欣赏Linux LVM的强大和灵活性。
- en: Now it's time for the last knowledge check exercise in the book. I am sure you
    will miss them!
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是本书中最后一个知识检查练习的时候了。我相信你会想念它们的！
- en: Knowledge check
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知识检查
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接下来的练习，打开你的终端并尝试解决以下任务：
- en: Add a new 1 GB disk to your virtual machine.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向你的虚拟机添加一个新的1 GB磁盘。
- en: Create three 250 MB partitions on your new disk.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的新磁盘上创建三个大小为250 MB的分区。
- en: Use your three new partitions to create three physical volumes.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的三个新分区创建三个物理卷。
- en: Create a volume group named `bigvg` that spans all your three physical volumes.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`bigvg`的卷组，跨越你的三个物理卷。
- en: Create a logical volume named `biglv` of size 500 MB.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`biglv`的大小为500 MB的逻辑卷。
- en: Create an `ext4` filesystem on the `biglv` logical volume.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`biglv`逻辑卷上创建一个`ext4`文件系统。
- en: Mount your filesystem on the `/mnt/wikileaks` directory.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的文件系统挂载到`/mnt/wikileaks`目录。
