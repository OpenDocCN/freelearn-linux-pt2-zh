- en: Create Your Own Commands
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 创建你自己的命令
- en: Sometimes, you may be having a hard time remembering one command. Other times,
    you will find yourself running a very long command over and over again, and that
    drives you insane. In this chapter, you will learn how you can make your *own*
    commands, because you are the real boss.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你可能会很难记住一个命令。其他时候，你会发现自己一遍又一遍地运行一个非常长的命令，这让你发疯。在本章中，你将学习如何创建*自己*的命令，因为你才是真正的老板。
- en: Your first alias
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的第一个别名
- en: 'Let''s assume that you always forget that the command `free -h` displays the
    memory information of your system:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你总是忘记`free -h`命令显示系统的内存信息：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You may be asking yourself: "Why can''t I just type `memory` to display the
    memory information instead of `free -h`?". Well, you certainly can do that by
    creating an `alias`.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你会问自己：“为什么我不能只输入`memory`来显示内存信息，而不是`free -h`？”。好吧，你当然可以通过创建一个`alias`来做到这一点。
- en: 'The `alias` command instructs the shell to replace one string (word) with another.
    Well, how is this useful? Let me show you; if you run the following command:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`alias`命令指示shell用另一个字符串（单词）替换一个字符串。那么这有什么用呢？让我告诉你；如果你运行以下命令：'
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then every time you enter `memory`, your shell will replace it with `free -h`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么每次你输入`memory`，你的shell都会将其替换为`free -h`：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Wow! So now you have achieved your dream! You can create an alias for any Linux
    command that you are having trouble remembering. Notice that the general format
    of the `alias` command is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！现在你已经实现了你的梦想！你可以为任何你难以记住的Linux命令创建一个别名。请注意，`alias`命令的一般格式如下：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: One alias for multiple commands
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个别名对应多个命令
- en: 'You can use a semicolon to run multiple commands on the same line. For example,
    to create a new directory named `newdir` and change to `newdir` all at once, you
    can run the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用分号在同一行上运行多个命令。例如，要一次创建一个名为`newdir`的新目录并切换到`newdir`，你可以运行以下命令：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So you use a semicolon to separate each command. In general, the syntax for
    running multiple commands on the same line is as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用分号来分隔每个命令。一般来说，运行同一行上的多个命令的语法如下：
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We often like to check the calendar and the date at the same time, right? For
    that, we will create an alias named `date` so that every time we run `date`, it
    will run both the `date` and `calendar` commands:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常想同时查看日历和日期，对吧？为此，我们将创建一个名为`date`的别名，这样每次运行`date`时，它将同时运行`date`和`calendar`命令：
- en: '[PRE6]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now let''s run `date` and see what''s up:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们运行`date`，看看发生了什么：
- en: '![](img/2a649e7b-4342-4086-8a87-f9c53771b55f.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a649e7b-4342-4086-8a87-f9c53771b55f.png)'
- en: Notice here that we used the alias name `date`, which is already the name of
    an existing command; this is completely fine with aliases.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里我们使用了别名`date`，这已经是一个现有命令的名称；这对于别名来说是完全可以的。
- en: Listing all aliases
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出所有别名
- en: 'You should also know that aliases are user-specific. So the aliases created
    by `elliot` will not work for user `smurf`; take a look:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该知道，别名是特定于用户的。因此，由`elliot`创建的别名对`smurf`用户不起作用；看一下：
- en: '[PRE7]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'As you can see, `smurf` can''t use the aliases of user `elliot`. So every user
    has their own set of aliases. Now, let''s exit back to user `elliot`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`smurf`不能使用用户`elliot`的别名。所以每个用户都有自己的一组别名。现在，让我们退出到用户`elliot`：
- en: '[PRE8]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can run the `alias` command to list all the aliases that can be used by
    the currently logged-in user:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以运行`alias`命令来列出当前登录用户可以使用的所有别名：
- en: '[PRE9]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Creating a permanent alias
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建永久别名
- en: So far, we have been creating temporary aliases; that is, the two aliases of `memory`
    and `date` that we created are temporarily and only valid for the current Terminal
    session. These two aliases will vanish as soon as you close your Terminal.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在创建临时别名；也就是说，我们创建的`memory`和`date`这两个别名是临时的，只在当前终端会话中有效。一旦关闭终端，这两个别名就会消失。
- en: 'Open a new Terminal session, then try and run the two aliases we have created:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的终端会话，然后尝试运行我们创建的两个别名：
- en: '[PRE10]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'As you can see, they are gone! They are not even in your list of aliases anymore:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，它们都消失了！它们甚至不再在你的别名列表中了：
- en: '[PRE11]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To create a permanent alias for a user, you need to include it in the hidden `.bashrc` file
    in the user''s home directory. So to permanently add our two aliases back, you
    have to add the following two lines at the very end of the `/home/el- liot/.bashrc`
    file:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要为用户创建一个永久别名，你需要将其包含在用户主目录中的隐藏`.bashrc`文件中。因此，要永久添加我们的两个别名，你必须在`/home/el- liot/.bashrc`文件的最末尾添加以下两行：
- en: '[PRE12]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can do it by running the following two `echo` commands:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下两个`echo`命令来实现：
- en: '[PRE13]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After you add both aliases to the `/home/elliot/.bashrc` file, you need to
    run the `source` command on the `/home/elliot/.bashrc` file for the change to
    take effect in the current session:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在将这两个别名添加到`/home/elliot/.bashrc`文件后，你需要在`/home/elliot/.bashrc`文件上运行`source`命令，以使当前会话中的更改生效：
- en: '[PRE14]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now you can use your two aliases, `memory` and `date`, forever without worrying
    that they will disappear after you close your current Terminal session:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以永远使用你的两个别名`memory`和`date`，而不必担心在关闭当前终端会话后它们会消失：
- en: '![](img/905df331-38f0-4953-a3e8-378e979374b5.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/905df331-38f0-4953-a3e8-378e979374b5.png)'
- en: Removing an alias
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除别名
- en: 'Let''s create another temporary alias named `lastline` that will display the
    last line in a file:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建另一个临时别名，名为`lastline`，它将显示文件中的最后一行：
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now let''s try our new alias on the `/home/elliot/.bashrc` file:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在`/home/elliot/.bashrc`文件上尝试我们的新别名：
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Alright! It works well. Now, if you wish to delete the alias, then you can
    run the `unalias` command followed by the alias name:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！它运行得很好。现在，如果你想删除别名，你可以运行`unalias`命令，然后跟上别名：
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'So now the `lastline` alias has been deleted:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`lastline`别名已经被删除：
- en: '[PRE18]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You can also use the `unalias` command to temporarily deactivate a permanent
    alias. For example, if you run the following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`unalias`命令临时停用永久别名。例如，如果你运行以下命令：
- en: '[PRE19]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, the permanent alias `memory` will not work in the current Terminal session:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，永久别名`memory`将在当前终端会话中不起作用：
- en: '[PRE20]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: However, the alias `memory` will come back in a new Terminal session. To remove
    a permanent alias, you need to remove it from the `.bashrc` file.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，别名`memory`将在新的终端会话中回来。要删除永久别名，你需要从`.bashrc`文件中删除它。
- en: Some useful aliases
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些有用的别名
- en: Now let's create some useful aliases that will make our life much more enjoyable
    while working on the Linux command line.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一些有用的别名，让我们在Linux命令行上工作时更加愉快。
- en: 'A lot of people hate to remember all the `tar` command options, so let''s make
    it easy for these people then. We will create an alias named `extract` that will
    extract files from an archive:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人讨厌记住所有`tar`命令选项，所以让我们为这些人简化一下。我们将创建一个名为`extract`的别名，它将从存档中提取文件。
- en: '[PRE21]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You can try the alias on any archive, and it will work like a charm.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在任何存档上尝试这个别名，它会像魔术一样起作用。
- en: 'Similarly, you can create an alias named `compress_gzip` that will create a
    gzip-compressed archive:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，你可以创建一个名为`compress_gzip`的别名，它将创建一个gzip压缩的存档：
- en: '[PRE22]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You may also want to create an alias named `soft` that will create soft links:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还想创建一个名为`soft`的别名，它将创建软链接：
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can use the soft alias to create a soft link named `logfiles` that points
    to the `/var/logs` directory:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用软别名来创建一个名为`logfiles`的软链接，指向`/var/logs`目录：
- en: '[PRE24]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now let''s create an alias named `LISTEN` that will list all the listening
    ports on your system:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个名为`LISTEN`的别名，它将列出系统上所有正在监听的端口：
- en: '[PRE25]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now let''s try and run the `LISTEN` alias:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试运行`LISTEN`别名：
- en: '[PRE26]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This is pretty cool! Let''s create one final alias, `sort_files`, that will
    list all the files in the current directory sorted by size (in descending order):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这很酷！让我们创建一个最终别名`sort_files`，它将按大小（按降序）列出当前目录中的所有文件：
- en: '[PRE27]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now let''s try and run the `sort_files` alias:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试运行`sort_files`别名：
- en: '[PRE28]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: As you can see, the files in the current directory are listed in descending
    order of size (that is, the biggest first). This will prove to be particularly
    useful when you are doing some cleaning on your system and you want to inspect
    which files are occupying the most space.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，当前目录中的文件按大小（即最大的文件先）降序列出。当你在系统上进行清理并想要检查哪些文件占用了最多空间时，这将特别有用。
- en: Adding safety nets
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加安全网
- en: 'You can also use aliases to protect against dumb mistakes. For example, to
    protect against removing important files by mistake, you can add the following
    alias:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用别名来防止愚蠢的错误。例如，为了防止误删重要文件，你可以添加以下别名：
- en: '[PRE29]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now you will be asked to confirm each time you attempt to remove a file:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在每次你尝试删除一个文件时都会被要求确认：
- en: '[PRE30]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Go crazy with aliases
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用别名发疯
- en: 'You can also have some fun with aliases and make users go crazy; take a look
    at this alias:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过别名来玩一些有趣的东西，让用户发疯；看看这个别名：
- en: '[PRE31]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now when user `elliot` tries to open the `nano` editor, the `vi` editor will
    open instead! User `elliot` can overcome this dilemma by typing in the full path
    of the `nano` editor. Here is another funny alias:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当用户`elliot`尝试打开`nano`编辑器时，将会打开`vi`编辑器！用户`elliot`可以通过输入`nano`编辑器的完整路径来克服这个困境。这里是另一个有趣的别名：
- en: '[PRE32]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now look what will happen when user `elliot` tries to exit the Terminal:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看看当用户`elliot`尝试退出终端时会发生什么：
- en: '[PRE33]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: I will let you deal with this by yourself; I am evil like that! Haha.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我会让你自己处理这个问题；我就是这么邪恶！哈哈。
- en: Knowledge check
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知识检查
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下练习，打开你的终端并尝试解决以下任务：
- en: Create a temporary alias called `ins` for the `apt-get install` command.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`apt-get install`命令创建一个临时别名`ins`。
- en: Create a temporary alias called `packages` for the `dpkg -l` command.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`dpkg -l`命令创建一个临时别名`packages`。
- en: Create a permanent alias called `clean` that will remove all the files in the
    `/tmp`directory.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`clean`的永久别名，它将删除`/tmp`目录中的所有文件。
