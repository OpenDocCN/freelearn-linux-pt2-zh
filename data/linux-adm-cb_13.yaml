- en: BSDs, Solaris, Windows, IaaS and PaaS, and DevOps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BSD、Solaris、Windows、IaaS和PaaS以及DevOps
- en: 'The following topics will be covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Determining the type of system you're on
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定你所在系统的类型
- en: Understanding how the BSDs differ
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解BSD的不同之处
- en: Understanding how Solaris and illumos differ
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Solaris和illumos的不同之处
- en: Understanding how Windows differs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Windows的不同之处
- en: IaaS (Infrastructure as a Service)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IaaS（基础设施即服务）
- en: PaaS (Platform as a Service)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PaaS（平台即服务）
- en: The Ops versus DevOps Wars
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运维与DevOps之争
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: When I was approached to write this book, I was initially asked to compose twelve
    chapters on the Linux system and modern administration. I now wish I'd agreed
    to that initial pitch, but instead I brazenly suggested a thirteenth chapter.
    What a fool I was.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当我被要求写这本书时，最初是要求我写12章关于Linux系统和现代管理的。现在我希望我当初同意了那个提议，但我却大胆地建议增加第13章。我真是个傻瓜。
- en: So here we are, the ultimate chapter in this slog of a read (sorry, I'm so sorry),
    and it's all about the other systems in the computing world that you're going
    to need to know, because unfortunately, modern computing and IT infrastructure
    is frequently a hodgepodge of trends and antiques, in the form of Windows, Linux,
    and the mesh that goes in between.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在这里，这是这篇艰难阅读的最终章节（抱歉，真的很抱歉），它关于计算世界中你需要了解的其他系统，因为不幸的是，现代计算和IT基础设施经常是Windows、Linux和它们之间的混合体。
- en: We're going to look at the BSDs briefly, because they're probably the closest
    you can get to "real" Unix in this day and age, and they're also close enough
    to Linux that there's BSD users out there who get viscerally angry when you use
    phrases like "they're close enough to Linux."
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将简要介绍一下BSD，因为它们可能是你在当今时代最接近“真正”Unix的系统，它们也足够接近Linux，以至于有些BSD用户在你使用“它们足够接近Linux”这样的短语时会感到愤怒。
- en: Then, we're going to discuss Solaris (again, in brief) and talk about the two
    forms it takes in modern infrastructure.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将简要讨论Solaris，并谈谈它在现代基础设施中的两种形式。
- en: We'll have to discuss Windows, although I'm going to attempt to keep this section
    the briefest. If you're anything like me, you dislike the word "Windows" and all
    the connotations it brings. (We're not fooled by your semi-hippy approach to Linux
    in recent years, Microsoft—some of us like to be stubbornly tribal.)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将不得不讨论Windows，尽管我将尝试尽量简短地介绍这一部分。如果你和我一样讨厌“Windows”这个词以及它带来的所有内涵。（微软，你近年来对Linux的半嬉皮式态度并不能愚弄我们——我们中有些人喜欢固执地守旧。）
- en: Following our foray into other OSes, we're also going to look at **Infrastructure
    as a Service** (**IaaS**) and **Platform as a Service** (**PaaS**), despite how
    stupid these anagrams are, because they're a big part of modern DevOps and platform
    creation. You will have to use services like AWS and Azure in any full career,
    so it's good to get an understanding of the way they work sooner rather than later.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们探索其他操作系统之后，我们还将研究基础设施即服务（IaaS）和平台即服务（PaaS），尽管这些缩写有多愚蠢，因为它们是现代DevOps和平台创建的重要组成部分。在任何完整的职业生涯中，你都将不得不使用AWS和Azure等服务，所以最好尽早了解它们的工作方式。
- en: Lastly, there'll be a word on DevOps (I'll save the surprises of that section,
    for that section).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将谈一下DevOps（我会在那一节保留惊喜）。
- en: Determining the type of system you're on
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定你所在系统的类型
- en: 'Think about this: you were blindfolded, bundled into the trunk of a car, and
    then unmasked at the other end of a long journey to be presented with a blinking
    prompt. How would you determine what sort of system you were on?'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下：你被蒙上眼睛，被塞进车后备箱，然后在长途旅程的另一端被揭开面纱，看到一个闪烁的提示符。你将如何确定你所在的系统类型？
- en: Your immediate instinct might be to assume you've been placed in front of a
    Linux box, but that's not a certainty. While it's true that Linux dominates the
    server's space, just because the instance has a black screen, white text, and
    a login prompt, doesn't mean that you've been placed in front of our friendly
    penguin OS.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你的第一反应可能是认为你被放在了一个Linux盒子前，但这并不是确定的。虽然Linux确实主导了服务器领域，但只是因为实例有黑屏、白色文本和登录提示符，并不意味着你被放在了我们友好的企鹅操作系统前。
- en: It could be Linux, a BSD system, a Solaris system, or one of the many Unix derivatives
    from the nineties.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能是Linux、BSD系统、Solaris系统，或者是九十年代的许多Unix衍生系统之一。
- en: Assuming you've been given the credentials to log in, do so.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经获得了登录凭据，那就登录吧。
- en: How to do it...
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做…
- en: There's an easy starting point.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的起点。
- en: uname
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: uname
- en: 'When you''ve logged in successfully, determine what sort of kernel you''re
    running:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你成功登录后，确定你正在运行的内核类型：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Well that was anti-climactic... it's just a regular Linux system.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这真是令人失望…这只是一个普通的Linux系统。
- en: 'But what if it wasn''t? Imagine the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果不是呢？想象一下：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That's more like it! This is a FreeBSD box!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这更像是一个FreeBSD盒子！
- en: Or is it a different BSD?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 或者是另一种BSD？
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'An OpenBSD box, cool! But we can go one further:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个OpenBSD盒子，很酷！但我们可以更进一步：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Huh? What's a `SunOS` when it's at home?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯？“SunOS”到底是什么？
- en: The short answer is that you can assume you've landed on either an Oracle Solaris
    or illumos distribution, both of which are relatively rare, but deserve a degree
    of respect.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 简短的答案是你可以假设你已经登陆到了Oracle Solaris或illumos发行版，它们都相对罕见，但值得尊重。
- en: The filesystem check
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统检查
- en: 'If you''re still uncertain, you can quickly check the type of filesystem being
    used for slash-root, `/`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不确定，你可以快速检查slash-root（`/`）所使用的文件系统类型：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'XFS is commonly found on Linux systems, specifically RHEL and CentOS:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: XFS通常出现在Linux系统上，特别是RHEL和CentOS：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The **Unix file system** (**UFS**) is usually seen on FreeBSD boxes (alongside
    ZFS, if you''ve got the RAM for it):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Unix文件系统（UFS）通常出现在FreeBSD盒子上（如果你有足够的RAM，还会有ZFS）：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'FFS? You''re joking... no, it''s the **fast file system** (**FFS**), and it''s
    commonly used on OpenBSD boxes:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: FFS？你在开玩笑…不，这是快速文件系统（FFS），它通常用于OpenBSD盒子：
- en: FFS and UFS have the same heritage, though the code base isn't identical.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: FFS和UFS有相同的传承，尽管代码库并非完全相同。
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'While we don''t get an actual filesystem type here, we can see `openindiana`
    listed in the output, which we know to be an illumos distribution. We can then
    use `zfs` to determine what our filesystem design is (and confirm it''s `zfs`):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在这里没有得到实际的文件系统类型，但我们可以看到输出中列出了“openindiana”，我们知道这是一个illumos发行版。然后我们可以使用“zfs”来确定我们的文件系统设计是什么（并确认它是“zfs”）：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Though the prompts might look the same (though generally, these distributions
    don't set Bash as the default shell; that's a Linux thing), but the underlying
    system can be vastly different from the familiar GNU userland that you're used
    to.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管提示可能看起来相同（尽管通常，这些发行版不会将Bash设置为默认shell；这是Linux的事情），但底层系统可能与您熟悉的GNU用户空间大不相同。
- en: When we run `uname`, as we've discussed previously, we output the kernel of
    the system we've logged on to.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行`uname`时，正如我们之前讨论过的，我们输出了我们登录到的系统的内核。
- en: Hopefully it's a Linux box, especially if you've been held against your will
    and asked to fix something, but even if you're somewhat good with Linux, things
    should be relatively familiar. Processes run, the default tools are the same,
    and you can read `README` files or man pages to understand what you don't yet.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 希望它是一个Linux系统，特别是如果您被迫去修复某些东西，但即使您对Linux有一定了解，事情也应该相对熟悉。进程运行，默认工具相同，您可以阅读`README`文件或man页面来了解您尚不了解的内容。
- en: The filesystem check we did isn't the most scientific, but you can usually guarantee
    that commands like `mount` and `df` will be available to you, thanks to their
    pedigree.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行的文件系统检查并不是最科学的，但通常可以保证像`mount`和`df`这样的命令对您是可用的，这要归功于它们的血统。
- en: There's more...
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There's a notable omission in the preceding section, and that's how you work
    out if you're on a Windows system or not.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分中有一个显而易见的遗漏，那就是如何确定您是否在Windows系统上工作。
- en: The easiest way I've found to check that I'm at a Windows prompt is to measure
    how quickly my soul is ebbing away from my body. Failing that, I look for a `Music`
    folder somewhere on the filesystem, which seems to be inexplicably on desktop
    and server installs alike.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现检查我是否在Windows提示符下的最简单方法是测量我的灵魂从身体中流逝的速度。如果失败，我会寻找文件系统中的“音乐”文件夹，这似乎不可思议地出现在桌面和服务器安装中。
- en: Obviously, if the preceding two methods fail you, then consider that Windows
    usually has a GUI (unless it's a modern Server OS with a trendy systems administrator,
    in which case it might just be a blue PowerShell prompt instead. Either way, I
    suspect you'll know).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，如果前面两种方法对您无效，那么请考虑Windows通常具有图形用户界面（除非是现代服务器操作系统与时尚的系统管理员，那么可能只是一个蓝色的PowerShell提示符。无论哪种情况，我想您会知道）。
- en: Understanding how the BSDs differ
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解BSD的不同之处
- en: You might have noticed that I deliberately split up OpenBSD and FreeBSD in this
    chapter, but they're just different distributions of "BSD", right?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我在本章中故意将OpenBSD和FreeBSD分开，但它们只是不同的“BSD”发行版，对吧？
- en: Wrong.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 错误。
- en: Unlike Linux, the different "flavors" of BSD don't share a kernel, and are more
    like different OSes than different distributions.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 与Linux不同，BSD的不同“风味”不共享内核，更像是不同的操作系统而不是不同的发行版。
- en: OpenBSD, FreeBSD, NetBSD, and Dragonfly BSD are all unique and distinct projects.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD、FreeBSD、NetBSD和Dragonfly BSD都是独特而独立的项目。
- en: NetBSD even has a Dreamcast port. Finally, that console has a use!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: NetBSD甚至有一个Dreamcast端口。最后，那个控制台有了用途！
- en: That's not to say there's no sharing of code and fixes between the distributions—providing
    porting is quicker than writing your own implementation, and the BSDs are more
    likely to use more "liberal" open source licenses, such as the MIT license, instead
    of "restrictive" open source licenses like the GPL (generally for ideological
    reasons).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说各个发行版之间没有代码和修复的共享——只要移植比编写自己的实现更快，而且BSD更有可能使用更“自由”的开源许可证，比如MIT许可证，而不是“限制性”的开源许可证，比如GPL（通常出于意识形态原因）。
- en: The differences
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同之处
- en: 'As we''ve already said, the BSDs are distinct operating systems, with an estimated
    ranking of popularity as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经说过的，BSD是独立的操作系统，其受欢迎程度的估计排名如下：
- en: FreeBSD
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeBSD
- en: OpenBSD
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenBSD
- en: NetBSD
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NetBSD
- en: Other BSDs
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他BSD
- en: 'Here, I''m going to touch on the two most popular and well-known: FreeBSD and
    OpenBSD.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我将谈到两个最受欢迎和知名的：FreeBSD和OpenBSD。
- en: FreeBSD
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FreeBSD
- en: An OS with a varied focus (servers, desktops, IOT devices), FreeBSD is the most
    popular of the BSD derivatives.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个关注多样化的操作系统（服务器、桌面、物联网设备），FreeBSD是BSD衍生版中最受欢迎的。
- en: It prides itself on having a vast array of software available, both in the form
    of pre-built packages (built quarterly at the time of writing) and "ports" that
    are built locally and are usually the most recent version of that piece of software.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 它以拥有大量可用软件而自豪，既有预先构建的软件包（在撰写时每季度构建一次），也有本地构建的“端口”，通常是该软件的最新版本。
- en: A lot of open source software is heavily Linux focused. This isn't the fault
    of the BSDs—it simply comes down to market share. Because of this focus, the FreeBSD
    project has a lot of volunteers who dedicate their time to making packages work
    natively on FreeBSD, having to do minor and sometimes major tweaks to software
    to get it to compile and run. Much of this effort is then pushed back upstream,
    and I've yet to see a project that isn't thankful for FreeBSD support being added.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开源软件都是专注于Linux的。这并不是BSD的错——这只是市场份额的问题。由于这种关注，FreeBSD项目有很多志愿者将他们的时间投入到使软件包在FreeBSD上本地运行，有时需要对软件进行小的甚至重大的调整才能使其编译和运行。然后，这些努力大部分都会被推回上游，我还没有看到一个项目不感谢FreeBSD支持的。
- en: Another element of FreeBSD that makes it a popular choice for people of the
    BSD mindset is the fact that it ships with ZFS as standard, and you're prompted
    to use ZFS for additional storage as well as the root filesystem of your device.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使FreeBSD成为BSD思维人士的热门选择的另一个因素是它作为标准附带ZFS，并提示您使用ZFS作为设备的根文件系统以及额外存储的文件系统。
- en: ZFS (specifically OpenZFS) is a filesystem, storage management, and all round
    wonder solution for storage desires. I've heard it being called "the last word
    in filesystems," and it's only the license associated with it that makes it uncommon
    on Linux platforms (FreeBSD has no such qualms).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: ZFS（特别是OpenZFS）是一个文件系统、存储管理和全方位的存储解决方案。我听说它被称为“文件系统的最后一句话”，而它的许可证使它在Linux平台上变得不常见（FreeBSD没有这样的顾虑）。
- en: The cuddle, or **C****ommon Development and Distribution License** (**CDDL**)
    is a fairly rare license in the open source world. Produced by Sun Microsystems
    in its heyday, the license has been called "incompatible" with the GPL.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 拥抱，或者**通用开发和分发许可证**（** CDDL **）在开源世界中是一种相当罕见的许可证。由Sun Microsystems在其鼎盛时期制作，该许可证曾被称为与GPL“不兼容”。
- en: While ZFS really is a great solution for storage, it can be confusing to newcomers,
    owing to the fact it doesn't follow the same patterns as traditional filesystems
    (even UFS—FreeBSD's simpler alternative) and blurs the lines a lot between filesystems
    and things like partitions. It also has some flaws. Because of its design, ZFS
    is memory-hungry, and given the fluctuating price of RAM in recent years, this
    can be prohibitive for end users.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然ZFS确实是存储的一个很好的解决方案，但对于新手来说可能会有点困惑，因为它不遵循传统文件系统的模式（甚至是UFS——FreeBSD的更简单的替代方案），并且在文件系统和分区之间模糊了很多界限。它也有一些缺陷。由于其设计，ZFS需要大量内存，而鉴于近年来内存价格的波动，这对终端用户来说可能是障碍。
- en: FreeBSD also has a focus on stability, meaning that it includes features like
    the ability to rollback changes easily (if using ZFS) and has a very solid upgrade
    path (though it can be a little confusing and convoluted).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD还注重稳定性，这意味着它包括了一些功能，比如能够轻松回滚更改（如果使用ZFS），并且有一个非常可靠的升级路径（尽管可能有点令人困惑和复杂）。
- en: Jails are worth a mention too, since FreeBSD fans will be annoyed if I don't
    bring them up. Before Docker, there were jails, the ability to segment portions
    of your OS from each other on FreeBSD systems. Introduced in 2000, they allow
    FreeBSD users to segregate their software on a host system, and even install different
    versions of FreeBSD alongside each other so that software explicitly written for
    FreeBSD 9 can run on a FreeBSD 12 box.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 监狱也值得一提，因为如果我不提到它们，FreeBSD的粉丝们会感到恼火。在Docker之前，有监狱，可以在FreeBSD系统上将OS的部分分隔开来。它们于2000年引入，允许FreeBSD用户在主机系统上隔离其软件，甚至在彼此之间安装不同版本的FreeBSD，以便专门为FreeBSD
    9编写的软件可以在FreeBSD 12上运行。
- en: It's a bit unfair that jails didn't really take off, though a lot of this is
    down to FreeBSD market share again. They're also a lot more unwieldy than Docker
    and other container solutions, despite being arguably superior. I hold that Docker
    took off in the way it did owing in large part to places like Docker Hub, which
    FreeBSD lacked an equivalent of.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 不公平的是，监狱并没有真正起飞，尽管这在很大程度上归因于FreeBSD的市场份额。尽管它们可以说更优越，但它们也比Docker和其他容器解决方案更加笨重。我认为Docker之所以如此成功，很大程度上归功于像Docker
    Hub这样的地方，而FreeBSD则缺乏类似的东西。
- en: 'In short, I can sum up FreeBSD like so:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我可以这样总结FreeBSD：
- en: '**Pros**:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优点**：'
- en: Ships with ZFS
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附带ZFS
- en: Very up-to-date packages available
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供非常新的软件包
- en: Stable systems
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定的系统
- en: FreeBSD jails
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeBSD监狱
- en: Sensible segmentation of first-party packages and third-party (additional packages
    are normally wholly installed under `/usr/local/`)
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一方软件包和第三方软件包的合理分割（附加软件包通常完全安装在`/usr/local/`下）
- en: Very good "FreeBSD Handbook"
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常好的“FreeBSD手册”
- en: '**Cons**:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺点**：'
- en: Smaller install base than Linux systems
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装基数比Linux系统小
- en: Unlikely to have newer drivers (though this has improved in recent years)
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不太可能有更新的驱动程序（尽管近年来情况有所改善）
- en: Usually favors older solutions (X over Wayland)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常更倾向于较旧的解决方案（X优于Wayland）
- en: Upgrade process can be confusing
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级过程可能会令人困惑
- en: Sometimes gets overlooked by vendors for patches and security disclosures (think
    vulnerabilities in Intel CPUs)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时会被供应商忽视补丁和安全披露（考虑到英特尔CPU的漏洞）
- en: FreeBSD is a good choice, but I deliberately don't recommend it to Windows or
    macOS switchers. Instead, I point them to popular Linux distributions like Ubuntu
    and Fedora. FreeBSD has its place, and you can do a lot worse for a storage server,
    but it's not the first choice in a lot of minds.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD是一个不错的选择，但我故意不推荐给Windows或macOS的切换者。相反，我会把他们指向像Ubuntu和Fedora这样的流行Linux发行版。FreeBSD有它的位置，对于存储服务器来说，你可能会有更糟糕的选择，但它并不是很多人心目中的第一选择。
- en: OpenBSD
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenBSD
- en: An OS with an almost legendary focus on security and stability, OpenBSD is the
    software that took out its "Linux compatibility layer" because of concerns around
    the security of keeping it.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD是一个几乎传奇般专注于安全和稳定性的操作系统，它是因为担心保留它的“Linux兼容层”的安全性而将其删除的软件。
- en: 'If you''ve not heard of or used OpenBSD, I can guarantee that you''ve at least
    used an associated project. Some that fall under the OpenBSD realm are the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从未听说过或使用过OpenBSD，我可以保证你至少使用过一个相关项目。一些属于OpenBSD领域的项目包括以下内容：
- en: LibreSSL
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LibreSSL
- en: OpenSMTPD
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSMTPD
- en: OpenNTPD
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenNTPD
- en: OpenSSH
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSSH
- en: httpd (that's the OpenBSD-specific package, not re-badged Apache)
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: httpd（这是OpenBSD特定的软件包，而不是重新打包的Apache）
- en: This means that while you've probably never SSH'd onto an OpenBSD system itself,
    you're still using software that's built primarily on OpenBSD systems. I know
    of no distribution of Linux that doesn't use OpenSSH as the default SSH client
    and server (though alternatives do exist).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着虽然你可能从未SSH连接到过OpenBSD系统本身，但你仍然在主要基于OpenBSD系统构建的软件上使用。我知道没有一个Linux发行版不使用OpenSSH作为默认的SSH客户端和服务器（尽管也存在替代方案）。
- en: The software aside, for as good as that software is, OpenBSD is so much more.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 除了软件，对于那些软件有多好，OpenBSD还有更多。
- en: Being a relatively small project, and again both open source and donation-funded,
    OpenBSD doesn't have a very large install base, but it's extremely popular when
    it comes to embedded systems, firewalls, and routers. This is because while its
    multi-processor elements perhaps aren't as robust as some other projects, it features
    software such as the **packet filter** (**pf**) firewall, and is known for putting
    security first.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个相对较小的项目，再次强调它是开源和捐赠资助的，OpenBSD的安装基数并不是很大，但在嵌入式系统、防火墙和路由器方面非常受欢迎。这是因为虽然它的多处理器元素可能没有其他一些项目那么强大，但它具有诸如**数据包过滤器**（**pf**）防火墙之类的软件，并以安全优先而闻名。
- en: OpenBSD's tagline on their website is "Only two remote holes in the default
    install, in a heck of a long time!", which just goes to show exactly how committed
    to security they are. I've seen OpenBSD actively remove software because of the
    simple fact that it had dubious security associated with it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD在其网站上的标语是“默认安装中只有两个远程漏洞，而且已经很长时间了！”，这正好说明了他们对安全的承诺。我看到OpenBSD积极地删除软件，因为它存在可疑的安全问题。
- en: LibreSSL was born out of the frustration around OpenSSL and the fact that it
    was easier to fork and fix the project (in the developer's minds) than it was
    to argue for increased security upstream. It's easy to see how software that underpins
    a lot of the internet's security should be kept secure.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: LibreSSL诞生于对OpenSSL的挫败感，以及开发者认为更容易分叉和修复该项目（而不是争取上游的增强安全性）。很容易看出，支撑互联网安全的软件应该保持安全。
- en: Famous for tweaking software to diminish the opportunity for vulnerabilities
    to pop up, this can sometimes backfire on OpenBSD, as they can get overlooked
    for vulnerability disclosure, for fear they'll fix the problem immediately (instead
    of waiting until the "official" date at which the vulnerability can be revealed
    to the public). For an interesting case study of this, see the "KRACK Attacks"
    vulnerability, and OpenBSD's response ([https://www.krackattacks.com/#openbsd](https://www.krackattacks.com/#openbsd)).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以调整软件以减少漏洞出现的机会而闻名，这有时会对OpenBSD产生反作用，因为他们可能会因为害怕立即解决问题（而不是等到“官方”日期才公开漏洞）而被忽视。有关此问题的有趣案例研究，请参见“KRACK
    Attacks”漏洞，以及OpenBSD的响应（[https://www.krackattacks.com/#openbsd](https://www.krackattacks.com/#openbsd)）。
- en: Because OpenBSD is a different OS to FreeBSD, it doesn't include the likes of
    jails nor does it have ZFS (favoring FFS). There isn't much you can do to the
    default installation in terms of tweaks, and the argument goes that "you shouldn't
    have to."
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 因为OpenBSD是与FreeBSD不同的操作系统，它不包括类似jails的功能，也没有ZFS（而是支持FFS）。在默认安装中，你几乎不能进行任何调整，有人认为“你不应该这样做”。
- en: It can be used as a desktop, server (generally a firewall from what I've seen),
    or an embedded OS.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以用作桌面、服务器（通常是防火墙，据我所见），或嵌入式操作系统。
- en: 'You could probably sum up OpenBSD as such:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能可以这样总结OpenBSD：
- en: '**Pros**:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优点**：'
- en: Extremely heavy focus on security
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极其重视安全。
- en: Heavy focus on quality of code
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常重视代码质量
- en: Reasonable upgrade path (though time-consuming)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合理的升级路径（尽管耗时）
- en: Frequent release cycle and fast patching
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 频繁的发布周期和快速的修补
- en: Pf, which is honestly great
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pf，说实话很棒
- en: '**Cons**:'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺点**：'
- en: Lack of packages (though its ports system has a lot)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺少软件包（尽管其端口系统有很多）
- en: Stable and secure can mean a lack of features (this depends on the individual
    really)
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定和安全可能意味着缺乏功能（这取决于个人）
- en: Very small install base
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常小的安装基数
- en: FFS is creaky and showing its age
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FFS老化且显示出年龄
- en: Theo de Raadt (OpenBSD's benevolent dictator for life) is known to speak his
    mind (read into that what you will)
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Theo de Raadt（OpenBSD的终身慈善独裁者）以直言不讳而闻名（你可以理解为你愿意的）。
- en: I use OpenBSD on a singular laptop, mostly for the experience of the thing,
    but we're on 6.4 now and it was first installed with 6.0 (that also featured some
    kick-ass release artwork). The laptop runs well, though it's doing very little
    most of the time. I have also tried using OpenBSD as a server, but for my sins
    I soon found it annoying when I couldn't get hold of packages I thought were pretty
    standard.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我在一台笔记本电脑上使用OpenBSD，主要是为了体验，但现在我们使用的是6.4版本，最初安装的是6.0版本（也有一些很棒的发布艺术作品）。笔记本电脑运行良好，尽管大部分时间都在闲置。我也尝试过将OpenBSD用作服务器，但出于我的罪恶感，我很快发现当我无法获得我认为非常标准的软件包时，这让我很烦恼。
- en: Understanding how Solaris and illumos differ
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Solaris和illumos的区别
- en: I've sort of been dreading this section, because it's very hard to talk about
    companies like Oracle without getting at least a little annoyed.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我有点害怕这一部分，因为很难谈论像Oracle这样的公司而不至少有点恼火。
- en: We're going to look briefly at the history of Oracle and their Sun acquisition,
    as well as looking at the OpenSolaris movement and the systems that spawned out
    of it.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将简要介绍Oracle及其Sun收购的历史，以及OpenSolaris运动和由此产生的系统。
- en: Before we start, I should point out that illumos and Solaris have a very Unix
    background, and they're arguably the "purest" Unix derivatives available today.
    You might have never used either of them, but there's a good chance you've used
    a website or an online portal that's back-ended by either of these two OSes.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我应该指出illumos和Solaris有非常Unix的背景，它们可以说是当今“最纯粹”的Unix衍生产品。你可能从未使用过它们中的任何一个，但很有可能你使用过一个由这两个操作系统支持的网站或在线门户。
- en: The differences
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区别
- en: First, a bit of history.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，稍微了解一下历史。
- en: Solaris (sort-of-previously SunOS) was released in the early nineties by Sun
    Microsystems, and was initially designed to work on the also-Sun SPARC line of
    processors, though it quickly got expanded to support x86 processors too.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Solaris（曾经的SunOS）是在九十年代初由Sun Microsystems发布的，最初设计用于Sun SPARC系列处理器，尽管它很快就扩展到支持x86处理器。
- en: For a while, Sun (and its purple behemoths in server racks everywhere) were
    well regarded and a fairly common sight in data centers. The company went from
    strength to strength, developing things such as Solaris Zones (like FreeBSD jails,
    as we discussed previously), ZFS, and Java.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 有一段时间，Sun（以及它的紫色巨兽在数据中心随处可见）备受推崇，在数据中心是一个相当常见的景象。该公司不断发展，开发了诸如Solaris Zones（就像我们之前讨论的FreeBSD
    jails）、ZFS和Java等东西。
- en: Not really a home-user system, Solaris was popular alongside SPARC processors
    in enterprise environments, though as Linux gained traction and market mind-share,
    this and other alternative OSes, soon lost ground.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是一个家庭用户系统，Solaris在企业环境中与SPARC处理器一起很受欢迎，尽管随着Linux的发展和市场份额的增加，这个和其他替代操作系统很快就失去了市场。
- en: In 2005, Sun made the decision to open source Solaris under the CDDL license,
    creating the "OpenSolaris" project at the same time. This was an effort to build
    a community around Solaris that might increase uptake and mind-share.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 2005年，Sun决定在CDDL许可下开源Solaris，同时创建了“OpenSolaris”项目。这是为了围绕Solaris建立一个社区，可能增加使用率和市场份额。
- en: However, when Oracle bought Sun in 2009 (completed in 2010), they almost immediately
    discontinued the practice of distributing public updates to the source code, and
    effectively reverted Solaris 11 (as it was) to being a closed source product.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当甲骨文在2009年收购Sun（2010年完成）时，他们几乎立即停止了向源代码分发公共更新的做法，并有效地将Solaris 11（因为它是）恢复为一个闭源产品。
- en: They couldn't put the genie back in the bottle though, and the code had been
    released once already, meaning that while OpenSolaris effectively died, derivatives
    continued.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 他们无法把精灵重新装进瓶子里，而且代码已经被释放了一次，这意味着虽然OpenSolaris实际上已经死了，但派生版本仍在继续。
- en: Confusingly, a lot of these derivatives fall under the "illumos" umbrella, which
    is probably the main fork of the OpenSolaris project, with some related projects
    such as SmartOS (from Joyent, now a Samsung company) deviating slightly.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 令人困惑的是，许多这些派生版本都属于“illumos”范畴，这可能是OpenSolaris项目的主要分支，还有一些相关项目，如SmartOS（来自Joyent，现在是三星公司）稍有偏离。
- en: illumos (small "i", for some reason) comprises a kernel, system libraries, system
    software, and device drivers.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: illumos（小写的“i”，出于某种原因）包括一个内核、系统库、系统软件和设备驱动程序。
- en: In general, this means that when people refer to "Solaris" nowadays, they're
    either remembering Sun-of-old lovingly, alongside installations they may have
    done a decade ago, or they're using it to refer to the not-uncommon Solaris 11
    that Oracle is still publishing, supporting, and allegedly actively developing.
    At the time of writing, the latest release was 11.4 in August of 2018.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，这意味着当人们现在提到“Solaris”时，他们要么是怀念旧时的Sun，以及可能十年前做过的安装，要么是用它来指代甲骨文仍在发布、支持和据称正在积极开发的Solaris
    11。在撰写本文时，最新版本是2018年8月的11.4。
- en: I refer to SmartOS, OpenIndiana, and others as Solaris in casual conversation,
    though this is technically incorrect and probably going to get me an angry letter
    from Oracle one of these days.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在随意的谈话中，我将SmartOS、OpenIndiana和其他系统称为Solaris，尽管这在技术上是不正确的，可能会导致我有一天收到甲骨文的愤怒信件。
- en: Oracle Solaris
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 甲骨文Solaris
- en: As we've already said, Oracle still actively publishes and supports Solaris,
    though a lot of the installations you'll come across these days are likely old
    installs that are still going. Solaris 10, first released in 2005, is technically
    still in support.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经说过的，甲骨文仍然积极发布和支持Solaris，尽管您这些天可能会遇到的很多安装都可能是旧的安装。Solaris 10，首次发布于2005年，从技术上讲仍在支持中。
- en: Solaris 10 officially goes out of support in January 2021—though I'm willing
    to bet the limit to how long this support continues comes down to how deep your
    pockets are.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Solaris 10在2021年1月正式停止支持，尽管我愿意打赌，支持的持续时间取决于你的财力有多深。
- en: Featuring SPARC processor support and a tendency toward database installations,
    Solaris may be something you come across in your lifetime as an engineer, and
    if you do decide to become familiar with it, there's a good chance you'll join
    a diminishing pool of people with the knowledge of how to support it, meaning
    you may find yourself in demand.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 具有SPARC处理器支持和倾向于数据库安装，Solaris可能是您作为工程师在一生中会遇到的东西，如果您决定熟悉它，您很有可能会加入一个知道如何支持它的人群，这意味着您可能会发现自己很受欢迎。
- en: Please don't decide to learn Oracle Solaris inside and out on the gamble of
    having work in the future—I won't be held responsible if you find yourself an
    expert in a dead field.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要决定在未来的工作中学习甲骨文Solaris的所有细节，我不会对你发现自己成为一个死亡领域的专家负责。
- en: ZFS is also a strong feature of Solaris, and while cross compatibility was attempted
    by the OpenZFS project, this seems to have fallen by the wayside in recent years,
    owing mostly to the diverging code base and a seeming unwillingness to keep parity
    of features by Oracle (though don't take my word on that—I'm just a consumer of
    rumor).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: ZFS也是Solaris的一个强大特性，虽然OpenZFS项目尝试了跨兼容性，但由于代码基础的分歧和甲骨文似乎不愿意保持功能的一致性，这似乎在最近几年已经不再重要了（尽管不要相信我的话，我只是一个谣言的消费者）。
- en: illumos
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: illumos
- en: The spiritual continuation of the OpenSolaris project, illumos forms the base
    of a few different distributions that sought to keep the legacy of CDDL-based
    Solaris alive.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSolaris项目的精神延续，illumos构成了一些不同发行版的基础，这些发行版试图保持基于CDDL的Solaris的传统。
- en: OpenIndiana is perhaps the most user-friendly of these distributions, and still
    features ongoing enhancements. It can be downloaded and tried out in a VM (which
    I would encourage, just for a poke around).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: OpenIndiana可能是这些发行版中最用户友好的，仍在不断增强。它可以在虚拟机中下载和尝试（我鼓励这样做，只是为了试试水）。
- en: 'When you run it, though, don''t be surprised to find references to Solaris
    and SunOS:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当你运行它时，不要惊讶地发现有关Solaris和SunOS的引用：
- en: '[PRE9]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Featuring a small package pool, you're also unlikely to find the trendier software
    of the day, but it will have the programming languages you're familiar with, and
    it's undeniably solid.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 由于软件包规模较小，你也不太可能找到当今流行的软件，但它将具有你熟悉的编程语言，并且它无疑是稳定的。
- en: Both Oracle's Solaris and illumos have had some great minds work on them in
    the past, meaning that they also feature stable kernels and sensible approaches
    to development (if you believe some of the more vocal engineers who worked on
    it).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 甲骨文的Solaris和illumos在过去曾有一些优秀的头脑为其工作，这意味着它们也具有稳定的内核和合理的开发方法（如果你相信一些曾在其上工作的更有声望的工程师）。
- en: Sadly, there's a certain amount of head-butting that goes on in the Solaris,
    BSD, and Linux world, with everyone being very opinionated about the "correct"
    way to do specific things, despite all of these OSes being able to trace their
    legacy or inspiration back to a common core (Unix).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，在Solaris、BSD和Linux世界中存在一定程度的冲突，每个人都对特定事物的“正确”做法有着自己的看法，尽管所有这些操作系统都可以追溯到一个共同的核心（Unix）。
- en: Personally, I like installing OSs and tinkering—I'm weird like that.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我喜欢安装操作系统和进行调试——我就是这样奇怪。
- en: Understanding how Windows differs
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Windows的不同之处
- en: You'll have to use Windows—it's a fact of life (at least at the moment).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你将不得不使用Windows——这是一个现实（至少目前是这样）。
- en: If you're not forced to use Windows as the desktop OS of choice in your workplace,
    then there's a good chance there's going to be at least one Windows server you
    have to babysit or manage.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是被迫在工作场所使用Windows作为桌面操作系统的选择，那么很可能你至少会有一个Windows服务器需要照看或管理。
- en: 'Windows still sees common installations for the following reasons:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Windows仍然常见的安装原因有：
- en: Active Directory
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活动目录
- en: Email with Exchange
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Exchange进行电子邮件
- en: File servers
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件服务器
- en: It's also used in the wider server world, with software like IIS holding a sizeable
    (though much smaller than open source offerings) chunk of the web.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 它也被广泛应用于服务器领域，像IIS这样的软件在网络中占据了相当大的一部分（尽管远远小于开源软件的份额）。
- en: Right from the off, and as we talked about previously, Windows and Linux differ
    in some key ways.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始，正如我们之前讨论的，Windows和Linux在一些关键方面有所不同。
- en: The differences
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同之处
- en: Windows is licensed. This is perhaps the most obvious difference between the
    open source offerings and the proprietary world. If you want to use Windows in
    production, you have to ensure that you're correctly licensed, or face a fine
    for being out of compliance.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Windows是有许可的。这可能是开源软件和专有软件之间最明显的区别。如果你想在生产中使用Windows，你必须确保你有正确的许可证，否则就会面临违规罚款。
- en: Funnily enough, this is probably the biggest reason why Linux saw the adoption
    that it did. When faced with a free offering of something that can do the exact
    same thing you're trying to do with Windows, most admins would at least try the
    free version first.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，这可能是Linux获得采用的最大原因。当面对一个可以用来做与Windows相同事情的免费软件时，大多数管理员至少会先尝试免费版本。
- en: The second most obvious difference, although this is slowly changing, is the
    fact that Windows installs a GUI by default, whereas Linux prefers a simple text
    prompt.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个最明显的区别，尽管这种情况正在慢慢改变，是Windows默认安装图形用户界面，而Linux更喜欢简单的文本提示符。
- en: The argument of CLI versus GUI has raged for years, and I'm not about to continue
    it now, but I will say that expending extra resources on graphics capabilities
    on an OS that's rarely—if ever—going to be logged into, seems immensely stupid
    and wasteful.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: CLI与GUI的争论已经持续了多年，我现在不打算继续，但我会说在一个几乎不会被登录的操作系统上耗费额外的资源来支持图形功能，似乎非常愚蠢和浪费。
- en: While it's perfectly possible to install a cut-down version of Windows now that
    doesn't feature a GUI (Windows Server 2016 Nano, for example), it's still not
    frequently seen in data centers, and a lot of functionality is still mostly driven
    by GUIs (especially in third-party software).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然现在完全有可能安装一个不带图形界面的精简版Windows（例如Windows Server 2016 Nano），但在数据中心中仍然不常见，很多功能仍然主要由图形界面驱动（尤其是第三方软件）。
- en: Unlike Linux, where SSH is king, Windows features **Remote Desktop Protocol**
    (**RDP**) as its connection method of choice, delivering a graphical representation
    of the server's desktop to your local machine.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 与Linux不同，Windows采用远程桌面协议（RDP）作为其首选的连接方法，将服务器的桌面图形表示传送到本地计算机。
- en: Amusingly, RDP has also started to be replaced by the likes of remote PowerShell
    connections, and even SSH (which Microsoft has seemingly started to appreciate
    as a very nice and lightweight solution, though adoption rates are still up in
    the air).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，RDP也开始被远程PowerShell连接和甚至SSH所取代（微软似乎开始欣赏SSH作为一种非常好的轻量级解决方案，尽管采用率仍然未知）。
- en: Obviously, Windows also doesn't feature the Linux kernel, instead using the
    **NT kernel** for its own interaction with hardware and low-level work.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，Windows也没有采用Linux内核，而是使用NT内核与硬件和低级工作进行交互。
- en: Anecdote time!
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 趣闻时间！
- en: A few years ago, I was talking with a friend as we walked through the city after
    work. I was young and naive, so I casually mentioned that it might be a good idea
    for Linux people to use Windows more, because adoption from our side would only
    drive improvements on the other side of the fence.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，我和一个朋友在下班后在城市里散步时聊天。我当时年轻而天真，所以我随口提到Linux用户更多地使用Windows可能是个好主意，因为我们这边的采用只会推动对方的改进。
- en: This resulted in raucous laughter and mockery, along with my friend relaying
    this mad suggestion to others from our workplace once we got to the restaurant
    we were heading to. Everyone had a good chuckle at my expense and the matter was
    closed, with the general consensus from us Linux people being that Windows was
    always going to be garbage, and nothing could save it.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了一阵喧闹的笑声和嘲笑，我的朋友在我们到达餐馆后向其他同事传达了这个疯狂的建议。大家都对我开了个玩笑，这件事就这样结束了，我们Linux人的普遍共识是Windows永远都是垃圾，没有什么能拯救它。
- en: Fast forward a few years, that same friend now actively advocates PowerShell,
    has Windows installed on his work machine, and talks about the virtues of using
    Windows over Linux for select tasks.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 快进几年，同样的朋友现在积极倡导PowerShell，在他的工作机器上安装了Windows，并谈论使用Windows而不是Linux进行选择性任务的优点。
- en: I bring this up because I suspect he'll read this book at some point, and I
    just want to remind him that back in the midst of time, he dismissed Windows out
    of hand, just for being Windows.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我提出这个问题是因为我怀疑他迟早会读到这本书，我只是想提醒他，在很久以前，他只是因为是Windows而对Windows不屑一顾。
- en: Times do change, and while Microsoft still get a lot of (arguably justified)
    flack for their stance on things like privacy, they do seem to be making an effort
    to realize their OS as a cloud-world solution.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 时代确实在变化，尽管微软仍然因其在隐私等方面的立场而受到很多（可以说是合理的）批评，但他们似乎正在努力将他们的操作系统实现为云世界的解决方案。
- en: Some people reading this will be old enough to remember **embrace, extend, and
    extinguish** (**EEE**), which is a phrase that was used internally at Microsoft
    to talk about its plan for manipulating open and widely adopted standards, extending
    them with proprietary additions before pushing the open and free alternatives
    out of the market, by saying their product could do everything the others could,
    and more. (Think AD, which is basically LDAP with more bells and whistles.)
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本文的一些人可能已经记得“拥抱、扩展和扑灭”（EEE），这是微软内部用来谈论其操纵开放和广泛采用的标准的计划的短语，通过说他们的产品可以做到其他产品能做的一切，甚至更多，然后推动开放和免费的替代品退出市场，扩展它们以专有的附加功能。
    （想想AD，基本上就是带有更多花哨功能的LDAP。）
- en: There's a few people who believe Microsoft's recent "Microsoft loves Linux"
    stance is just a ploy, and we're about to see a revival of the "EEE" approach.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些人认为微软最近的“微软热爱Linux”的立场只是一个策略，我们即将看到“EEE”方法的复兴。
- en: IaaS (Infrastructure as a Service)
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IaaS（基础设施即服务）
- en: In short and disingenuously, IaaS can be summed up as "cloud servers."
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，IaaS可以被简单地总结为“云服务器”。
- en: IaaS is the term used by cloud providers for denoting the idea that you can
    shift all those dusty, noisy, and expensive on-premises boxes into "the cloud."
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS是云提供商用来表示你可以将所有那些又旧又吵又昂贵的本地服务器转移到“云”中的术语。
- en: In reality, the cloud is just the marketing term for "a bunch of servers in
    various data centres," and it annoys many engineers who dislike wool-filled terms
    that only serve to obfuscate and confuse.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，云只是“各种数据中心中的一堆服务器”的营销术语，这让许多工程师感到恼火，他们不喜欢那些只会混淆和困惑的羊毛术语。
- en: The benefits of doing something like shifting your infrastructure into the cloud
    should be obvious, and we've discussed the idea of **Infrastructure as Code**
    (**IaC**)before.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 像将基础设施转移到云中这样的做法的好处应该是显而易见的，我们之前已经讨论过“基础设施即代码”（IaC）的概念。
- en: Gone are the days when deploying a development environment means buying new
    servers from your distributor, racking and cabling them all, and making sure you've
    got a decent method of getting your OS of choice on there.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，部署开发环境意味着从分销商购买新服务器，架设和布线，确保你有一个体面的方法将你选择的操作系统安装在上面。
- en: Now, infrastructure, from switches to firewalls and servers, can be deployed
    with only a few clicks of the mouse, or better yet, a few commands on the keyboard.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，从交换机到防火墙和服务器的基础设施可以只需点击几下鼠标，或者更好的是，键盘上输入几个命令就可以部署。
- en: IaaS means that you can deploy thousands of boxes in seconds, and tear them
    down just as quickly. This scalability and ease of deployment has meant that companies
    who would previously need to have entire data centres, just for jobs they ran
    once a month, can now save the cost of power and cooling by simply spinning up
    those servers for one "fifteen minute job" and then removing them again.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS意味着你可以在几秒钟内部署成千上万的服务器，并且可以同样快速地将它们拆除。这种可扩展性和部署便利性意味着以前需要为每月运行一次的作业而拥有整个数据中心的公司现在可以通过简单地为一个“十五分钟的作业”启动这些服务器，然后再次将它们删除来节省电力和冷却成本。
- en: Perhaps the biggest benefit of using a cloud solution for your infrastructure
    though, is the fact you don't have to worry about the underlying hardware. Someone
    else (the provider) is responsible for making sure that the servers you're building
    on top of are working, and you generally don't have to concern yourself with things
    like hardware alarms.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用云解决方案的最大好处可能是你不必担心底层硬件。其他人（提供商）负责确保你正在构建的服务器正常工作，通常你不必担心诸如硬件警报之类的事情。
- en: IaaS providers and features
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IaaS提供商和功能
- en: The biggest provider of IaaS services at the moment is Amazon, with their **Amazon
    Web Services** (**AWS**) offering. It might seem a bit strange that an online
    retailer is also the biggest supplier of cloud solutions, but when you consider
    the infrastructure they would have had to design and build for their own platform,
    it makes sense that they would see their way to selling it as a service.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 目前IaaS服务的最大提供商是亚马逊，他们提供的AWS。一个在线零售商也是最大的云解决方案供应商可能看起来有点奇怪，但当你考虑到他们必须为自己的平台设计和构建的基础设施时，他们会想到将其作为服务出售。
- en: AWS is well supported by IaC tools such as Terraform and Packer, being a first
    class citizen, and it also features tools of its own, such as CloudFormation (like
    Terraform).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: AWS得到了IaC工具（如Terraform和Packer）的很好支持，成为一流的公民，它还拥有自己的工具，比如CloudFormation（类似于Terraform）。
- en: Amusingly, AWS also obfuscates names for some strange reason, leading to sites
    like [https://www.expeditedssl.com/aws-in-plain-english](https://www.expeditedssl.com/aws-in-plain-english),
    which offers a list of Amazon's names for things, and then the English equivalent.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，AWS出于某种奇怪的原因也混淆了一些名称，导致出现了像[https://www.expeditedssl.com/aws-in-plain-english](https://www.expeditedssl.com/aws-in-plain-english)这样的网站，该网站提供了亚马逊的一些名称以及相应的英文对照。
- en: EC2, for example, is basically Amazon's name for servers.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，EC2基本上是亚马逊对服务器的称呼。
- en: AWS was launched in 2006, meaning that they had a head-start on Azure, which
    launched in 2010.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: AWS于2006年推出，这意味着他们在2010年推出的Azure之前就已经领先一步。
- en: Microsoft, with Azure, are probably the second largest supplier of cloud solutions,
    and they have the added advantage that if your enterprise signs up to use Office365
    for email and documents, there's a good chance Microsoft will push you to use
    Azure for your infrastructure, too.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 微软的Azure可能是云解决方案的第二大供应商，他们有一个额外的优势，即如果你的企业签署了使用Office365进行电子邮件和文档的协议，微软很有可能会推动你使用Azure来进行基础设施。
- en: There's obviously other providers too, and not all IaaS has to be a remote solution.
    You could deploy an OpenStack installation in your data centre, and then interact
    with its APIs to create an IaaS platform that you use to programmatically spin
    up virtual infrastructure. Obviously, the caveat here is that you still have to
    maintain the underlying boxes, OS, and IaaS software.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 显然还有其他提供商，不是所有的IaaS都必须是远程解决方案。你可以在你的数据中心部署一个OpenStack安装，然后与其API交互，创建一个IaaS平台，用于编程地构建虚拟基础设施。显然，这里的警告是你仍然需要维护基础框、操作系统和IaaS软件。
- en: Google has an IaaS offering, as do Oracle, Rackspace, and IBM. On the smaller
    side, you have the likes of DigitalOcean, Scaleway, and OVH. The choice is yours
    as to which you use, and it comes down to features that are offered more often
    than not.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌有一个IaaS提供，甲骨文、Rackspace和IBM也有。在较小的一边，你有DigitalOcean、Scaleway和OVH。你可以选择使用哪一个，通常取决于提供的功能。
- en: If you have certain requirements (such as data sovereignty), you may find that
    you absolutely have to use an on-shore offering, meaning that you may find some
    of the contenders for IaaS providers are instantly ruled out, but there's usually
    something to fit your needs.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有特定的要求（比如数据主权），你可能会发现你绝对必须使用国内提供的服务，这意味着你可能会发现一些IaaS提供商的竞争对手被立即排除在外，但通常会有一些东西来满足你的需求。
- en: IaaS provides the administrator with flexibility, which means that you no longer
    run the risk of under-speccing a box for specific software, as you can determine
    if you need more resources and simply destroy the box, before creating a new one
    of a bigger type.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS为管理员提供了灵活性，这意味着你不再有低估特定软件的风险，因为你可以确定是否需要更多资源，然后简单地销毁这个盒子，然后创建一个更大型的新盒子。
- en: IaaS means that your firewall and load balancer rules are no longer stored in
    a dumped config file from the half-U box that's inconspicuously whirring near
    your feat. Instead, you can configure text files, which are then read and applied
    as the rest of your infrastructure is built.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS意味着你的防火墙和负载均衡器规则不再存储在一个不起眼的盒子的转储配置文件中。相反，你可以配置文本文件，然后在构建你的基础设施的同时读取和应用它们。
- en: IaaS even means that you can test your infrastructure periodically, destroying
    and rebuilding whole clusters on a schedule, just to make sure an OS update or
    a code change hasn't broken anything.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS甚至意味着你可以定期测试你的基础设施，按计划销毁和重建整个集群，只是为了确保操作系统更新或代码更改没有破坏任何东西。
- en: PaaS (Platform as a Service)
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PaaS（平台即服务）
- en: On the other side of IaaS, or perhaps in parallel to it, is the concept of PaaS.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在IaaS的另一侧，或者与之并行的是PaaS的概念。
- en: Platform as a Service is almost the logical continuation of the virtualization
    of infrastructure, abstracting one level further and asking the question "why
    are we asking our users to spin up a server for PostgreSQL, when we could just
    spin up a PostgreSQL instance?".
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 平台即服务几乎是基础设施虚拟化的逻辑延续，进一步抽象化，并提出了一个问题：“为什么我们要求用户为PostgreSQL启动服务器，而我们可以直接启动一个PostgreSQL实例呢？”
- en: Yes, there will always be a server somewhere, that's a given. These services
    don't just run ephemerally atop a CPU that's floating in a room full of mist somewhere
    (despite that being a cool mental image), but the critical part of this philosophy
    is the idea that you don't care.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，总会有一个服务器存在，这是肯定的。这些服务不仅仅是在一个充满雾气的房间里飘忽不定地运行（尽管这是一个很酷的心理形象），但这种理念的关键部分是你不在乎。
- en: Realistically, you don't give a damn about the OS your database is running on,
    as long as it's actually running and isn't about to crash. However, as an administrator in
    the past, you would be tasked with exactly that—keeping on top of patches and
    reboots just to make sure that the database itself kept going.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你并不关心你的数据库运行在什么操作系统上，只要它确实在运行，而且不会立即崩溃。然而，作为过去的管理员，你将被要求做到这一点——保持对补丁和重新启动的掌握，以确保数据库本身继续运行。
- en: PaaS as a concept therefore sounds wonderful.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，PaaS作为一个概念听起来很美好。
- en: Why should you spin up several OS instances for hosting a website, running a
    database, or deploying Redis, when you could use off-the-shelf offerings that
    provide an endpoint to connect to, and leave the worry of the OS behind?
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么你要为托管网站、运行数据库或部署Redis而启动多个操作系统实例，当你可以使用现成的提供端点连接，并且不用担心操作系统呢？
- en: In the new world, you can deploy your website to a shared web segment, connect
    to a database you've specified, and interact with a Redis endpoint that you've
    no idea what version of Linux it's running on top of (if it's Linux at all!).
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在新世界中，你可以将你的网站部署到一个共享的网络段，连接到你指定的数据库，并与一个Redis端点进行交互，你根本不知道它运行在什么版本的Linux之上（如果它真的是Linux的话！）。
- en: In theory, this also means that developers will have an easier time when writing
    software, as they don't have to concern themselves with specific OS quirks or
    minor differences that might affect their code. As long as developers target the
    common platform provided to them by PaaS, they need not know what OS is running
    underneath at all.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 从理论上讲，这也意味着开发人员在编写软件时会更容易，因为他们不必关心特定的操作系统怪癖或可能影响他们的代码的微小差异。只要开发人员针对PaaS提供的共同平台，他们就不需要知道底层运行的操作系统是什么。
- en: PaaS providers and features
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PaaS提供商和功能
- en: As with IaaS, AWS and Azure are rife with PaaS offerings.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 与IaaS一样，AWS和Azure都充斥着PaaS的提供。
- en: The most obvious offerings are databases, with AWS offering PaaS relational
    databases, NoSQL databases (DynamoDB), and caching systems like Amazon ElastiCache.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 最明显的产品是数据库，AWS提供PaaS关系型数据库、NoSQL数据库（DynamoDB）和缓存系统，比如Amazon ElastiCache。
- en: Azure offerings for databases include MSSQL deployments (obviously) and recently,
    the inclusion of PostgreSQL too.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Azure的数据库产品包括MSSQL部署（显然）和最近还包括了PostgreSQL。
- en: Amazon offer domain name services in the form of Route 53 (ha-ha guys, very
    clever, now quit it with the stupid naming). They also offer CDN solutions, VPN
    setups, and Active Directory services.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊提供域名服务，名为Route 53（哈哈，伙计们，非常聪明，现在别再用愚蠢的命名了）。他们还提供CDN解决方案、VPN设置和Active Directory服务。
- en: Azure offer a CDN solution too, alongside Web Apps (used to host web applications
    and sites), Azure Blob Storage, and non-relational database offerings, such as
    Cosmos DB. There's even a specifically named "Redis Cache" offering to stop you
    having to create your own.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Azure还提供CDN解决方案，以及Web应用（用于托管Web应用和网站）、Azure Blob存储和非关系型数据库产品，比如Cosmos DB。甚至还有一个专门命名的“Redis缓存”产品，让你不必自己创建。
- en: The list goes on and on, meaning that it's not uncommon for greenfield projects
    to get lost among the potentials they can use in their deployment. I would hazard
    that a good rule of thumb for any 21st Century sysadmin should be "if you don't
    have to manage it, don't try."
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表还在继续，这意味着在部署中使用的潜力中，对于绿地项目来说迷失并不罕见。我敢说，对于任何21世纪的系统管理员来说，一个很好的经验法则应该是“如果你不必管理它，就不要尝试”。
- en: If you can get away with using a PaaS option, do, because in the long run it'll
    save you an immense amount of headaches. While the learning curve might be steep
    to begin with, you'll thank your lucky stars that you've gone with a PaaS offering
    the next time there's some major OS vulnerability and you need to start a round
    of critical patching.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你可以使用PaaS选项，那就使用吧，因为从长远来看，它会为你节省大量的麻烦。虽然一开始的学习曲线可能很陡峭，但下次出现重大操作系统漏洞并需要开始一轮关键的补丁时，你会庆幸自己选择了PaaS产品。
- en: Azure and AWS are the obvious two, but as with IaaS, other providers do exist.
    GCP (Google Compute Platform) is the most obvious third contender, but the smaller
    providers are taking their tentative first steps into the market too.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Azure和AWS是最明显的两个，但与IaaS一样，还存在其他提供商。GCP（Google Compute Platform）是最明显的第三个竞争者，但更小的提供商也在市场上迈出了试探性的第一步。
- en: DigitalOcean have started offering things like managed Kubernetes (which is
    sort of PaaS, because you can deploy your own containers into a managed platform),
    block storage, and load balancers. Scaleway have started a public beta for Object
    Storage (at the time of writing).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: DigitalOcean已经开始提供像托管的Kubernetes（这在某种程度上是PaaS，因为你可以将自己的容器部署到托管平台中）、块存储和负载均衡器等产品。Scaleway已经开始公测对象存储（在撰写本文时）。
- en: I think the biggest problem with PaaS is the fact that a lot of work goes into
    it behind the scenes to make it seamless for the end users.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为PaaS最大的问题在于，为了对最终用户无缝使用，背后需要投入大量工作。
- en: You consume that database offering like it's nothing, creating your schema atop
    a transparent fabric, but somewhere down the chain, someone is having to design
    and maintain the systems those PaaS offerings sit atop... I hope they get paid
    a lot of money to do it.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 你像消耗无物一样使用数据库产品，创建你的模式在一个透明的结构之上，但在这个链条的某个地方，有人必须设计和维护这些PaaS产品所依赖的系统……我希望他们得到了很多钱来做这件事。
- en: Obviously, there's negatives—when you go PaaS, there's frequently a case of
    WYSIWYG (what you see is what you get), and the off-the-shelf offering you're
    using won't always be a hundred percent suitable for what you need. If it's ninety
    percent suitable, though, you need to make the judgement call on if it's worth
    that ten percent, or if you'd rather fight a full-fat but customizable IaaS deployment
    instead.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，有负面影响——当你选择PaaS时，经常会出现所见即所得的情况，你使用的现成产品并不总是百分之百适合你的需求。如果它适合百分之九十，你需要判断是否值得那最后的百分之十，或者你宁愿选择一个全功能但可定制的IaaS部署。
- en: The Ops versus DevOps Wars
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ops与DevOps之间的战争
- en: DevOps as a word has been misunderstood, abused, and twisted by recruiters everywhere.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps作为一个词被误解、滥用和扭曲，到处都有招聘人员这样做。
- en: Go to the subreddit for DevOps ([https://old.reddit.com/r/devops](https://old.reddit.com/r/devops))
    and you'll see DevOps referred to as a "movement," which is what it was originally
    intended to be.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 去DevOps的subreddit（https://old.reddit.com/r/devops）上，你会看到DevOps被称为一个“运动”，这正是它最初的意图。
- en: A contraction of Development and Operations, DevOps is supposed to be a methodology
    that combines the principles of software development with traditional IT operations.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps是开发和运维的缩写，它应该是一种将软件开发原则与传统IT运维相结合的方法论。
- en: However, we live in the real world, and while it might be fun for you to shout
    "DevOps isn't a job title!" at the recruiter on the other end of the phone (don't
    do this), it doesn't make the winds of change any weaker.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们生活在现实世界中，虽然你可能会觉得在电话那头对招聘人员大喊“DevOps不是一个职位！”很有趣（不要这样做），但这并不会减弱变革的力量。
- en: I've been called a DevOps engineer, and I know many other people who have too.
    I've also applied for jobs that were specifically hiring for "a DevOps person
    to come on-board and help us evolve." It comes down to usage, as with so much
    in the language world, and if the person doing the hiring says "I want a DevOps,"
    then the recruiter is going to advertise for one.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我被称为DevOps工程师，我也认识很多其他被称为DevOps工程师的人。我也申请过专门招聘“一名DevOps人员加入并帮助我们发展”的工作。这取决于使用情况，就像语言世界中的很多东西一样，如果招聘人员说“我想要一个DevOps”，那么招聘人员就会为之做广告。
- en: The sector itself is only going from strength to strength, as the proven advantages
    of combining traditional development approaches with infrastructure and application
    management become more obvious, and the rise of IaaS and PaaS solutions has only
    succeeded in speeding this adoption up.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 这个行业本身正在不断壮大，因为将传统的开发方法与基础设施和应用程序管理相结合的明显优势得到了证实，IaaS和PaaS解决方案的崛起只加速了这一趋势。
- en: 'In short, I would say working in a DevOps environment comes down to the following:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我认为在DevOps环境中工作归结为以下几点：
- en: Appreciating infrastructure as code
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欣赏基础设施即代码
- en: Valuing reusability of code and practices
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重视代码和实践的可重用性
- en: Assessing and adopting new technologies or practices where appropriate
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估和采用新技术或实践
- en: Many people have different definitions of what "DevOps" is, despite those who
    shout until they're blue in the face that it's a black and white definition, but
    perhaps the worst offenders are the stuck sysadmins and operations engineers who
    simply don't believe in progress.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人对“DevOps”的定义有不同的看法，尽管有些人大声喊叫说这是一个黑白分明的定义，但也许最糟糕的是那些固执的系统管理员和运维工程师，他们根本不相信进步。
- en: I've met people like this—those who don't believe in codification—who seem to
    like snowflake servers for some reason, and who always bill themselves as administrators,
    despite being overlooked for jobs because of it.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我遇到过这样的人 - 那些不相信编码的人，他们似乎喜欢独特的服务器，总是自称为管理员，尽管因此而被忽视而无法得到工作。
- en: There's definitely value in knowing and appreciating traditional system administration,
    but those skills go hand in hand with modern methodologies.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 了解和欣赏传统系统管理的价值是肯定的，但这些技能与现代方法紧密相连。
- en: More of a skirmish, really
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更像是一场小规模战斗。
- en: It used to be that every sysadmin was expected to know at least a little bit
    of SQL, because they were usually thought of as being the DBA (Database Administrator)
    for the infrastructure, too. Now, it's assumed that the sysadmin will also be
    proficient in at least a couple of "DevOps" tools.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，每个系统管理员都被期望至少了解一点SQL，因为他们通常被认为也是基础设施的数据库管理员。现在，人们假定系统管理员至少也精通一些“DevOps”工具。
- en: '"DevOps tools" also has a bit of a vague definition, but anything by Hashicorp
    probably applies.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps工具”也有一些模糊的定义，但Hashicorp公司的任何东西可能都适用。
- en: Where things start to get tricky is the devolution of responsibility.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 事情开始变得棘手的地方在于责任的下放。
- en: 'There are companies out there that have the following:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些公司有以下情况：
- en: A platform team
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个平台团队
- en: An operations team
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个运维团队
- en: A DevOps team
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个DevOps团队
- en: A development team with a DevOps engineer
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个拥有DevOps工程师的开发团队
- en: You tell me, based on the aforementioned list, who is responsible for making
    sure that the OS is up to date.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述列表，你告诉我，谁负责确保OS是最新的。
- en: It's the platform team, surely? The platform is theirs, so they've got a responsibility
    to ensure that all the OSes in the environment are on the latest version.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这是平台团队，对吧？这个平台是他们的，所以他们有责任确保环境中的所有OS都是最新版本。
- en: But what about the DevOps team? They wrote the code to configure the boxes,
    and we know that a bit of their Ansible runs a "yum update" right at the beginning—surely
    they should just run that same Ansible again?
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 但是DevOps团队呢？他们编写了配置盒子的代码，我们知道他们的Ansible在一开始就运行了“yum update” - 他们应该再次运行相同的Ansible吗？
- en: What about operations? In the past, their responsibility might have been ensuring
    OS changes didn't impact software, so surely they should be the ones to update
    the OS?
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 运维呢？过去，他们的责任可能是确保OS更改不会影响软件，所以他们应该是更新OS的人吧？
- en: The developers are the ones who want the latest features of that OS package,
    and they're the ones who've asked for the update to be done—does the responsibility
    therefore lie with their "DevOps" team member?
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员是想要最新OS软件包功能的人，他们要求进行更新 - 因此责任是否应该由他们的“DevOps”团队成员承担？
- en: It's confusing, but not uncommon, to see arguments about responsibility, or
    even arguments about what job title an individual is hired for.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 看到关于责任的争论，甚至是关于个人被雇佣的工作标题的争论，这是令人困惑但并不罕见的。
- en: Partly, this is the fault of the company for not defining a rigid structure,
    but it's also the fault of people who bill themselves a certain way and then silo
    themselves from anything they don't deem to be related to their job.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 部分原因是公司没有定义严格的结构，但也是那些自称某种方式然后将自己与他们认为与自己的工作无关的事情隔离的人的错。
- en: If you find yourself in a company like this, with warring factions who don't
    want to take responsibility for anything, it might be an idea to talk to your
    superior, or superior's superior, or even CTO, about structure.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现自己在这样的公司里，有不愿意承担责任的敌对派系，可能最好是与你的上级，或上级的上级，甚至是CTO，讨论一下结构。
- en: A friend of mine once said (and I'm paraphrasing), "the job title changes, but
    we're just operations engineers at the end of the day." His meaning was that while
    new technologies and trends come and go (I'm looking at you, Node.js!), we'll
    still be needed in our traditional capacities to pick up the pieces when it all
    goes to hell.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我的一个朋友曾经说过（我在这里是引用），“工作标题可能会改变，但归根结底我们还是运维工程师。”他的意思是，虽然新技术和趋势来来去去（我在看你，Node.js！），但当一切都变得一团糟时，我们仍然需要以我们传统的能力来解决问题。
- en: Roundup - BSDs, Solaris, Windows, IaaS and PaaS, DevOps
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结 - BSD，Solaris，Windows，IaaS和PaaS，DevOps
- en: I wanted this chapter to be a bit of a mixed bag that touched on various addendum
    elements to our existence as system administrators. Many of these concepts could
    fill a chapter on their own, but I've already been told by a few people that this
    book is too long, and I've not even finished writing it yet!
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这一章节能够涉及我们作为系统管理员存在的各种补充元素。这些概念中的许多概念都可以单独填满一章，但是我已经被一些人告知这本书太长了，而我甚至还没有完成写作！
- en: Hopefully you've got some idea about the other OSes that exist in the world,
    if you didn't already, and you might even have an inclination to go away from
    this chapter and install SmartOS, or OpenBSD, which I would highly encourage.
    It's good to not silo yourself, and who knows? At some point in the future, this
    beast we know as Linux might die, and something else could rise from the ashes
    to take its place. You should be ready.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你对世界上存在的其他操作系统有一些了解，如果你之前不知道的话，甚至你可能会有倾向离开这一章并安装SmartOS或OpenBSD，我会极力鼓励。不要把自己局限在一个领域，谁知道呢？在未来的某个时刻，我们所知道的这个怪物Linux可能会消亡，然后其他东西可能会从灰烬中崛起来取而代之。你应该做好准备。
- en: Like Linux dying, traditional system administration is definitely changing,
    and if my somewhat sarcastic tone throughout this chapter has suggested anything,
    it's that you should be ready to change with it. IaaS is already commonplace,
    though it's increasingly losing market share to PaaS solutions, especially in
    the enterprise world. Learn how to deploy a website without touching an underlying
    OS once, and you'll be in demand (for the moment, at least).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Linux正在消亡一样，传统的系统管理肯定正在改变，如果我在本章中的讽刺语气暗示了什么，那就是你应该准备跟上变化。IaaS已经很普遍了，尽管在企业世界，它的市场份额正日益流失给PaaS解决方案。学会如何在不触及底层操作系统的情况下部署网站，你将会很受欢迎（至少目前是这样）。
- en: Lastly, there's DevOps, which I've tried to keep short on purpose, because I
    already think I'm going to get people arguing with me about definitions. My friend
    is right, and our job title seems to changes every five years, but ultimately
    it always comes back to the same thing—do you know where to find the log file,
    and can you work out why the service crashed?
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有DevOps，我特意试图保持简短，因为我已经认为会有人和我争论定义。我的朋友是对的，我们的工作标题似乎每五年就会改变一次，但最终它总是回到同一个问题上——你知道在哪里找到日志文件，你能弄清楚为什么服务崩溃了吗？
- en: If you take anything away from this section, take away the fact that you'll
    never know everything there is to know about the systems administration world,
    but the more you know, the more you can earn... or the more pride you might feel
    in your work—something fluffy like that.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从这一部分中得到了什么，那就是你永远不可能知道关于系统管理世界的所有事情，但你知道的越多，你就能赚得越多...或者你可能会对自己的工作感到更自豪——就像那样一些空洞的东西。
