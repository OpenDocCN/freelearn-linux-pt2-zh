- en: Kill the Process
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 杀死进程
- en: Any program that is running on your system is a process. In this chapter, you
    will learn all about Linux processes. You will learn how to view process information.
    You will also learn how to send different signals to a process. Furthermore, you
    will understand the differences between foreground and background processes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的系统上运行的任何程序都是一个进程。在本章中，您将学习有关Linux进程的所有内容。您将学习如何查看进程信息。您还将学习如何向进程发送不同的信号。此外，您将了解前台和后台进程之间的区别。
- en: What is a process?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是进程？
- en: 'A process is simply an instance of a running program. So any program running
    on your system is a process. All of the following are examples of processes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 进程只是运行程序的一个实例。因此，您系统上运行的任何程序都是一个进程。以下都是进程的例子：
- en: Firefox or any web browser running on your system is a process.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的系统上运行的Firefox或任何网络浏览器都是一个进程。
- en: Your Terminal that you are running right now is a process.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在运行的终端现在就是一个进程。
- en: Any game you may play on your system is a process.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您在系统上玩的任何游戏都是一个进程。
- en: Copying files is a process.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制文件是一个进程。
- en: And just like the case with files, every process is owned by a specific user.
    The owner of a process is simply the user who started that process.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 就像文件一样，每个进程都由特定用户拥有。进程的所有者只是启动该进程的用户。
- en: 'To list all the processes that are owned by a specific user, you can run the
    command `ps -u` followed by the username:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有由特定用户拥有的进程，您可以运行命令`ps -u`后跟用户名：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For example, to list all the processes that are owned by `elliot`, you can
    run:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要列出所有由`elliot`拥有的进程，您可以运行：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first column in the output lists the **process identifiers** (**PIDs**).
    The PID is a number that uniquely identifies a process, just like with file `inodes`.
    The last column of the output lists the process names.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 输出中的第一列列出了**进程标识符**（**PIDs**）。PID是一个唯一标识进程的数字，就像文件`inodes`一样。输出的最后一列列出了进程名称。
- en: 'You can use the `ps -e` command to list all the processes that are running
    on your system:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`ps -e`命令列出系统上正在运行的所有进程：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also use the `-f` option to get more information:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`-f`选项来获取更多信息：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The first column of the output lists the usernames of the process owners. The
    third column of the output lists the **parent process identifiers** (**PPIDs**).
    Well, what the heck is a parent process?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的第一列列出了进程所有者的用户名。输出的第三列列出了**父进程标识符**（**PPID**）。那么，父进程是什么？
- en: Parent process versus child process
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 父进程与子进程
- en: A parent process is a process that has started one or more child processes.
    A perfect example will be your terminal and your bash shell; when you open your
    terminal, your bash shell is started as well.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 父进程是启动了一个或多个子进程的进程。一个完美的例子将是您的终端和您的bash shell；当您打开终端时，您的bash shell也会启动。
- en: 'To get the PID of a process, you can use the `pgrep` command followed by the
    process name:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取进程的PID，您可以使用`pgrep`命令后跟进程名称：
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For example, to get the PID of your terminal process, you can run:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要获取您的终端进程的PID，您可以运行：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The PID of my terminal is `10009`. Now, let''s get the PID of the bash process:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我的终端的PID是`10009`。现在，让我们获取bash进程的PID：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The PID of my bash shell is `10093`. Now, you can get the information of your
    bash process by using the `-p` option followed by the bash PID:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我的bash shell的PID是`10093`。现在，您可以使用`-p`选项后跟bash PID来获取您的bash进程的信息：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can see from the output that the PPID of my bash process is equal to the
    PID of my terminal process. This proves that the terminal process has started
    the bash process. In this case, the bash process is referred to as the child process
    of the terminal process:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从输出中看到，我的bash进程的PPID等于我的终端进程的PID。这证明了终端进程已启动了bash进程。在这种情况下，bash进程被称为终端进程的子进程：
- en: '![](img/c2580a3e-58f9-4bee-a96a-f64ba220be44.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2580a3e-58f9-4bee-a96a-f64ba220be44.png)'
- en: 'Figure 1: Parent process versus child process'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：父进程与子进程
- en: 'The `top` command is a very useful command that you can use to view processes''
    information in real time. You can check its `man` page to learn how to use it:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`命令是一个非常有用的命令，您可以使用它实时查看进程的信息。您可以查看其`man`页面以了解如何使用它：'
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output for the preceding command is shown in the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下截图所示：
- en: '![](img/af6b849c-c266-4a45-8ac4-416ca8afc82e.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af6b849c-c266-4a45-8ac4-416ca8afc82e.png)'
- en: 'Figure 2: The top command'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：top命令
- en: Foreground versus background processes
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前台与后台进程
- en: 'There are two types of processes in Linux:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Linux中有两种类型的进程：
- en: Foreground processes
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前台进程
- en: Background processes
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后台进程
- en: A foreground process is a process that is attached to your terminal. You have
    to wait for a foreground process to finish before you can continue using your
    terminal.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 前台进程是附加到您的终端的进程。您必须等待前台进程完成，然后才能继续使用您的终端。
- en: On the other hand, a background process is a process that is not attached to
    your terminal, and so you can use your terminal while a background process is
    running.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，后台进程是不附加到您的终端的进程，因此您可以在后台进程运行时使用您的终端。
- en: 'The `yes` command outputs any string that follows it repeatedly until killed:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`yes`命令会重复输出跟在其后的任何字符串，直到被杀死：'
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For example, to output the word `hello` repeatedly on your terminal, you can
    run the command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要在您的终端上重复输出单词`hello`，您可以运行命令：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Notice that it will keep running, and you can''t do anything else on your terminal;
    this is a prime example of a foreground process. To claim back your terminal,
    you need to kill the process. You can kill the process by hitting the *Ctrl* +
    *C* key combination as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，它将继续运行，您无法在终端上执行其他操作；这是前台进程的一个典型例子。要收回您的终端，您需要杀死该进程。您可以通过按以下*Ctrl* + *C*键组合来杀死该进程：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As soon as you hit *Ctrl* + *C*, the process will be killed, and you can continue
    using your terminal. Let''s do another example; you can use the `firefox` command
    to start up Firefox from your terminal:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你按下*Ctrl* + *C*，进程将被终止，你可以继续使用你的终端。让我们做另一个例子；你可以使用`firefox`命令从你的终端启动Firefox：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The Firefox browser will start, but you will not be able to do anything on your
    terminal until you close Firefox; this is another example of a foreground process.
    Now, hit *Ctrl* + *C* to kill the Firefox process so you can claim back your terminal.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox浏览器将启动，但你将无法在终端上做任何事情直到关闭Firefox；这是另一个前台进程的例子。现在，按下*Ctrl* + *C*来终止Firefox进程，这样你就可以重新使用你的终端了。
- en: 'You can start up Firefox as a background process by adding the ampersand character
    as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加&字符来将Firefox作为后台进程启动，如下所示：
- en: '[PRE13]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Firefox is now running as a background process, and you can continue using your
    terminal without having to close Firefox.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox现在作为后台进程运行，你可以继续使用你的终端而不必关闭Firefox。
- en: Sending signals to processes
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向进程发送信号
- en: 'You can interact and communicate with processes via signals. There are various
    signals, and each signal serves a different purpose. To list all available signals,
    you can run the `kill -L` command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过信号与进程进行交互和通信。有各种信号，每个信号都有不同的目的。要列出所有可用的信号，你可以运行`kill -L`命令：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice that every signal has a numeric value. For example, `19` is the numeric
    value for the `SIGSTOP` signal.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到每个信号都有一个数字值。例如，`19`是`SIGSTOP`信号的数字值。
- en: 'To see how signals work, let''s first start Firefox as a background process:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解信号的工作原理，让我们首先将Firefox作为后台进程启动：
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Notice that the PID of Firefox is `4218` on my system. I can kill (terminate)
    Firefox by sending a `SIGKILL` signal as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到Firefox在我的系统上的PID是`4218`。我可以通过发送`SIGKILL`信号来终止Firefox，如下所示：
- en: '[PRE16]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This will immediately shut down Firefox. You can also use the numeric value
    of the `SIGKILL` signal instead:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这将立即关闭Firefox。你也可以使用`SIGKILL`信号的数字值：
- en: '[PRE17]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In general, the syntax for the `kill` command is as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，`kill`命令的语法如下：
- en: '[PRE18]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s start Firefox again as a background process:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次将Firefox作为后台进程启动：
- en: '[PRE19]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Notice that the PID of Firefox is `4907` on my system. Now go ahead and start
    playing a YouTube video on Firefox. After you have done that, go back to your
    terminal and send the `SIGSTOP` signal to Firefox:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到Firefox在我的系统上的PID是`4907`。现在继续在Firefox上播放YouTube视频。在你这样做之后，回到你的终端并向Firefox发送`SIGSTOP`信号：
- en: '[PRE20]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You will notice that Firefox becomes unresponsive and your YouTube video is
    stopped; no problem – we can fix that by sending the `SIGCONT`signal to Firefox:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到Firefox变得无响应，你的YouTube视频停止了；没问题 - 我们可以通过向Firefox发送`SIGCONT`信号来解决这个问题：
- en: '[PRE21]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This will resurrect Firefox, and your YouTube video will now resume.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使Firefox恢复，并且你的YouTube视频现在会继续播放。
- en: 'So far, you have learned three signals:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经学会了三种信号：
- en: '`SIGKILL`: Terminates a process'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SIGKILL`：终止一个进程'
- en: '`SIGSTOP`: Stops a process'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SIGSTOP`：停止一个进程'
- en: '`SIGCONT`: Continues a process'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SIGCONT`：继续一个进程'
- en: 'You can use process names instead of process identifiers with the `pkill` command.
    For example, to close your terminal process, you can run the command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`pkill`命令使用进程名称而不是进程标识符。例如，要关闭你的终端进程，你可以运行以下命令：
- en: '[PRE22]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now let''s do something funny; open your terminal and run the command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们做一些有趣的事情；打开你的终端并运行以下命令：
- en: '[PRE23]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Haha! Your terminal is now frozen. I will let you handle that!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 哈哈！你的终端现在被冻结了。我会让你处理这个！
- en: 'There are many other signals that you can send to processes; check the following
    `man` page to understand the use of each signal:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以向进程发送许多其他信号；查看以下`man`页面以了解每个信号的用途：
- en: '[PRE24]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Working with process priority
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理进程优先级
- en: 'Each process has a priority that is determined by the niceness scale, which
    ranges from **-20** to **19**. The lower the nice value, the higher the priority
    of a process, so a nice value of **-20** gives the highest priority to a process.
    On the other hand, a nice value of **19** gives the lowest priority to a process:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 每个进程都有一个由友好度量表确定的优先级，范围从**-20**到**19**。友好值越低，进程的优先级越高，所以友好值为**-20**给予进程最高的优先级。另一方面，友好值为**19**给予进程最低的优先级：
- en: '![](img/9505008f-5775-4723-9777-c7c8e53e87ac.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9505008f-5775-4723-9777-c7c8e53e87ac.png)'
- en: 'Figure 3: The Niceness Scale'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：友好度量表
- en: 'You might be asking yourself: *Why do we care about a process priority?* The
    answer is efficiency! Your CPU is like a waiter in a busy restaurant. An efficient
    waiter goes around all the time to ensure that all the customers are happily served.
    Similarly, your CPU allocates time to all processes running on your system. A
    process with a high priority gets a lot of attention from the CPU. On the other
    hand, a process with a low priority doesn''t get as much attention from the CPU.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问自己：*我们为什么关心进程的优先级？*答案是效率！你的CPU就像一个繁忙餐厅里的服务员。一个高效的服务员会一直忙碌，确保所有顾客都得到满意的服务。同样，你的CPU分配时间给系统上运行的所有进程。优先级高的进程会得到CPU的更多关注。另一方面，优先级低的进程不会得到CPU的太多关注。
- en: Viewing a process priority
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看进程优先级
- en: 'Start Firefox as a background process:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 将Firefox作为后台进程启动：
- en: '[PRE25]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You can use the `ps` command to view a process'' nice value:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`ps`命令查看进程的友好值：
- en: '[PRE26]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: My Firefox process has a nice value of **0**, which is the default value (average
    priority).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我的Firefox进程有一个友好值为**0**，这是默认值（平均优先级）。
- en: Setting priorities for new processes
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为新进程设置优先级
- en: 'You can use the `nice` command to start a process with your desired priority.
    The general syntax of the `nice` command goes as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`nice`命令以你期望的优先级启动一个进程。`nice`命令的一般语法如下：
- en: '[PRE27]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s say you are about to upgrade all the packages on your system; it would
    be wise to give such a process the highest priority possible. To do that, you
    can run the following command as the `root` user:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你要升级系统上的所有软件包；给这样一个进程尽可能高的优先级是明智的。为此，你可以以`root`用户身份运行以下命令：
- en: '[PRE28]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Changing a process priority
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改变一个进程的优先级
- en: 'You can use the `renice` command to change the priority of a running process.
    We have already seen that Firefox was running with a default process priority
    of zero; let''s change Firefox''s priority and give it the lowest priority possible:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`renice`命令更改正在运行的进程的优先级。我们已经看到Firefox正在以默认进程优先级零运行；让我们更改Firefox的优先级，并将其设置为可能的最低优先级：
- en: '[PRE29]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Cool! Now I hope Firefox will not be very slow for me; after all, I just told
    my CPU not to give much attention to Firefox!
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在我希望Firefox对我来说不会很慢；毕竟，我刚刚告诉我的CPU不要太关注Firefox！
- en: The /proc directory
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: /proc目录
- en: 'Every process in Linux is represented by a directory in `/proc`. For example,
    if your Firefox process has a PID of `6849`, then the directory `/proc/6849` will
    represent the Firefox process:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Linux中的每个进程都由`/proc`中的一个目录表示。例如，如果您的Firefox进程的PID为`6849`，那么目录`/proc/6849`将表示Firefox进程：
- en: '[PRE30]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Inside a process'' directory, you can find a lot of valuable and insightful
    information about the process. For  example, you will find a soft link named `exe`
    that points to the process'' executable file:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在进程的目录中，您可以找到关于进程的许多有价值和富有洞察力的信息。例如，您将找到一个名为`exe`的软链接，指向进程的可执行文件：
- en: '[PRE31]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You will also find the `status` file, which stores various pieces of information
    about a process; these include the process state, the PPID, the amount of memory
    used by the process, and so on:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会找到`status`文件，其中存储了有关进程的各种信息；这些信息包括进程状态、PPID、进程使用的内存量等等：
- en: '[PRE32]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The `limits` file displays the current limits set for the process:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`limits`文件显示了为进程设置的当前限制：'
- en: '[PRE33]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The `fd` directory will show you all the files that the process is currently
    using on your system:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`fd`目录将显示进程当前在系统上正在使用的所有文件：'
- en: '![](img/b80b52ee-796b-450e-8186-b7e7ee62705c.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b80b52ee-796b-450e-8186-b7e7ee62705c.png)'
- en: 'Figure 4: fd directory'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：fd目录
- en: 'You can also use the `lsof` command to list all the files a process is using:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`lsof`命令列出进程当前正在使用的所有文件：
- en: '![](img/cccfab95-38f4-4dd3-b54a-8116d9054551.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cccfab95-38f4-4dd3-b54a-8116d9054551.png)'
- en: 'Figure 5: lsof command'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：lsof命令
- en: Knowledge check
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知识检查
- en: 'For the following exercises, open up your Terminal and try to solve the following
    tasks:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下练习，打开您的终端并尝试解决以下任务：
- en: List the process ID of your running terminal.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出您正在运行的终端的进程ID。
- en: List the parent process ID of your running terminal.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出您正在运行的终端的父进程ID。
- en: Use the `kill` command to close your terminal.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kill`命令关闭您的终端。
- en: Start Firefox as a background process.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Firefox作为后台进程启动。
- en: Change Firefox's priority to a maximum priority.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Firefox的优先级更改为最高优先级。
