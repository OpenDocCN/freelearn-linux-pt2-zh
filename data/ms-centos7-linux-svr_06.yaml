- en: Chapter 6. Virtualization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 虚拟化
- en: These days, computer infrastructures have changed in many ways. We no longer
    see a room full of servers, each responsible for providing several services depending
    on how powerful they are. In these times, we only see a few big servers composed
    of several units so as to reinforce their capacities. This type of server hosts
    several virtual servers that serve the same old purposes as per the infrastructure
    requirements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，计算基础设施在许多方面发生了变化。我们不再看到一个房间里放满了服务器，每个服务器负责根据其强大程度提供多种服务。在这些时代，我们只看到一些由多个单元组成的大型服务器，以增强它们的容量。这种类型的服务器托管了几个虚拟服务器，以满足基础设施要求。
- en: In our days, being a system administrator for bare-metal machines is just not
    enough. Virtual machines are on the rise; we should admit this. Big companies
    are no longer using old architectures; it is no longer a good option. A lot of
    money and huge management effort is required to sustain them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的时代，成为裸机系统管理员已经不够了。虚拟机正在兴起；我们应该承认这一点。大公司不再使用旧的架构；这已经不再是一个好选择。需要大量资金和巨大的管理工作来维持它们。
- en: In this chapter, we are going to explain virtualization as a concept, where
    we will see how to set up several virtualization technologies, and then give an
    example of how to create some virtual machines for each one of those technologies.
    Finally, we will explain, in brief, what Docker is and how to add an image and
    access the Docker container.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将解释虚拟化的概念，我们将看到如何设置几种虚拟化技术，然后举例说明如何为每种技术创建一些虚拟机。最后，我们将简要解释Docker是什么，以及如何添加镜像和访问Docker容器。
- en: 'Through this chapter, you are going to learn the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，您将学习以下主题：
- en: Basics of virtualization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化基础
- en: Concept of full virtualization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全虚拟化的概念
- en: Concept of paravirtualization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 半虚拟化的概念
- en: Understanding Xen and how to use it
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Xen以及如何使用它
- en: Using KVM to set up some Linux virtual machines
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用KVM设置一些Linux虚拟机
- en: Creating a virtual machine using OpenVZ
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenVZ创建虚拟机
- en: Setting up and configuring virtual machines on VirtualBox
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VirtualBox上设置和配置虚拟机
- en: Understanding Docker and how to create a container and access it
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Docker以及如何创建容器和访问它
- en: Establishing services' high availability using HAProxy
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用HAProxy建立服务的高可用性
- en: The basics of virtualization on Linux
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux上的虚拟化基础
- en: Virtualization is the capacity to create a machine-like program that simulates,
    the physical behavior of a real machine running through virtual hardware including
    CPU, RAM, Hard disk, Network card, and so on, where those resources are all being
    taken from the physical machine running the virtual one.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化是创建一个类似机器的程序的能力，模拟真实机器通过虚拟硬件运行，包括CPU、RAM、硬盘、网络卡等，这些资源都来自运行虚拟机的物理机器。
- en: 'Earlier, the way of managing services was to deploy a new server or upgrade
    the old one to meet the requirements of the new services to perform long and complex
    migrations in the event of a hardware failure. All the time, there would be too
    little RAM, too few disks, or low processing power. Managers got tired of trying
    to fix the existent system while paying a lot of money to help maintain an old
    server that was no longer supported. However, they did not have too many options,
    since the services running on those machines were very important and essential.
    Companies were deploying servers that would not work on their peak capacity, and
    there was no better way of controlling every server''s capacity for the right
    services with the right hardware equipment. All of these reasons made the newborn
    solution of virtualization grow so fast. Just after a while from its first deployment,
    virtualization has been integrated in many fields, specially in the field of computer
    science. Virtualization allows an abstraction of the physical hardware, to run
    multiple virtual machines on a single shared resource (CPU, Memory, Networking,
    and Storage):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 早些时候，管理服务的方式是部署新服务器或升级旧服务器以满足新服务的要求，进行长时间复杂的迁移以应对硬件故障。一直以来，内存太少，磁盘太少，或者处理能力不足。管理者们厌倦了试图修复现有系统，同时支付大量资金来帮助维护不再受支持的旧服务器。然而，他们没有太多选择，因为运行在这些机器上的服务非常重要和必不可少。公司部署了无法在其高峰容量上运行的服务器，没有更好的方法来控制每台服务器的容量，以满足正确的硬件设备的正确服务。所有这些原因使得虚拟化这一新生解决方案迅速增长。虚拟化部署后不久，就已经在许多领域，特别是在计算机科学领域得到了整合。虚拟化允许对物理硬件进行抽象，以在单个共享资源（CPU、内存、网络和存储）上运行多个虚拟机：
- en: '![The basics of virtualization on Linux](img/B04674_06_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Linux上的虚拟化基础](img/B04674_06_01.jpg)'
- en: 'Source: [http://cdn.arstechnica.net](http://cdn.arstechnica.net)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://cdn.arstechnica.net](http://cdn.arstechnica.net)
- en: 'Now, this new technology is booming. We are witnessing a new virtualization
    service being born each day. Virtualization has been divided into many types:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这种新技术正在蓬勃发展。我们每天都在见证新的虚拟化服务诞生。虚拟化已经分为许多类型：
- en: We have network virtualization, which is related to virtual network creation
    and management to separate groups of machines from each other. They are connected
    to the same switch and group of switches.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有网络虚拟化，它涉及虚拟网络的创建和管理，以将一组机器与另一组机器分开。它们连接到同一个交换机和一组交换机。
- en: We also have application virtualization, wherein we put an application or an
    ensemble of applications inside a container, and then we make the application
    believe that it is running on its original supported system. So, it believes that
    it can access the resource that it needs.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还有应用虚拟化，其中我们将一个应用程序或一组应用程序放入容器中，然后让应用程序相信它是在其原始支持的系统上运行。因此，它相信它可以访问所需的资源。
- en: Finally, we have full machine virtualization. This is a kind of virtualization
    that creates a full virtual machine (desktop, server) with its virtual hardware
    and the dedicated services on demand. This virtualization involves abstraction
    of the server-based workload (the work load demanded by the virtual machine user)
    from the underlying hardware. The virtual machine won't notice if it is running
    on a physical or a virtual hardware as long as the hardware answering its service's
    demands for resources (store data, network access to other machines, and so on).
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们有完整的机器虚拟化。这是一种虚拟化，它创建一个完整的虚拟机（桌面、服务器），具有其虚拟硬件和按需的专用服务。这种虚拟化涉及将基于服务器的工作负载（虚拟机用户要求的工作负载）与底层硬件分离。只要硬件满足其服务对资源（存储数据、网络访问其他机器等）的需求，虚拟机就不会注意到它是在物理硬件上还是在虚拟硬件上运行。
- en: In this chapter, we will focus on both application virtualization and desktop
    virtualization.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点关注应用虚拟化和桌面虚拟化。
- en: A piece of software called hypervisor is executed on the physical machine to
    help with the virtualization of the data center, with a goal of a platform for
    the virtual machines. The hypervisor's main job is to organize dynamically the
    physical resources between the different virtual machines running under its control.
    This gives them the capacity to run independently of the physical machine where
    a system administrator can relocate a virtual machine from a host to another without
    affecting it. A hypervisor, also called a virtual machine manager, is a program
    that allows multiple operating systems to share a single hardware host.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一种名为hypervisor的软件在物理机器上执行，以帮助数据中心的虚拟化，目标是为虚拟机提供平台。 Hypervisor的主要工作是在其控制下运行的不同虚拟机之间动态组织物理资源。这使它们能够独立于物理机器运行，系统管理员可以将虚拟机从一个主机重新定位到另一个主机而不会影响它。
    Hypervisor，也称为虚拟机管理器，是一种允许多个操作系统共享单个硬件主机的程序。
- en: While using a virtual machine or a container, we are expecting to provide the
    applications or services with an operating system that can host them and simplify
    their communication to the hardware. Since those machines are not really running
    on the physical hardware, virtualization allows them to access dynamically and
    flexibly the CPU, memory, storage, and networking resources as necessary.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用虚拟机或容器时，我们期望提供可以托管应用程序或服务并简化其与硬件通信的操作系统。由于这些机器实际上并未在物理硬件上运行，虚拟化允许它们根据需要动态和灵活地访问CPU、内存、存储和网络资源。
- en: Virtualization can increase flexibility and management and offers a better scalability
    with an enormous saving in costs. The service's workload gets deployed faster,
    with a visible increase in performance-on-demand availability, while getting the
    scalability function automated, to simplify the infrastructure management for
    the IT support guys.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化可以增加灵活性和管理，并提供更好的可扩展性，大大节省成本。服务的工作负载部署速度更快，性能按需可见增加，同时自动化可扩展性功能，简化了IT支持人员的基础设施管理。
- en: 'Let''s enumerate some of the major advantages of having a virtualization solution
    installed on a server infrastructure:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列举一些在服务器基础设施上安装虚拟化解决方案的主要优势：
- en: Reduction in the number of hardware and operating costs
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少硬件和运营成本
- en: Delivery of high availability of applications and services
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供高可用性的应用程序和服务
- en: Minimization or elimination of downtime (with best practice methods)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化或消除停机时间（采用最佳实践方法）
- en: Increase in the IT team's productivity, efficiency, agility, and responsiveness
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高IT团队的生产力、效率、灵活性和响应能力
- en: Increase in speed and simplification of application and resource provisioning
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加快应用和资源配置的速度和简化
- en: Support for business continuity and disaster recovery as an increase in the
    system's security
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持业务连续性和灾难恢复，增加系统安全性
- en: Enabling centralized management
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现集中管理
- en: Building a true software-defined data center
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建真正的软件定义数据中心
- en: Exploiting the full advantages of multicore processor machines
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充分利用多核处理器机器的优势
- en: 'The following figure shows an example of three Linux virtual machines running
    on one Linux server. These machines are controlled and managed by a type of hypervisor
    depending on the virtualization chosen:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了在一个Linux服务器上运行的三个Linux虚拟机的示例。这些机器由根据所选择的虚拟化类型控制和管理：
- en: '![The basics of virtualization on Linux](img/B04674_06_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: 利用Linux上虚拟化的基础知识
- en: A virtual machine really is just some files in some format stored at a specific
    location on the host machine. For some technologies, it can also be an LVM logical
    volume or a direct device. The virtual disk used by a virtual machine is just
    another file encapsulated within it. Inside a virtual machine, managing the OS
    and applications can be simplified (in some ways; it is complicated in others).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机实际上只是主机机器上特定位置存储的一些文件。对于某些技术，它也可以是LVM逻辑卷或直接设备。虚拟机使用的虚拟磁盘只是其中封装的另一个文件。在虚拟机内部，管理操作系统和应用程序可以简化（在某些方面；在其他方面则很复杂）。
- en: But the good thing is that having the virtual machine as just a folder full
    of files that can be copied and moved makes it easier to backup in the event of
    a hardware failure on the physical machine. In such cases, the manager should
    simply buy a new server, load the backed-up virtual machines on it, and run the
    entire environment again as if nothing ever happened.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 但好处在于，将虚拟机作为一个充满文件的文件夹，可以复制和移动，这样在物理机器发生硬件故障时更容易备份。在这种情况下，管理者只需购买一台新服务器，将备份的虚拟机加载到其中，并再次运行整个环境，就好像从未发生过一样。
- en: 'Using the CentOS repository, we have a choice between two virtualization technologies:
    **Xen** and **KVM**. To understand these virtualization technologies, you need
    to understand the two different approaches to virtualization: full virtualization
    and paravirtualization.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CentOS存储库，我们可以在**Xen**和**KVM**之间选择两种虚拟化技术。要了解这些虚拟化技术，您需要了解虚拟化的两种不同方法：完全虚拟化和半虚拟化。
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A combination of paravirtualization and full virtualization has been created,
    called **hybrid virtualization**. In it, some parts of the guest operating system
    use paravirtualization for certain hardware drivers, and the host uses full virtualization
    for other features. This often produces superior performance on the guest without
    the need for the guest to be completely paravirtualized.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 已经创建了半虚拟化和完全虚拟化的组合，称为**混合虚拟化**。在其中，客户操作系统的某些部分使用半虚拟化来进行某些硬件驱动程序，而主机使用完全虚拟化来进行其他功能。这通常会在客户机上产生更好的性能，而无需客户机完全进行半虚拟化。
- en: Full virtualization
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完全虚拟化
- en: Full virtualization is a virtualization technology that completely simulates
    virtual hardware underneath the virtual machines, with no interaction with the
    physical hardware. It requires that the entire hardware underneath the virtual
    machine to become unnoticeable. This technology can simulate any kind of physical
    hardware on demand to answer the need of the system running on the virtual machine,
    which answers any service or application demand for specific baremetal hardware.
    In other words, full virtualization is a virtualization capacity to fully run
    the guest machine without letting it become aware that it is running on a virtual
    environment. The virtual machine, in this case, has a fully virtualized hardware
    to run its services on. They don't have any interaction with the physical hardware.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 完全虚拟化是一种完全模拟虚拟机下的虚拟硬件的虚拟化技术，与物理硬件没有任何交互。它要求虚拟机下的整个硬件变得不可察觉。这项技术可以根据系统在虚拟机上运行的需求模拟任何类型的物理硬件，以满足特定裸机硬件的任何服务或应用需求。换句话说，完全虚拟化是一种完全运行客户机而不让其意识到它在虚拟环境中运行的虚拟化能力。在这种情况下，虚拟机具有完全虚拟化的硬件来运行其服务。它们与物理硬件没有任何交互。
- en: 'The following diagram shows how, during full virtualization, the underlying
    platform runs the guest OS without being modified or being aware that it is running
    on a virtualization:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了在完全虚拟化期间，底层平台运行客户操作系统而不被修改或知道它正在虚拟化上运行：
- en: '![Full virtualization](img/B04674_06_03.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![完全虚拟化](img/B04674_06_03.jpg)'
- en: There is a specific type of full virtualization called hardware-assisted virtualization.
    In this, the CPU architecture helps with the execution of hardware virtualization
    through some special instructions that might allow the guest machine to execute
    privileged instructions directly on the CPU, even though it is a virtualization.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种特定类型的完全虚拟化称为硬件辅助虚拟化。在这种情况下，CPU架构通过一些特殊指令帮助执行硬件虚拟化，这些指令可能允许客户机直接在CPU上执行特权指令，尽管它是虚拟化的。
- en: Using the CentOS 7 server, we can conduct full virtualization or hardware-assisted
    full virtualization by using either Xen or KVM. We will see how to do so in the
    *Setting up Xen for CentOS 7* section.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CentOS 7服务器，我们可以使用Xen或KVM进行完全虚拟化或硬件辅助完全虚拟化。我们将在*为CentOS 7设置Xen*部分中看到如何做到这一点。
- en: On a larger scale, solutions that can implement full virtualization include
    VMware's family of hypervisors, Xen and XenServer, VirtualBox, QEMU, and KVM.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在更大的范围内，可以实现完全虚拟化的解决方案包括VMware的一系列hypervisors、Xen和XenServer、VirtualBox、QEMU和KVM。
- en: Paravirtualization
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 半虚拟化
- en: Paravirtualization is a new kind of enhancement to the virtualization technology.
    It has the capacity of making the guest OS recompile before being installed on
    the vertical machine that serves the virtual machines to identify between virtual
    and physical hardware. With the use of this virtualization, we have a better optimization
    in system performance via conserving computing resources. It is due to this technology
    that we don't need to dedicate resources for the virtual machines and will be
    used only as necessary. Differing from the full virtualization where we need to
    create the virtual resources and dedicate them to the virtual machine, it is rather
    being used or not.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 半虚拟化是虚拟化技术的一种新型增强。它具有在为虚拟机提供服务的垂直机器上安装客户操作系统之前重新编译的能力，以区分虚拟和物理硬件。通过使用这种虚拟化，我们可以通过保留计算资源来更好地优化系统性能。这是因为我们不需要为虚拟机专门分配资源，只有在需要时才会使用。与需要创建虚拟资源并将其分配给虚拟机的完全虚拟化不同，它只是被使用或不被使用。
- en: In paravirtualization, the guest operating system is managed by the hypervisor—as
    a layer lying between the physical machine and the virtual machines—to efficiently
    enable and share physical device access. While it normally doesn't require full
    device emulation or dynamic recompiling to perform privileged instructions, paravirtualization
    often performs at a near-native speed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在半虚拟化中，客户操作系统由hypervisor管理，作为位于物理机器和虚拟机之间的一层，以有效地启用和共享物理设备访问。虽然通常不需要完全设备仿真或动态重新编译来执行特权指令，但半虚拟化通常以接近本机速度运行。
- en: '![Paravirtualization](img/B04674_06_04.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![半虚拟化](img/B04674_06_04.jpg)'
- en: This preceding architecture shows how the paravirtualization virtual machines
    interact with the physical hardware through the special hypervisor that communicates
    directly with the modifier OS to optimize the communication.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 前述架构显示了半虚拟化虚拟机如何通过直接与修改器OS通信的特殊hypervisor与物理硬件交互以优化通信。
- en: Paravirtualization is an expansion of a technology invented by IBM. Xen is an
    open source software project that incorporates paravirtualization. The Xen hypervisor
    is what brought about the term *paravirtualization*. Today, most virtualization
    solutions support paravirtualization as a norm. A number of Linux development
    vendors have collaborated on a new form of paravirtualization, initially developed
    by the Xen group, and it provides a hypervisor-agnostic interface between the
    hypervisor and guest OS kernels.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Paravirtualization是IBM发明的一种技术的扩展。Xen是一个开源软件项目，它包含了paravirtualization。Xen hypervisor是带来术语*paravirtualization*的东西。今天，大多数虚拟化解决方案都支持paravirtualization作为一种规范。一些Linux开发供应商合作开发了一种新形式的paravirtualization，最初由Xen小组开发，并为hypervisor和客户操作系统内核之间提供了一个与hypervisor无关的接口。
- en: Setting up Xen on CentOS 7
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7上设置Xen
- en: Xen is an open source solution used to run multiple virtual systems on one machine.
    It supports both paravirtualization and hardware-assisted full-virtualization.
    Xen is a very powerful virtualization solution. It offers the capacity to use
    both virtualization technologies at the same time to always answer the user's
    demands.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Xen是一个开源解决方案，用于在一台机器上运行多个虚拟系统。它支持paravirtualization和硬件辅助的全虚拟化。Xen是一个非常强大的虚拟化解决方案。它提供了同时使用两种虚拟化技术以始终满足用户需求的能力。
- en: To create our virtualization environment using Xen, we need to make sure that
    the Xen Hypervisor will boot just before the machine's own kernel to have access
    to as much physical hardware as possible, so it can be used to serve our environment's
    virtual machines.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Xen创建我们的虚拟化环境，我们需要确保Xen Hypervisor将在机器自己的内核之前启动，以便尽可能多地访问物理硬件，因此可以用来为我们的环境的虚拟机提供服务。
- en: '![Setting up Xen on CentOS 7](img/B04674_06_05.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置Xen](img/B04674_06_05.jpg)'
- en: 'Source: [http://www.2virt.com](http://www.2virt.com)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://www.2virt.com](http://www.2virt.com)
- en: 'In this section, we are going to set up Xen4 for CentOS 7\. Xen4 is not supported
    by the default CentOS 7 repository, so we need to add the CentOS Xen repository.
    But first, we need to make sure that we have some packages installed. These will
    be needed later during the installation of Xen:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为CentOS 7设置Xen4。默认的CentOS 7仓库不支持Xen4，因此我们需要添加CentOS Xen仓库。但首先，我们需要确保安装了一些软件包。这些将在安装Xen时稍后需要：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then we add the latest Xen repository using YUM:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用YUM添加最新的Xen仓库：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In this tutorial, we will be installing Xen Version 4.5, so we need to run
    the installation command as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将安装Xen 4.5版本，因此我们需要运行安装命令如下：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To verify that the installation is done, we need to list the Xen kernel archive,
    which is in the `/boot` folder:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证安装是否完成，我们需要列出Xen内核存档，它位于`/boot`文件夹中：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We should see the following code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该看到以下代码：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, we move on to the installation of the `kernel-xen` package. This installation
    should be executed separately from the Xen installation and after it so that the
    system boot loader grub can detect the new kernel and get configured correctly:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们继续安装`kernel-xen`软件包。此安装应该单独执行，安装Xen之后，以便系统引导加载程序grub可以检测到新内核并正确配置：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After having the new kernel installed, we should resolve the SELinux issue.
    We can try to resolve the issues by determining which modules the SELinux is blocking
    and resolve that, or if we have a better method to secure our server, we can just
    disable it. To disable SELinux, we just need to go to its configuration file and
    disable it:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了新内核后，我们应该解决SELinux问题。我们可以尝试通过确定SELinux正在阻止哪些模块并解决问题来解决问题，或者如果我们有更好的方法来保护我们的服务器，我们可以直接禁用它。要禁用SELinux，我们只需要进入其配置文件并禁用它：
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, consider this line:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，考虑这一行：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Change it to the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 将其更改为以下内容：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Otherwise, if we need to check the issues, we can follow this. First, we check
    the log file for the cause of the issue:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，如果我们需要检查问题，我们可以按照这个步骤。首先，我们检查问题的日志文件：
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, we activate the blockage:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们激活阻塞：
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And this should resolve the issue. Finally, we can restart the system and boot
    the new Xen kernel. After the restart, we need to check whether the Xen kernel
    is correctly installed:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该解决问题。最后，我们可以重新启动系统并引导新的Xen内核。重新启动后，我们需要检查Xen内核是否正确安装：
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To use Xen, we need to install some tools and packages to make the virtual
    machines run well. First, we need to make sure that the basic usage packages are
    installed:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Xen，我们需要安装一些工具和软件包，以确保虚拟机运行良好。首先，我们需要确保安装了基本的使用软件包：
- en: '[PRE12]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, we need to configure the network. But before that, we must create the
    bridge interface:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要配置网络。但在此之前，我们必须创建桥接接口：
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, we add the following lines inside the file that we have just opened using
    nano and save it:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们在刚刚使用nano打开的文件中添加以下行并保存：
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then, we make minor changes to the default network interface configuration
    file to use the bridged interface:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们对默认网络接口配置文件进行微小更改，以使用桥接接口：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We need to change the MAC address with the Ethernet interface MAC address. We
    can check that using `ifconfig`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要用以太网接口的MAC地址更改MAC地址。我们可以使用`ifconfig`来检查。
- en: 'After that, we reboot the system. With this, the bridge network is ready to
    be used. Then, we download any Linux system for the test. Next, we need to make
    it an IMG file using the `dd` command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们重新启动系统。这样，桥接网络就准备好使用了。然后，我们下载任何Linux系统进行测试。接下来，我们需要使用`dd`命令将其制作为IMG文件：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, we download any Linux system for the test. Moreover, we must create a
    kick-start file and put it at the same location:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们下载任何Linux系统进行测试。此外，我们必须创建一个kick-start文件并将其放在相同的位置：
- en: '[PRE17]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Then, we add the following code with the required modification:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们添加以下代码并进行必要的修改：
- en: '[PRE18]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Finally, we use `virt-install` to create the VM:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`virt-install`来创建虚拟机：
- en: '[PRE19]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now the virtual machine should start and be able to get an IP from the DHCP
    server; so we can continue tweaking it and adding the required service.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在虚拟机应该启动并能够从DHCP服务器获取IP；因此我们可以继续调整它并添加所需的服务。
- en: 'For Xen usage, we need to use the following commands (we are going to present
    the most common ones. For more, you can always follow this link [https://www.centos.org/docs/5/html/Virtualization-en-US/virt-task-xm-create-manage-doms.html](https://www.centos.org/docs/5/html/Virtualization-en-US/virt-task-xm-create-manage-doms.html)):'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Xen的使用，我们需要使用以下命令（我们将介绍最常见的命令。更多信息，请访问此链接[https://www.centos.org/docs/5/html/Virtualization-en-US/virt-task-xm-create-manage-doms.html](https://www.centos.org/docs/5/html/Virtualization-en-US/virt-task-xm-create-manage-doms.html)）：
- en: 'To connect to the virtual machine:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到虚拟机：
- en: '[PRE20]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To shutdown or reboot a machine:'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭或重启一个机器：
- en: '[PRE21]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To remove (terminate) a machine:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要删除（终止）一个机器：
- en: '[PRE22]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To suspend and resume a machine:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暂停和恢复一个机器：
- en: '[PRE23]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: To rename a machine
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名一个机器
- en: '[PRE24]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To pause, and then unpause a machine:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暂停，然后取消暂停一个机器：
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Setting up KVM for full virtualization on CentOS 7
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7上设置KVM进行完全虚拟化
- en: KVM can only support hardware-assisted full virtualization. And there is still
    work going on in supporting paravirtualization. KVM is a kernel module that only
    works with the default Linux kernel (we should not install it on the Xen one).
    KVM creates virtual machines using a personalized version of Qemu for KVM called
    **Qemu-kvm**.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: KVM只能支持硬件辅助的完全虚拟化。目前还在支持半虚拟化方面进行工作。KVM是一个内核模块，只能与默认的Linux内核一起使用（不应该安装在Xen上）。KVM使用一个名为**Qemu-kvm**的个性化版本的Qemu来创建虚拟机。
- en: '![Setting up KVM for full virtualization on CentOS 7](img/B04674_06_06.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置KVM进行完全虚拟化](img/B04674_06_06.jpg)'
- en: 'Source: [http://www.virtualopensystems.com](http://www.virtualopensystems.com)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://www.virtualopensystems.com](http://www.virtualopensystems.com)
- en: 'KVM has many useful features and advantages supported by its hypervisor:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: KVM具有许多有用的功能和优势，由其hypervisor支持：
- en: '**Thin provisioning**: This is the capacity to allocate flexible storage and
    manage the available space for the virtual machines'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**薄配置**：这是分配灵活存储空间和管理虚拟机可用空间的能力'
- en: '**Overcommitting**: This is the capacity to allocate more CPU and memory power
    more that the available resource on the physical machine'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过度承诺：这是分配更多的CPU和内存资源的能力，超过了物理机上可用的资源
- en: '**Automatic NUMA balancing**: This is an improvement to the application running
    on the NUMA hardware'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动NUMA平衡**：这是对在NUMA硬件上运行的应用程序的改进'
- en: '**Disk I/O throttling**: This is the capacity to manage limits of the physical
    system disk input and output requests sent by the virtual machines'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘I/O限制**：这是管理虚拟机发送的物理系统磁盘输入和输出请求的限制的能力'
- en: '**Virtual CPU hot add capability**: This is the capacity to adjust the processing
    power of the virtual machines without any downtime'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟CPU热添加功能**：这是在没有任何停机时间的情况下调整虚拟机的处理能力的能力'
- en: 'Before starting the KVM installation, we need to check some pre-installation
    steps. First, we check whether the machine CPU can handle the virtualization technology:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始KVM安装之前，我们需要检查一些预安装步骤。首先，我们检查机器的CPU是否能够处理虚拟化技术：
- en: '[PRE26]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To know whether that''s true, we need to see the `vmx` or `svm` word highlighted
    in the command output:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要知道是否正确，我们需要查看命令输出中是否突出显示了`vmx`或`svm`字样：
- en: 'Then, we make sure that the system packages are all updated:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们确保系统软件包都已更新：
- en: '[PRE27]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, we change the working mode of SELinux to permissive to make sure that
    it won''t bother the execution of KVM:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将SELinux的工作模式更改为宽松模式，以确保它不会干扰KVM的执行：
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Then, consider this line:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，考虑这一行：
- en: '[PRE29]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Change it to the following:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 将其更改为以下内容：
- en: '[PRE30]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We can now start the installation. First, we will install the `Qemu` package
    to provide a user level for KVM and its disk image manager:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以开始安装了。首先，我们将安装`Qemu`软件包，以提供KVM的用户级和其磁盘映像管理器：
- en: '[PRE31]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, we need to install the GUI for the virtual machine''s administration,
    the command-line tools to administrate the virtual environment, the tool that
    helps create virtual machines from the CLI, and the hypervisor library:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要安装虚拟机管理的GUI，命令行工具来管理虚拟环境，帮助从CLI创建虚拟机的工具，以及hypervisor库：
- en: '[PRE32]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Finally, for CentOS 7, we add the virtualization client, virtualization platform,
    and virtualization tools:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于CentOS 7，我们添加了虚拟化客户端、虚拟化平台和虚拟化工具：
- en: '[PRE33]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'With this step done, we can say that we have finished installing the required
    tools and packages. Now, we go to the configuration part. First, we need to restart
    the virtualization daemon to make sure that the entire configuration is well set:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了这一步，我们可以说我们已经安装了所需的工具和软件包。现在，我们进入配置部分。首先，我们需要重新启动虚拟化守护程序，以确保整个配置设置正确：
- en: '[PRE34]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Then, we check whether it is running well or not:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们检查它是否运行良好：
- en: '[PRE35]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'We should see this as the output:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该看到这个输出：
- en: '![Setting up KVM for full virtualization on CentOS 7](img/B04674_06_07.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置KVM进行完全虚拟化](img/B04674_06_07.jpg)'
- en: 'Now, we move on to the network configuration. We need to create a bridge interface
    to allow the guest system to access an external network. To do so, we must enable
    IP forwarding:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们继续进行网络配置。我们需要创建一个桥接口，以允许客户系统访问外部网络。为此，我们必须启用IP转发：
- en: '[PRE36]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Then, we check whether it is well set:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们检查它是否设置正确：
- en: '[PRE37]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'After that, we need to change the network configuration by keeping the original
    interface as it is, but we will assign its IP address to the bridge:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们需要通过保持原始接口不变来更改网络配置，但是我们将把其IP地址分配给桥接口：
- en: '[PRE38]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Next, we add the following line to the end of the file and save it:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们在文件末尾添加以下行并保存：
- en: '[PRE39]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Then, we create the bridge interface configuration file:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们创建桥接口配置文件：
- en: '[PRE40]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'After that, we put the following code inside the file we just opened for editing,
    and save it:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将以下代码放入我们刚刚打开进行编辑的文件中，并保存：
- en: '[PRE41]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: After rebooting the system, we can say that the network configuration is well
    set.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动系统后，我们可以说网络配置已经设置好了。
- en: 'After we complete the KVM installation and configuration, it''s time to start
    using the host. The first thing we need to do is create a new domain or virtual
    machine. To do so, using the CLI, we will make use of the `virt-install` command.
    First, we need to see the list of templates known to our KVM installation:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成KVM安装和配置后，是时候开始使用主机了。我们需要做的第一件事是创建一个新的域或虚拟机。为此，使用CLI，我们将使用`virt-install`命令。首先，我们需要查看已知于我们的KVM安装的模板列表：
- en: '[PRE42]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We need an ISO of the Linux OS to use it for the installation. Then, we can
    start the setup of a new virtual machine:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个Linux OS的ISO文件来用于安装。然后，我们可以开始设置新的虚拟机：
- en: '[PRE43]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The options written in the preceding command are as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令中的选项如下：
- en: '`name`: This is the name of the virtual machine'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这是虚拟机的名称'
- en: '`ram`: This is the memory size in MB'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ram`：这是内存大小（以MB为单位）'
- en: '`vcpus`: This is the number of virtual CPUs'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vcpus`：这是虚拟CPU的数量'
- en: '`cdrom`: This is the location of the ISO image'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cdrom`：这是ISO镜像的位置'
- en: '`os-type`: This is the OS type, such as Linux, Windows, or Unix'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`os-type`：这是操作系统类型，如Linux、Windows或Unix'
- en: '`os-variant`: This is the OS variant, such as rhel 6 or Solaris'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`os-variant`：这是OS变体，如rhel 6或Solaris'
- en: '`network`: This is the network interface and connectivity'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`network`：这是网络接口和连接'
- en: '`graphics`: This is the guest display settings'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`graphics`：这是客户端显示设置'
- en: '`disk path`: This is the location of the disk with a size of 10 GB'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disk path`：这是具有10GB大小的磁盘的位置'
- en: Once we have issued the preceding command, `virt-install` will create a virtual
    machine and start the `virt` viewer console for the OS installation.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们发出了前述命令，`virt-install`将创建一个虚拟机，并启动OS安装的`virt`查看器控制台。
- en: Note
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There is always a graphical mode perform the previous treatment. The graphical
    tools is called virt-manager found a the system tools.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 总是有一个图形模式执行前面的处理。图形工具称为系统工具中的virt-manager。
- en: 'The following commands are meant for better management of the KVM virtual machines
    after being deployed:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令旨在更好地管理部署后的KVM虚拟机：
- en: 'To list the virtual machines running on KVM:'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出在KVM上运行的虚拟机：
- en: '[PRE44]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'To get more information about a virtual machine:'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取有关虚拟机的更多信息：
- en: '[PRE45]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'To stop a running guest machine:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止运行的客户机：
- en: '[PRE46]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'To start a virtual machine:'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动虚拟机：
- en: '[PRE47]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'To delete a guest machine:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要删除客户机：
- en: '[PRE48]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Finally, the code used to automatically start a virtual machine with the host
    system startup:'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，用于在主机系统启动时自动启动虚拟机的代码：
- en: '[PRE49]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '![Setting up KVM for full virtualization on CentOS 7](img/B04674_06_08.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置KVM进行完全虚拟化](img/B04674_06_08.jpg)'
- en: 'Source: [https://virt-manager.org/](https://virt-manager.org/)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://virt-manager.org/](https://virt-manager.org/)
- en: Setting up OpenVZ virtualization on CentOS 7
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7上设置OpenVZ虚拟化
- en: OpenVZ is a new form of virtualization technology that we call a container based
    one. It basically creates multiple secure and isolated Linux containers running
    on a single Linux server. This container technology allows better server utilization,
    since we are not installing a full virtual machine, just a container to hold some
    of it, and it eliminates application conflict. The virtual machine running on
    OpenVZ platform are on a standalone mode, where it is the capacity to run without
    falling in any type of conflict with any other virtual machine running on the
    same platform. Those machines are independent from each other.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVZ是一种我们称之为基于容器的新型虚拟化技术。它基本上在单个Linux服务器上创建多个安全和隔离的Linux容器。这种容器技术允许更好地利用服务器，因为我们不是安装完整的虚拟机，只是一个容器来容纳其中的一些内容，并且它消除了应用程序冲突。在OpenVZ平台上运行的虚拟机处于独立模式，它具有在不与同一平台上运行的任何其他虚拟机发生任何冲突的能力。这些机器彼此独立。
- en: The virtual machines running on OpenVZ have their own operating system, IP address,
    processes, memory or storage space, application and configuration files, and so
    on.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenVZ上运行的虚拟机有自己的操作系统、IP地址、进程、内存或存储空间、应用程序和配置文件等。
- en: '![Setting up OpenVZ virtualization on CentOS 7](img/B04674_06_09.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置OpenVZ虚拟化](img/B04674_06_09.jpg)'
- en: 'Source: [http://www.quantact.com](http://www.quantact.com)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://www.quantact.com](http://www.quantact.com)
- en: While using OpenVZ, the virtualization is run through the system-level virtualization
    technology, where the guest system uses the same kernel as the physical machine
    system unlike KVM and VirtualBox and this helps with the usage effectiveness of
    the physical machine processing power and the storage power.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用OpenVZ时，虚拟化是通过系统级虚拟化技术运行的，其中客户系统使用与物理机系统相同的内核，不同于KVM和VirtualBox，这有助于提高物理机处理能力和存储能力的使用效率。
- en: For a better usage for OpenVZ, we might need to use QEMU and Virtuozzo as management
    utilities. We really recommend the usage of the OpenVZ container and virtual machines
    on a Virtuozzo installation of images.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地使用OpenVZ，我们可能需要使用QEMU和Virtuozzo作为管理实用程序。我们真的建议在Virtuozzo镜像的OpenVZ容器和虚拟机上使用。
- en: For CentOS 7, there is no working OpenVZ distribution as of now. So, we are
    going to install its forked project, Virtuozzo 7, which is capable of all OpenVZ
    options and more. Yet, we are going to use the OpenVZ tools only.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS 7，目前还没有可用的OpenVZ发行版。因此，我们将安装其分支项目Virtuozzo 7，它能够实现所有OpenVZ选项以及更多功能。然而，我们将仅使用OpenVZ工具。
- en: 'To install Virtuozzo 7, we need to install the RPM-based distribution package.
    First, we need to bring the meta information of the `virtuozzo-release` package
    into the YUM repository:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Virtuozzo 7，我们需要安装基于RPM的发行包。首先，我们需要将`virtuozzo-release`包的元信息引入YUM存储库：
- en: '[PRE50]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Then, we install the mandatory Virtuozzo RPM packages:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们安装必需的Virtuozzo RPM包：
- en: '[PRE51]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now, we have OpenVZ kernel installed. We move on to the kernel parameter configuration:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经安装了OpenVZ内核。我们继续进行内核参数配置：
- en: '[PRE52]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Then, we add the following code:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们添加以下代码：
- en: '[PRE53]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After that, we make SELinux act permissive to ensure that OpenVZ works fine:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们使SELinux处于宽松模式，以确保OpenVZ正常工作：
- en: '[PRE54]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Next, we need to have the configuration line to make it look like the following:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要有配置行，使其看起来像下面这样：
- en: '[PRE55]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'This part is optional. We can install the OpenVZ usage statistics tools if
    needed:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分是可选的。如果需要，我们可以安装OpenVZ使用统计工具：
- en: '[PRE56]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now, since we have successfully installed OpenVZ, we can reboot the system
    and log in through the OpenVZ kernel. We need to edit the OpenVZ configuration
    file to set the same subnet for physical and virtual machines:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经成功安装了OpenVZ，我们可以重新启动系统并通过OpenVZ内核登录。我们需要编辑OpenVZ配置文件，为物理和虚拟机设置相同的子网：
- en: '[PRE57]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Then, we find and uncomment the following line and change its option to this:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们找到并取消注释以下行，并将其选项更改为这样：
- en: '[PRE58]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Now, we can set up a web-based interface for OpenVZ to help administrate it.
    We need to download the installation script and run it:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以为OpenVZ设置一个基于Web的界面来帮助管理它。我们需要下载安装脚本并运行它：
- en: '[PRE59]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Then, add the port from where this web interface is going to serve using Firewalld:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用Firewalld添加从中提供Web界面的端口：
- en: '[PRE60]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Then, reload Firewalld:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新加载Firewalld：
- en: '[PRE61]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The web-based interface will be serving its web interface at the machine hostname
    or IP address followed by port number `3000`:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Web的界面将在机器主机名或IP地址后跟端口号`3000`上提供其Web界面：
- en: '[PRE62]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Now, we are going to start using OpenVZ to download a container and start using
    it. First, we need to specify a folder to put our containers into:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将开始使用OpenVZ来下载一个容器并开始使用它。首先，我们需要指定一个文件夹来放置我们的容器：
- en: '[PRE63]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Then, we download an example container:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们下载一个示例容器：
- en: '[PRE64]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Next, we unpack the `tar` file:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们解压`tar`文件：
- en: '[PRE65]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Then, we type this command to create our first virtual machine:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们输入此命令来创建我们的第一个虚拟机：
- en: '[PRE66]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Our container ID is `101`, since they typically start from `100`. Now, we set
    an IP address for our container:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的容器ID是`101`，因为它们通常从`100`开始。现在，我们为容器设置一个IP地址：
- en: '[PRE67]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Then comes a DNS server:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是DNS服务器：
- en: '[PRE68]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'After having the network configuration ready, we can start our newly created
    container:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络配置准备就绪后，我们可以启动我们新创建的容器：
- en: '[PRE69]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'We can verify that it is running by pinging its IP address:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过ping其IP地址来验证它是否正在运行：
- en: '[PRE70]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Now, we can log in to our container to explore it:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以登录到我们的容器中进行探索：
- en: '[PRE71]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: We are in the newly created container. We can do whatever we want with it. To
    exit the virtual machine, we can simply type exit in the terminal. Also, using
    the OpenVZ web interface, we can visualize its status and do some administrative
    management through it.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在新创建的容器中。我们可以随心所欲地使用它。要退出虚拟机，我们只需在终端中输入exit。此外，使用OpenVZ Web界面，我们可以可视化其状态并通过它进行一些管理管理。
- en: '![Setting up OpenVZ virtualization on CentOS 7](img/B04674_06_10.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置OpenVZ虚拟化](img/B04674_06_10.jpg)'
- en: 'Source: [https://bderzhavets.wordpress.com/](https://bderzhavets.wordpress.com/)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://bderzhavets.wordpress.com/](https://bderzhavets.wordpress.com/)
- en: Setting up VirtualBox virtualization on CentOS 7
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7上设置VirtualBox虚拟化
- en: Oracle VirtualBox is a virtualization application that has the capacity to run
    on multiple computer architectures (Intel, AMD-based systems) and on almost every
    available OS (OSX, Linux, Windows, Solaris, and so on), where it allows its users
    to run multiple operating systems on the same physical machine. Basically, virtual
    box is a full virtualization technology.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle VirtualBox是一个虚拟化应用程序，可以在多个计算机架构（Intel、基于AMD的系统）和几乎所有可用的操作系统（OSX、Linux、Windows、Solaris等）上运行，它允许用户在同一台物理机器上运行多个操作系统。基本上，虚拟盒是一种完全虚拟化技术。
- en: Most people count on it while using multiple systems and need to export and
    import template virtual machines, where virtual box offers a variety of options
    to exchange virtual machines between all kinds of infrastructures.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人在使用多个系统时都依赖它，并且需要导出和导入模板虚拟机，虚拟盒提供了各种选项，可以在各种基础设施之间交换虚拟机。
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_11.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_11.jpg)'
- en: 'Source: [http://www.oracle.com](http://www.oracle.com)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://www.oracle.com](http://www.oracle.com)
- en: 'This section will show you how to install Oracle VirtualBox 5.0.2 on CentOS
    7\. Firstly, we need to add the VirtualBox yum repository to our system. So, we
    need to create its repo file in the YUM repository directory:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将向您展示如何在CentOS 7上安装Oracle VirtualBox 5.0.2。首先，我们需要将VirtualBox yum存储库添加到我们的系统中。因此，我们需要在YUM存储库目录中创建其repo文件：
- en: '[PRE72]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Then, we need to put the following code into the file and save it:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要将以下代码放入文件并保存：
- en: '[PRE73]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'We should also have the EPEL repository installed:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该安装EPEL存储库：
- en: '[PRE74]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Before we start the installation, we need to install some necessary packages
    to make sure that VirtualBox works fine:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始安装之前，我们需要安装一些必要的软件包，以确保VirtualBox正常工作：
- en: '[PRE75]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Then, we set up an environment variable called `KERN_DIR`, from which VirtualBox
    will get the kernel source code:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们设置一个名为`KERN_DIR`的环境变量，VirtualBox将从中获取内核源代码：
- en: '[PRE76]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Tip
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'My latest kernel version is stored in this directory: `3.10.0-229.14.1.el7.x86_64`.
    It might change over time due to upgrades.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我的最新内核版本存储在这个目录中：`3.10.0-229.14.1.el7.x86_64`。由于升级，它可能会随时间而改变。
- en: 'Then, we can start the installation of VirtualBox using YUM:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用YUM开始安装VirtualBox：
- en: '[PRE77]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'After the installation, we need to rebuild the kernel modules using the following
    command:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们需要使用以下命令重建内核模块：
- en: '[PRE78]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Now, we have VirtualBox installed and ready for use. Still, VirtualBox only
    supports graphical interfaces, so we need to have one installed and then we can
    start it and use it.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经安装了VirtualBox并准备好使用。不过，VirtualBox只支持图形界面，所以我们需要安装一个图形界面，然后我们可以启动并使用它。
- en: We need to have a graphical interface installed on our server and we have a
    long list to choose from. I would recommend Gnome, as it is one of the most used
    interfaces with its user-friendliness and its low resources consumption.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在服务器上安装一个图形界面，我们有一个很长的列表可供选择。我建议使用Gnome，因为它是最常用的界面之一，用户友好且资源消耗低。
- en: 'Using Gnome as the graphical interface, we can start VirtualBox:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Gnome作为图形界面，我们可以启动VirtualBox：
- en: '[PRE79]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_12.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_12.jpg)'
- en: 'Then, we can go ahead and create a new virtual machine. We give it a name and
    a type, as shown here:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以继续创建一个新的虚拟机。我们给它一个名称和类型，如下所示：
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_13.jpg)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_13.jpg)'
- en: 'Next, we proceed to configure the amount of RAM to give it, as shown in the
    following screenshot:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们继续配置要分配的RAM数量，如下截图所示：
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_14.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_14.jpg)'
- en: 'Then comes the amount of disk space, as follows:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是磁盘空间的数量，如下所示：
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_15.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_15.jpg)'
- en: VirtualBox offers some extra services that allow the mouse and the keyboard
    of the original system to switch between the physical and the virtual machine.
    To install those tools, we can go to the VM menu, then the **Guest** option, and
    then install the virtual machine guest tools. It will take some time to get installed,
    then we need to restart the virtual machine so that those tools can start working.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox提供了一些额外的服务，允许原始系统的鼠标和键盘在物理机和虚拟机之间切换。要安装这些工具，我们可以转到VM菜单，然后选择**Guest**选项，然后安装虚拟机客户端工具。安装需要一些时间，然后我们需要重新启动虚拟机，以便这些工具可以开始工作。
- en: 'To finish, we have our virtual machine ready to be executed, as shown in the
    following screenshot:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的虚拟机已准备好执行，如下截图所示：
- en: '![Setting up VirtualBox virtualization on CentOS 7](img/B04674_06_16.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置VirtualBox虚拟化](img/B04674_06_16.jpg)'
- en: Setting up Docker on CentOS 7
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7上设置Docker
- en: Sharing the same technology as OpenVZ on using the container technology, Docker
    is another alternative for container-based software virtualization. Docker is
    famous due to its capacity to automatically deploy applications. Those templates
    or containers are divided between community containers presented as templates
    provided by the Docker community, or private containers provided by individual
    users. Some of the user-personalized containers can be publicly available, others
    can be stored in a private folder that can be accessed by their creator or some
    one he wants to share with. Docker containers are portable, lightweight, and encapsulated
    application modules.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 与OpenVZ使用容器技术相同的技术，Docker是基于容器的软件虚拟化的另一种选择。Docker因其自动部署应用程序的能力而闻名。这些模板或容器分为社区容器（由Docker社区提供的模板）和个人用户提供的私有容器。一些用户个性化的容器可以公开使用，其他的可以存储在可以被其创建者或他想要分享的人访问的私人文件夹中。Docker容器是可移植的、轻量级的、封装的应用程序模块。
- en: 'According to the industry analyst firm, 451 Research:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 根据行业分析公司451 Research的说法：
- en: '*"Docker is a tool that can package an application and its dependencies in
    a virtual container that can run on any Linux server. This helps enable flexibility
    and portability on where the application can run, whether on premises, public
    cloud, private cloud, bare metal, etc."*'
  id: totrans-289
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"Docker是一个工具，可以将应用程序及其依赖项打包到一个虚拟容器中，在任何Linux服务器上都可以运行。这有助于实现应用程序可以运行的灵活性和可移植性，无论是在本地、公共云、私有云、裸机等。"*'
- en: 'To install Docker, we are going to use the Docker installation script. Here,
    we have another way to install Docker via YUM—the traditional way:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Docker，我们将使用Docker安装脚本。在这里，我们还有另一种通过YUM安装Docker的方式——传统方式：
- en: 'First, we need to make sure that our system packages are updated:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要确保我们的系统软件包已更新：
- en: '[PRE80]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Then, we run the Docker installation script:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们运行Docker安装脚本：
- en: '[PRE81]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '![Setting up Docker on CentOS 7](img/B04674_06_17.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置Docker](img/B04674_06_17.jpg)'
- en: 'Source: [http://blog.ouseful.info/](http://blog.ouseful.info/)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ouseful.info/](http://blog.ouseful.info/)
- en: This script will add the Docker repository to the system repository and then
    install Docker.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此脚本将把Docker存储库添加到系统存储库，然后安装Docker。
- en: 'If too many users are going to use Docker in our system, we need to add them
    to the Docker group:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们系统中要使用Docker的用户太多，我们需要将他们添加到Docker组中：
- en: '[PRE82]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Then, we start the Docker daemon. Add it to the system startup script:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们启动Docker守护程序。将其添加到系统启动脚本中：
- en: '[PRE83]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'To verify that Docker is correctly installed, we have a simple image container
    that we can test:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要验证Docker是否正确安装，我们有一个简单的镜像容器可以测试：
- en: '[PRE84]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'To download a Docker container, we need to look for its name and then type
    in the following command:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要下载一个Docker容器，我们需要查找它的名称，然后输入以下命令：
- en: '[PRE85]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'To run the container, we need to use the `docker run` command with the `-i`
    option to attach `stdin` and `stdout` to the container, and the `-t` option to
    allocate a `tty` interface:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行容器，我们需要使用`docker run`命令，使用`-i`选项将`stdin`和`stdout`附加到容器，使用`-t`选项分配一个`tty`接口。
- en: '[PRE86]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'To leave the Docker container without losing the shell terminal, we need to
    follow the following sequence: `Ctrl-p` and `Ctrl-q` at the same time.'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使Docker容器保持不丢失shell终端，我们需要按照以下顺序操作：同时按下`Ctrl-p`和`Ctrl-q`。
- en: 'For more community containers that are publicly available on the Web, we can
    always use the following command:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取更多公开可用的Web社区容器，我们可以始终使用以下命令：
- en: '[PRE87]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '![Setting up Docker on CentOS 7](img/B04674_06_18.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![在CentOS 7上设置Docker](img/B04674_06_18.jpg)'
- en: 'Source: [http://blog.ouseful.info/](http://blog.ouseful.info/)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ouseful.info/](http://blog.ouseful.info/)
- en: Establishing services' high availability using HAProxy
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HAProxy建立服务的高可用性
- en: For this section, we are going to show in brief how to setup a high-availability/load
    balancer to control traffic over a specific service; in our case, we will use
    HTTP as for web server's traffic.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一部分，我们将简要展示如何设置高可用性/负载均衡器来控制特定服务的流量；在我们的案例中，我们将使用HTTP作为Web服务器的流量。
- en: '![Establishing services'' high availability using HAProxy](img/B04674_06_19.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![使用HAProxy建立服务的高可用性](img/B04674_06_19.jpg)'
- en: 'Source: [assets.digitalocean.com](http://assets.digitalocean.com)'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[assets.digitalocean.com](http://assets.digitalocean.com)
- en: For this job, we are using HAProxy as an open source solution for load balancing
    and services' high availability through multiple servers. It is commonly used
    for a website's traffic load balancing. HAProxy distributes the workload over
    many servers that offer the same services (basically web servers, databases, and
    so on) to improve the overall performance of the service and its reliability.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 为此工作，我们使用HAProxy作为负载平衡和服务高可用性的开源解决方案，通过多个服务器。它通常用于网站的流量负载平衡。HAProxy将工作负载分布到提供相同服务的许多服务器上（基本上是Web服务器、数据库等），以提高服务的整体性能和可靠性。
- en: As we said earlier, this section is going to install and configure a high availability
    load balancer to share the load between three web servers and a backup server
    in case of server or service failure to take over.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所说，本节将安装和配置高可用性负载均衡器，以在三个Web服务器和备用服务器之间共享负载，以便在服务器或服务故障时接管。
- en: 'So, we will have an infrastructure that looks like this:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将拥有一个看起来像这样的基础设施：
- en: 'HAProxy server:'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HAProxy服务器：
- en: '**OS**: CentOS 7'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：CentOS 7'
- en: '**IP address**: 172.25.25.166 and 10.0.0.10'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：172.25.25.166和10.0.0.10'
- en: '**Hostname**: haproxy.packt.co.uk'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：haproxy.packt.co.uk'
- en: 'Web server 1:'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器1：
- en: '**OS**: CentOS 7'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：CentOS 7'
- en: '**IP address**: 10.0.0.11'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：10.0.0.11'
- en: '**Hostname**: webserver1.packt.co.uk'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：webserver1.packt.co.uk'
- en: 'Web server 2:'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器2：
- en: '**OS**: CentOS 7'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：CentOS 7'
- en: '**IP address**: 10.0.0.12'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：10.0.0.12'
- en: '**Hostname**: webserver2.packt.co.uk'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：webserver2.packt.co.uk'
- en: 'Web server 3:'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器3：
- en: '**OS**: CentOS 7'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：CentOS 7'
- en: '**IP address**: 10.0.0.13'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：10.0.0.13'
- en: '**Hostname**: webserver3.packt.co.uk'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：webserver3.packt.co.uk'
- en: 'Backup web server:'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备用Web服务器：
- en: '**OS**: CentOS 7'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：CentOS 7'
- en: '**IP address**: 10.0.0.20'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IP地址**：10.0.0.20'
- en: '**Hostname**: backupwebserver.packt.co.uk'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：backupwebserver.packt.co.uk'
- en: '![Establishing services'' high availability using HAProxy](img/B04674_06_20.jpg)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![使用HAProxy建立服务的高可用性](img/B04674_06_20.jpg)'
- en: First, we will start by setting the web servers and to do so, we will be only
    using the default page generated by Apache after being installed. For more information
    on how to setup a web server, you can always refer to [Chapter 3](ch03.html "Chapter 3. Linux
    for Different Purposes"), *Linux for Different Purposes*. So, we will only need
    to have Apache installed and running and we need to configure the network and
    the machine's hostname.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将开始设置Web服务器，为此，我们将仅使用安装后由Apache生成的默认页面。有关如何设置Web服务器的更多信息，您可以随时参考[第3章](ch03.html
    "第3章。不同用途的Linux")，*不同用途的Linux*。因此，我们只需要安装和运行Apache，并且需要配置网络和机器的主机名。
- en: 'First, we will use the default package manager for CentOS 7 YUM to install
    the Apache web server:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用CentOS 7 YUM的默认软件包管理器安装Apache Web服务器：
- en: '[PRE88]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Then after that, we configure the hostname:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 然后之后，我们配置主机名：
- en: '[PRE89]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'And we make sure it looks like this:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 并确保它看起来像这样：
- en: '[PRE90]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'After that, we go to each hosts file and we configure the domain to the default
    localhost while adding the list of all the servers with their IP addresses:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们进入每个主机文件并将域配置为默认的本地主机，同时添加所有服务器及其IP地址的列表：
- en: '[PRE91]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Note
  id: totrans-350
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This part is only needed if there is no reliable DNS server inside the infrastructure
    that can resolve all the infrastructure servers.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 如果基础设施内没有可靠的DNS服务器可以解析所有基础设施服务器，则只需要此部分。
- en: 'We change the default localhost address `127.0.0.1` domain name:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更改默认的本地主机地址`127.0.0.1`域名：
- en: '[PRE92]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Then, we add the following lines:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们添加以下行：
- en: '[PRE93]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Before finishing, we need to open the HTTPS and HTTPS ports at the webserver
    firewall to make the service accessible for the visitors:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成之前，我们需要在Web服务器防火墙上打开HTTPS和HTTPS端口，以使服务对访问者可用：
- en: '[PRE94]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'By this step, we can say that we have all our web servers ready. We can now
    move to our HAProxy server installation. First, we need to open the needed ports
    for the web service and log reception used by HAProxy:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一步，我们可以说我们所有的Web服务器都准备好了。现在我们可以转到我们的HAProxy服务器安装。首先，我们需要为Web服务和HAProxy使用的日志接收打开所需的端口：
- en: '[PRE95]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Then, we can start the installation:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以开始安装：
- en: '[PRE96]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'And now, we go to the configuration part. Before doing the main HAProxy configuration,
    we need to setup the HAProxy logging feature configuration for debugging:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们进入配置部分。在进行主要的HAProxy配置之前，我们需要为调试设置HAProxy日志记录功能配置：
- en: '[PRE97]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Under the **#Global settings** options, we need to make sure that the following
    line is not commented:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在**#全局设置**选项下，我们需要确保以下行没有被注释掉：
- en: '[PRE98]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Some minor modification needs to happen at the `Rsyslog` configuration file
    too:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Rsyslog`配置文件中也需要进行一些小的修改：
- en: '[PRE99]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'That is where we need to uncomment the following two lines:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们需要取消注释以下两行的地方：
- en: '[PRE100]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'Before finishing, we need to have a file that represents `HAProxy` at the `Rsyslog
    log` folder:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成之前，我们需要有一个代表`HAProxy`在`Rsyslog日志`文件夹中的文件：
- en: '[PRE101]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'And while creating it using Nano, we need to put the following line inside
    it:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Nano创建时，我们需要在其中放入以下行：
- en: '[PRE102]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'Save the file, then apply the changes and restart `Rsyslog service`:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，然后应用更改并重新启动`Rsyslog服务`：
- en: '[PRE103]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Now, we can go to the HAProxy Global settings configuration:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以进入HAProxy全局设置配置：
- en: '[PRE104]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'First, at the default section, we need to setup the timeout for a more personalized
    solution. Since our server is just doing the load balancing, we can always use
    port 80\. So, we need to take over that port, by removing its association to the
    `Httpd` service:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在默认部分，我们需要设置超时以获得更个性化的解决方案。由于我们的服务器只是进行负载平衡，我们可以始终使用端口80。因此，我们需要接管该端口，通过删除其与`Httpd`服务的关联来实现：
- en: '[PRE105]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'Then, we change the listening port to anything other than 80\. In our example,
    `8080`:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将监听端口更改为除80之外的任何其他端口。在我们的示例中，`8080`：
- en: '[PRE106]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Then, we go to the **Main Frontend** section to change the port on which the
    web interface is serving. So we need to change the whole section to look like
    the following:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们转到**主前端**部分，更改Web界面提供服务的端口。因此，我们需要更改整个部分，使其看起来像以下内容：
- en: '[PRE107]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'And we need to comment out the **Backend** section to replace it with the following:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 并且我们需要注释掉**Backend**部分，以替换为以下内容：
- en: '[PRE108]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'We need to make sure that the end of the file matches our infrastructure IP
    addresses and hostnames. Then, we can start the HAProxy server and add it to the
    startup system services:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确保文件的结尾与我们的基础设施IP地址和主机名匹配。然后，我们可以启动HAProxy服务器并将其添加到启动系统服务中：
- en: '[PRE109]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'To verify that there is no error at the configuration file, we can always check
    the service status using the following command:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证配置文件没有错误，我们可以随时使用以下命令检查服务状态：
- en: '[PRE110]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Then, we get each web server and put a test page just to access it and collect
    the test results. Then, we open the web interface of HAProxy to visualize the
    status of the load balancing `http://10.0.0.10/stats` or `http://172.25.25.166/stats`.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们获取每个Web服务器并放置一个测试页面，以便访问并收集测试结果。然后，我们打开HAProxy的Web界面来可视化负载平衡的状态`http://10.0.0.10/stats`或`http://172.25.25.166/stats`。
- en: '![Establishing services'' high availability using HAProxy](img/B04674_06_21.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![使用HAProxy建立服务的高可用性](img/B04674_06_21.jpg)'
- en: If we get to see the following interface, that means that our high availability
    server is running well. If we need to enable https to access the web interface
    of HAProxy using SSL, we can always install OpenSSL and configure our server to
    use it.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看到以下界面，那意味着我们的高可用服务器正在正常运行。如果我们需要启用https以使用SSL访问HAProxy的Web界面，我们可以随时安装OpenSSL并配置我们的服务器以使用它。
- en: References
  id: totrans-393
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Now, let''s look at the references used throughout the chapter:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下本章中使用的参考资料：
- en: '**VMware** **Documentation Center**: [http://pubs.vmware.com/vsphere-51/index.jsp](http://pubs.vmware.com/vsphere-51/index.jsp)'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VMware** **Documentation Center**: [http://pubs.vmware.com/vsphere-51/index.jsp](http://pubs.vmware.com/vsphere-51/index.jsp)'
- en: '**VMware** **Virtualization**: [http://www.vmware.com/virtualization.html](http://www.vmware.com/virtualization.html)'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VMware** **Virtualization**: [http://www.vmware.com/virtualization.html](http://www.vmware.com/virtualization.html)'
- en: '**Full** **virtualization wiki**: [https://en.wikipedia.org/wiki/Full_virtualization](https://en.wikipedia.org/wiki/Full_virtualization)'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Full** **virtualization wiki**: [https://en.wikipedia.org/wiki/Full_virtualization](https://en.wikipedia.org/wiki/Full_virtualization)'
- en: '**Paravirtualization** **wiki**: [https://en.wikipedia.org/wiki/Paravirtualization](https://en.wikipedia.org/wiki/Paravirtualization)'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Paravirtualization** **wiki**: [https://en.wikipedia.org/wiki/Paravirtualization](https://en.wikipedia.org/wiki/Paravirtualization)'
- en: '**Xen project** **wiki**: [http://wiki.xen.org/wiki/Xen_Project_Software_Overview](http://wiki.xen.org/wiki/Xen_Project_Software_Overview)'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xen project** **wiki**: [http://wiki.xen.org/wiki/Xen_Project_Software_Overview](http://wiki.xen.org/wiki/Xen_Project_Software_Overview)'
- en: '**KVM home** **page**: [http://www.linux-kvm.org/page/Main_Page](http://www.linux-kvm.org/page/Main_Page)'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KVM home** **page**: [http://www.linux-kvm.org/page/Main_Page](http://www.linux-kvm.org/page/Main_Page)'
- en: '**OpenVZ home** **page**: [https://openvz.org/Main_Page](https://openvz.org/Main_Page)'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenVZ home** **page**: [https://openvz.org/Main_Page](https://openvz.org/Main_Page)'
- en: '**VirtualBox** **home page**: [https://www.virtualbox.org](https://www.virtualbox.org)'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirtualBox** **home page**: [https://www.virtualbox.org](https://www.virtualbox.org)'
- en: '**Docker** **documentation**: [http://www.modssl.org/docs/](http://www.modssl.org/docs/)'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker** **documentation**: [http://www.modssl.org/docs/](http://www.modssl.org/docs/)'
- en: '**HAProxy web** **page**: [http://www.haproxy.org/](http://www.haproxy.org/)'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HAProxy web** **page**: [http://www.haproxy.org/](http://www.haproxy.org/)'
- en: Summary
  id: totrans-405
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter started with a brief description of the basics of virtualization.
    Then, we defined full virtualization and paravirtualization. Next, to better explain
    all of that practically using a variety of open source virtualization tools, we
    started with Xen as a paravirtualization and full virtualization solution. We
    moved on to KVM as a full virtualization solution, container virtualization, OpenVZ,
    and the VirtualBox tool. This allows an easy setup through its beautiful graphical
    interface.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以对虚拟化基础知识的简要描述开始。然后，我们定义了完全虚拟化和半虚拟化。接下来，为了更好地通过各种开源虚拟化工具实际地解释所有这些，我们从Xen作为半虚拟化和完全虚拟化解决方案开始。我们转向KVM作为完全虚拟化解决方案，容器虚拟化，OpenVZ和VirtualBox工具。这通过其美丽的图形界面实现了简单的设置。
- en: We concluded the chapter with Docker and its ways of using containers from the
    Web. By the end of this chapter, we can say that we have seen various virtualization
    technologies and how to create virtual machines using them.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中介绍了Docker及其从Web使用容器的方式。在本章结束时，我们可以说我们已经看到了各种虚拟化技术以及如何使用它们创建虚拟机。
- en: In the next chapter, we will get a chance to explore the cloud computing technology
    and apply some examples using the open source solution, OpenStack.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将有机会探索云计算技术，并使用开源解决方案OpenStack应用一些示例。
