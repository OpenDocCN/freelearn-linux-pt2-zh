- en: Chapter 6. Processes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。进程
- en: 'In this chapter we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Understanding processes
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解进程
- en: Examining processes with ps
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ps检查进程
- en: Examining processes using top
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用top检查进程
- en: Changing priorities with nice
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用nice更改优先级
- en: Observing a process using the /proc filesystem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用/proc文件系统观察进程
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: All the programs running in Linux are processes. In this chapter, you’ll learn
    how to view their status by using ps and top, how to set the priority at which
    they run, and how to view the internals of a process by using the /proc filesystem.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中运行的所有程序都是进程。在本章中，您将学习如何使用ps和top查看它们的状态，如何设置它们运行的优先级，以及如何使用/proc文件系统查看进程的内部。
- en: Understanding processes
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解进程
- en: Every process has a unique identifier called a **Process Identifier** (**PID**).
    Also, every process has a **Parent Process Identifier** (**PPID**). There is an
    exception, `init` (or `systemd`). The `init` process starts all other processes
    and has a PID of 1\. This process is special because it cannot be killed (and
    any attempt to do so is often fatal).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每个进程都有一个称为**进程标识符**（**PID**）的唯一标识符。此外，每个进程都有一个**父进程标识符**（**PPID**）。有一个例外，即`init`（或`systemd`）。`init`进程启动所有其他进程，并具有PID为1。该进程很特殊，因为它无法被终止（任何尝试这样做通常都是致命的）。
- en: Similar to files, a process also has access permissions. These are referred
    to as the Real user and Group IDs. This provides a level of protection by not
    allowing unprivileged users to access critical operating system tasks. Memory,
    open files, and other resources are owned by the process and are kept separate
    from other processes (in most cases).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与文件类似，进程也具有访问权限。这些被称为真实用户和组ID。这通过不允许非特权用户访问关键操作系统任务来提供一定程度的保护。内存、打开的文件和其他资源由进程拥有，并与其他进程（在大多数情况下）分开。
- en: From the user’s perspective, a process is typically started from the command
    line or desktop. Take editing a file with `vi`, for example. The user starts the
    session and works interactively with the editor. He can save the file or edit
    another one. As long as the session is active, there is a PID associated with
    it. When the user terminates `vi`, the PID and all the associated resources are
    terminated as well. That PID will be recycled and used by the OS again later.
    A program run is this way is called a foreground process.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户的角度来看，进程通常是从命令行或桌面启动的。例如，使用`vi`编辑文件。用户启动会话并与编辑器进行交互。他可以保存文件或编辑其他文件。只要会话处于活动状态，就会有一个PID与之关联。当用户终止`vi`时，PID和所有相关资源也将终止。该PID将被回收并稍后由操作系统再次使用。以这种方式运行的程序称为前台进程。
- en: A process can also be run in the background. For example, in [Chapter 4](ch04.html
    "Chapter 4. Networking and the Internet"), *Networking and the Internet*, we ran
    the browser with the `firefox &` command. The ampersand puts the process into
    the background, freeing up that terminal for more input/output. Note that messages
    coming from the application (Firefox in this example) will still be output to
    that terminal. This can really be helpful when debugging. Also note that a process
    run in the background tends to run at a lower priority than a foreground task
    (more on priorities later). In the old days, background processes were also commonly
    referred to as jobs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 进程也可以在后台运行。例如，在[第4章](ch04.html "第4章。网络和互联网")中，*网络和互联网*，我们使用`firefox &`命令运行浏览器。&符号将进程放入后台，释放该终端以进行更多的输入/输出。请注意，应用程序（例如此示例中的Firefox）发出的消息仍将输出到该终端。在调试时，这真的很有帮助。还要注意，后台运行的进程往往以比前台任务更低的优先级运行（稍后会详细介绍优先级）。在旧时代，后台进程通常也被称为作业。
- en: 'There are some special file handles associated with each process:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每个进程都有一些特殊的文件句柄：
- en: '**Standard input** (`stdin`): A process takes its normal input from here (Handle
    0)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准输入**（`stdin`）：进程从此处获取其正常输入（句柄0）'
- en: '**Standard output** (`stdout`): A process writes its normal output to here
    (Handle 1)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准输出**（`stdout`）：进程将其正常输出写入此处（句柄1）'
- en: '**Standard error** (`stderr`): A process writes its error output to here (Handle
    2)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准错误**（`stderr`）：进程将其错误输出写入此处（句柄2）'
- en: 'The following is a screenshot showing the standard handles:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是显示标准句柄的屏幕截图：
- en: '![Understanding processes](img/3008OS_06_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![理解进程](img/3008OS_06_01.jpg)'
- en: Other files opened by a process start at handle 3\. There are some processes
    that have been given special names. For example, many of the processes on a Linux
    system are run in the background and, in most cases, are never meant to be run
    from the command line. These are called services or daemons. The **Hypertext Transfer
    Protocol Daemon** (**HTTPD)** web process is a good example of a service.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由进程打开的其他文件从句柄3开始。有一些进程被赋予特殊名称。例如，Linux系统上的许多进程在后台运行，并且在大多数情况下，从不打算从命令行运行。这些被称为服务或守护进程。**超文本传输协议守护进程**（**HTTPD**）Web进程是服务的一个很好的例子。
- en: Typically, a service waits for an event or events to occur, performs an action
    or some actions, and then goes back to waiting again. If a service logs any activity,
    it will generally do so to the `/var/log/<service-name>` directory.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，服务会等待事件发生，执行一个或多个操作，然后再次等待。如果服务记录任何活动，通常会记录到`/var/log/<service-name>`目录。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the terminal a background job was started from is terminated, the background
    job will end as well. Some Linux distributions will attempt to warn the user of
    this condition.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启动后台作业的终端被终止，后台作业也将结束。一些Linux发行版将尝试警告用户此条件。
- en: How to do it…
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'The following is a brief list of commands one can use to look at processes:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以用来查看进程的命令的简要列表：
- en: 'To see a snapshot of the processes currently running on the system:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要查看当前在系统上运行的进程的快照：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To see the processes in real-time run:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要实时查看进程，请运行：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To see all the types of process directories:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要查看所有类型的进程目录：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There’s more...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: A process can spin off other processes. It can also spin off threads. A thread
    inherits all the handles and resources of the parent. It is generally used in
    programming to perform a small task concurrently, while the main task is running,
    and return quickly.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个进程可以衍生出其他进程。它也可以衍生出线程。线程继承父进程的所有句柄和资源。通常在编程中用于同时执行一个小任务，而主任务正在运行，并且快速返回。
- en: 'Are there limits on the resources? Yes. The `ulimit` command is used to view
    and set the hard and soft limits on a process. It is not normally needed by the
    user; however, if you’re curious, run `ulimit -a` on your system. You should see
    an output similar to the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 资源有限制吗？是的。`ulimit`命令用于查看和设置进程的硬限制和软限制。通常用户不需要它；但是，如果您好奇，可以在您的系统上运行`ulimit -a`。您应该看到类似以下截图的输出：
- en: '![There’s more...](img/3008OS_06_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![更多内容...](img/3008OS_06_02.jpg)'
- en: For more information on `ulimit`, consult the man page.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`ulimit`的更多信息，请参阅man页面。
- en: Examining processes with ps
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ps检查进程
- en: The `ps` program allows the user to see a snapshot of the processes running
    on the system. By using the appropriate parameters, the output can be changed
    to include more or less information. For this section we will run as root, and
    use the BSD style `ps`. The options may be grouped, and no dash is used.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps`程序允许用户查看系统上运行的进程的快照。通过使用适当的参数，输出可以更改以包含更多或更少的信息。在本节中，我们将以root身份运行，并使用BSD风格的`ps`。选项可以分组，不使用破折号。'
- en: How to do it...
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Carry out the following steps to run `ps`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来运行`ps`：
- en: 'Running just `ps` with no parameters will give something like the following
    output:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只运行`ps`而不带任何参数会得到以下类似的输出：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Since this is not very informative, let’s show every process that has a TTY:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这并不是非常具有信息性，让我们显示每个具有TTY的进程：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, include the processes that don’t have a TTY:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，包括那些没有TTY的进程：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Display the output in a more user-oriented format: `ps aux`. Note the change
    in the header.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以更加用户友好的格式显示输出：`ps aux`。注意标题的变化。
- en: 'If the lines are cut off at the end on your system, add the wide option using
    the following command:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在您的系统上行被截断了，可以使用以下命令添加宽选项：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There sure is a lot of output. Here are some ideas on how to deal with it:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出确实很多。以下是一些处理它的想法：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can redirect the output to a file as well: `ps auxw > ps-output.txt` and
    then view it with `more` or `vi`.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以将输出重定向到文件：`ps auxw > ps-output.txt`，然后使用`more`或`vi`查看它。
- en: 'You can also use `grep` to find a particular process ID. In another terminal,
    run the following command:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以使用`grep`来查找特定的进程ID。在另一个终端中，运行以下命令：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now back in your original terminal, run the following command:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在回到您的原始终端，运行以下命令：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You should see a line containing the text `vi file1.txt`. This is the PID you
    are looking for and one of the most common uses of `ps`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到一行包含文本`vi file1.txt`。这就是您要找的PID，也是`ps`的最常见用途之一。
- en: 'You can also show a tree view of the processes:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以显示进程的树状视图：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `ps` command gets its information from the `/proc` file system. Every running
    process has an associated entry here. We will discuss `/proc` in more detail later
    in this chapter.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps`命令从`/proc`文件系统获取信息。每个运行的进程都有一个相关的条目。我们将在本章后面更详细地讨论`/proc`。'
- en: There’s more...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The BSD style header will look something like the following:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: BSD风格的标题将类似于以下内容：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The definitions of each of the terms are given as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个术语的定义如下：
- en: '`USER`: It is the owner of the process'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`USER`：它是进程的所有者'
- en: '`PID`: It is the process identifier'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PID`：它是进程标识符'
- en: '`%CPU`: It gives the CPU time divided by the time the process has been running
    for'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%CPU`：它给出了CPU时间除以进程运行时间的比例'
- en: '`%MEM`: It gives the ratio of the process memory to the physical memory'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%MEM`：它给出了进程内存与物理内存的比例'
- en: '`VSZ`: It contains the virtual memory size of the process'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VSZ`：它包含了进程的虚拟内存大小'
- en: '`RSS`: It contains real memory resident set size'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RSS`：它包含了实际内存驻留集大小'
- en: '`TTY`: It represents the terminal associated with this process'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TTY`：它表示与该进程关联的终端'
- en: '`STAT`: It represents the process state'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`STAT`：它表示进程的状态'
- en: '`START`: It gives the time the process started'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`START`：它给出了进程启动的时间'
- en: '`TIME`: It gives the total CPU time'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIME`：它给出了总CPU时间'
- en: '`COMMAND`: It is the name of the command'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COMMAND`：它是命令的名称'
- en: The `ps` command has quite a few other options to it. You can view threads,
    get security (`SELinux`) info, tighten what is displayed by the username, and
    change the output format. You can even modify some environment variables to change
    how `ps` works. See the man page for more information.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps`命令还有很多其他选项。您可以查看线程，获取安全（`SELinux`）信息，通过用户名紧缩显示内容，并更改输出格式。您甚至可以修改一些环境变量以改变`ps`的工作方式。请参阅man页面以获取更多信息。'
- en: 'The following screenshot gives an idea of what `ps - auxw` looks like on my
    Fedora 17 system:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了在我的Fedora 17系统上`ps - auxw`的样子：
- en: '![There’s more...](img/3008OS_06_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![更多内容...](img/3008OS_06_03.jpg)'
- en: Examining processes using top
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用top检查进程
- en: The `top` program is similar to `ps` except that it shows the state of the system
    in real time. You can control how it operates using command line switches and/or
    its interactive interface. It can also use a configuration file. You can do quite
    a bit with `top`. The following are some examples of what is possible.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`程序类似于`ps`，只是它实时显示系统的状态。您可以使用命令行开关和/或其交互式界面来控制其操作。它还可以使用配置文件。您可以通过`top`做很多事情。以下是一些可能的示例。'
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: No special setup is needed. These commands will be run as root.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要特殊设置。这些命令将以root身份运行。
- en: 'To get help for `top`, you can run the following command line:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取`top`的帮助，可以运行以下命令行：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: These are equivalent and show the library version and usage.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是等效的，并显示库版本和用法。
- en: 'The general syntax for `top` is as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`的一般语法如下：'
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following is a screenshot of `top` running on Fedora 17:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在Fedora 17上运行`top`的截图：
- en: '![Getting ready](img/3008OS_06_04.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/3008OS_06_04.jpg)'
- en: How to do it...
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Following are some examples using the command line switches:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用命令行开关的一些示例：
- en: 'To update the screen every 2 seconds:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每2秒更新一次屏幕：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To update the screen every half second:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每半秒更新一次屏幕：
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To update 10 times and then quit:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更新10次然后退出：
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To do both:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要同时执行两者：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: To update the screen immediately, press Spacebar or *Enter*.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要立即更新屏幕，请按空格键或*Enter*。
- en: 'To monitor a specific PID, use the `-p` option. This will show the `init` (or
    `systemd`) process:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要监视特定的PID，请使用`-p`选项。这将显示`init`（或`systemd`）进程：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Let’s monitor a few processes. First, run `ps auxw` and remember the PIDs for
    four processes.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们监视一些进程。首先运行`ps auxw`，并记住四个进程的PID。
- en: 'Then run `top`, substituting the PIDs obtained previously:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后运行`top`，用之前获得的PID替换：
- en: '[PRE19]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To omit showing idle processes, run the following command:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要省略显示空闲进程，请运行以下命令：
- en: '[PRE20]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To also show threads, run `top -H`. To monitor only the processes for a certain
    user, the syntax is `top -u <username>`. Try it with root:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示线程，请运行`top -H`。要仅监视特定用户的进程，语法是`top -u <username>`。尝试使用root：
- en: '[PRE21]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can run `top` in the batch mode. For example, to save the output to a file:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以以批处理模式运行`top`。例如，要将输出保存到文件中：
- en: '[PRE22]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following are some examples using the interactive commands. Start `top`
    and follow along:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用交互命令的一些示例。启动`top`并跟随操作：
- en: To show just the processes owned by a particular user (root in this example),
    press `U` and then enter `root`.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要仅显示特定用户（此示例中为root）拥有的进程，请按`U`，然后输入`root`。
- en: To change the delay time, press `D` and then enter a time by pressing *D* followed
    by *1*.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改延迟时间，请按`D`，然后按*1*输入时间。
- en: To show all the CPUs on a multi-core machine, press *1* (press *1* again to
    toggle back).
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示多核机器上的所有CPU，请按*1*（再次按*1*切换回来）。
- en: To toggle the showing of the command line versus the program name, press *C*.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要切换显示命令行与程序名称，请按*C*。
- en: To change the nice setting on a process, press *R* and then enter the priority
    desired.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改进程的nice设置，请按*R*，然后输入所需的优先级。
- en: To activate Secure Mode, press *S* (see Secure Mode explained afterwards).
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要激活安全模式，请按*S*（之后查看安全模式的解释）。
- en: To send a signal to a process, press *K* and then enter the signal to send.
    Be sure you have the correct PID and signal before performing this action.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要向进程发送信号，请按*K*，然后输入要发送的信号。在执行此操作之前，请确保您有正确的PID和信号。
- en: To write the configuration file, press `W`. This will create the file `.toprc`
    in the user’s home directory and will use the settings in it on the next startup
    of `top`.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要写入配置文件，请按`W`。这将在用户的主目录中创建文件`.toprc`，并在下次启动`top`时使用其中的设置。
- en: To display the Help screen, press *H*.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示帮助屏幕，请按*H*。
- en: To quit top, press *Q*.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要退出top，请按*Q*。
- en: How it works...
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The following is a description of the first five lines shown in the previous
    screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前一张截图中显示的前五行的描述：
- en: '`top`: It contains the time of day, machine uptime, number of users, and load
    average'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top`：它包含了当天的时间、机器的运行时间、用户数量和平均负载'
- en: '`Tasks`: It gives the number of total tasks, number currently running, sleeping,
    stopped, and zombie'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Tasks`：它给出了总任务数、当前运行、睡眠、停止和僵尸的数量'
- en: '`Cpu(s)`: The different types of CPU states are as follows:'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Cpu(s)`：不同类型的CPU状态如下：'
- en: '**us**: It represents the user time'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**us**：它代表用户时间'
- en: '**sy**: It represents the system time'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sy**：它代表系统时间'
- en: '**ni**: It represents the nice time'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ni**：它代表了nice时间'
- en: '**id**: It represents the idle time'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**id**：它代表空闲时间'
- en: '**wa**: It represents the I/O wait time'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**wa**：它代表了I/O等待时间'
- en: '**hi**: It gives the time spent servicing hardware interrupts'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**hi**：它给出了用于服务硬件中断的时间'
- en: '**si**: It gives the time spent servicing software interrupts'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**si**：它给出了用于服务软件中断的时间'
- en: '**st**: It represents the stolen CPU time'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**st**：它代表被窃取的CPU时间'
- en: '`Mem`: It gives the total memory in machine; used, free, and buffers in KBs'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Mem`：它给出了机器上的总内存；已使用的、空闲的和缓冲区的大小（以KB为单位）'
- en: '`Swap`: It gives the total swap space; used, free, and cached in KBs'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Swap`：它给出了总交换空间；已使用的、空闲的和缓存的大小（以KB为单位）'
- en: 'The following are the definitions for the standard header. Note that these
    can change based on command line options or interactive commands:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是标准标题的定义。请注意，这些可能会根据命令行选项或交互命令而更改：
- en: '`PID`: It defines the process identifier'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PID`：它定义了进程标识符'
- en: '`USER`: It holds the username of the owner of this task'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`USER`：它保存了此任务的所有者的用户名'
- en: '`PR`: It holds the priority of this task'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PR`：它保存了这个任务的优先级'
- en: '`NI`: It consists of the nice value (more on priorities in the next section)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NI`：它包括nice值（下一节将更多介绍优先级）'
- en: '`VIRT`: It exhibits the total amount of virtual memory used by this task'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VIRT`：它展示了此任务使用的虚拟内存总量'
- en: '`RES`: It gives the physical memory used by this task'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RES`：它给出了此任务使用的物理内存'
- en: '`SHR`: It gives the shared memory used by this task'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SHR`：它给出了此任务使用的共享内存'
- en: '`S`: It stands for the process status, which will be one of the following:'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`S`：它代表进程状态，可能是以下之一：'
- en: '**S**: It stands for sleeping'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S**：它代表睡眠状态'
- en: '**D**: It means uninterruptible sleep'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**D**：它表示不可中断的睡眠状态'
- en: '**R**: It shows the process is running (or ready to run)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**R**：它表示进程正在运行（或准备运行）'
- en: '**T**: It shows that the process has been traced or stopped'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**T**：它表示进程已被跟踪或停止'
- en: '**Z**: It signifies the zombie status'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Z**：它表示僵尸状态'
- en: '`%CPU`: It gives the share of the elapsed CPU time since the last update, expressed
    as a percentage'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%CPU`：它给出了自上次更新以来经过的CPU时间的份额，以百分比表示'
- en: '`%MEM`: It holds the currently used share of available physical memory, expressed
    as a percentage'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%MEM`：它保存了当前使用的可用物理内存的份额，以百分比表示'
- en: '`TIME+`: It gives the total CPU time used by this task since it began running'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIME+`：它给出了此任务自开始运行以来使用的总CPU时间'
- en: '`COMMAND`: It is the command used to start this task'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COMMAND`：这是用来启动此任务的命令'
- en: There’s more...
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'In addition to the user configuration file, there can also be a global file.
    It is named `/etc/toprc` and consists of only two lines given as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 除了用户配置文件外，还可以有一个全局文件。它的名字是`/etc/toprc`，包括以下两行：
- en: '[PRE23]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This file is created manually by the root user. If this file exists, it activates
    the Secure Mode and changes how `top` operates:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件是由root用户手动创建的。如果此文件存在，则会激活安全模式并更改`top`的操作方式：
- en: A different version of the Help screen is shown
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示了帮助屏幕的不同版本
- en: A user cannot kill a task
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户无法终止任务
- en: A user cannot renice a task
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户无法重新设置任务
- en: A user cannot change the delay interval of `top`
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户无法更改`top`的延迟间隔
- en: If `top` doesn’t appear to be working as you expected, check for the existence
    of the configuration files both for the users and root. There are plenty of other
    things you can do with `top`. You can change how the fields are arranged and sorted.
    You can change the color and highlighting. There is a multiple window option too.
    For more information, see the man page for `top`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`top`似乎不按预期工作，请检查用户和root的配置文件是否存在。您可以使用`top`做很多其他事情。您可以更改字段的排列和排序方式。您可以更改颜色和突出显示。还有一个多窗口选项。有关更多信息，请参阅`top`的man页面。
- en: 'The following is a screenshot of`top` on my Fedora 17 system:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在我的Fedora 17系统上的`top`的屏幕截图：
- en: '![There’s more...](img/3008OS_06_05.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3008OS_06_05.jpg)'
- en: Changing priorities with nice
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用nice更改优先级
- en: The `nice` command allows you to adjust the priority a process runs at. Modern-day
    operating systems usually do a great job of task scheduling. However, a particular
    process may require some tweaking on occasions. Here, we will show how to use
    `nice`.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`nice`命令允许您调整进程运行的优先级。现代操作系统通常会很好地进行任务调度。但是，某个特定进程可能偶尔需要进行一些调整。在这里，我们将展示如何使用`nice`。'
- en: The priority is referred to as the niceness level. The range of niceness a process
    can have goes from 19, which is the least favorable, down to a maximum of -20,
    which is the most favorable (if this seems backwards to you, it does to me as
    well).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级称为niceness级别。进程可以具有的niceness范围从19（最不利）到最大值-20（最有利）（如果这对您来说似乎是反向的，对我来说也是）。
- en: Most favorable________________________Least favorable
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最有利________________________最不利
- en: 20 __________________________________19
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 20 __________________________________19
- en: Highest priority________________________Lowest priority
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 最高优先级________________________最低优先级
- en: You may recall the NI column from the previous section on `top`. This is the
    niceness setting and on Fedora, several services run at the most favorable setting
    of -20.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还记得上一节关于`top`的NI列。这是niceness设置，在Fedora上，有几个服务以最有利的-20设置运行。
- en: Note that changing the niceness setting of a process is not a guarantee that
    the OS will honor it. It is simply a suggestion to the scheduler.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，更改进程的niceness设置并不保证操作系统会遵守它。这只是对调度程序的建议。
- en: Also note that the command given to nice must not be a built-in command.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，给nice的命令不能是内置命令。
- en: 'The syntax for `nice` is as follows:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`nice`的语法如下：'
- en: '[PRE24]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How to do it...
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Now, let’s run a few `nice` commands:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行一些`nice`命令：
- en: 'To see the current nice value, run nice by itself:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看当前的niceness值，请单独运行nice：
- en: '[PRE25]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now run nice on itself:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在自身上运行nice：
- en: '[PRE26]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: See the output of 10? That’s the default adjustment if none is given.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看到输出为10吗？如果没有给出默认调整，那就是默认值。
- en: 'Now set it to the maximum value:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将其设置为最大值：
- en: '[PRE27]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'For the minimum value:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于最小值：
- en: '[PRE28]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now let’s try something else. In another terminal, run the following command:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们尝试其他事情。在另一个终端中，运行以下命令：
- en: '[PRE29]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Then find its PID:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后找到它的PID：
- en: '[PRE30]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now run `top` on the previous PID:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在先前的PID上运行`top`：
- en: '[PRE31]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The nice column (NI) should show a niceness of 15.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: niceness列（NI）应显示15的niceness。
- en: 'The following is a screenshot showing `nice` running on Fedora 17:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是显示在Fedora 17上运行`nice`的屏幕截图：
- en: '![How to do it...](img/3008OS_06_06.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3008OS_06_06.jpg)'
- en: There’s more...
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Unlike most other Linux programs, there isn’t anything more to nice. If you
    try to set it above the maximum of 20, it will still use 20 and if you try to
    set it lower than the minimum of -19, it will use -19\. Also, the `top` program
    allows you to adjust the niceness level of a process dynamically.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数其他Linux程序不同，`nice`没有更多内容。如果您尝试将其设置为高于20的最大值，它仍将使用20，如果您尝试将其设置为低于-19的最小值，它将使用-19。此外，`top`程序允许您动态调整进程的niceness级别。
- en: Observing a process using the /proc filesystem
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用/proc文件系统观察进程
- en: The `/proc` filesystem is where Linux stores the data related to the currently
    running processes. In most cases, a casual user would probably never (hopefully
    never) need to know this information. However, it can be really helpful during
    debugging, or if you just want to know about some of the internals of Linux.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`/proc`文件系统是Linux存储与当前运行的进程相关数据的地方。在大多数情况下，普通用户可能永远不需要（希望永远不需要）了解这些信息。但是，在调试期间或者只是想了解一些Linux内部情况时，这些信息可能会非常有帮助。'
- en: How to do it...
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following steps explain how to see the information contained in `/proc`:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤解释了如何查看`/proc`中包含的信息：
- en: 'Let’s try an experiment in `/proc` as root run:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们尝试在`/proc`中作为root运行一个实验：
- en: '[PRE32]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'It shows `uptime: empty`, right? So if we cat it, there should be no output
    ideally, right? Try it:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '它显示`uptime: empty`，对吧？因此，如果我们cat它，理想情况下应该没有输出，对吧？试试看：'
- en: '[PRE33]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Wow, so how did that happen? The files in `/proc` are special because the information
    is read out of them in real time. Let’s try some more and run the following command:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哇，那是怎么发生的？`/proc`中的文件很特殊，因为信息是实时从中读取的。让我们尝试一些更多的内容，并运行以下命令：
- en: '[PRE34]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Now run `cat version` and `cat meminfo`.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行`cat version`和`cat meminfo`。
- en: 'In another session, run the following command:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个会话中，运行以下命令：
- en: '[PRE35]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Let’s find its PID:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们找到它的PID：
- en: '[PRE36]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Change to that directory in `/proc`: `cd /proc/<pid-from-above>`.'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改到`/proc`中的目录：`cd /proc/<pid-from-above>`。
- en: 'Now change the directory to the **File Descriptor** (**FD**) directory:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将目录更改为**文件描述符**（**FD**）目录：
- en: '[PRE37]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Run the `ls -la` command. You should see something like the following output:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ls -la`命令。您应该看到类似以下输出：
- en: '[PRE38]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: You can see this is indeed our session of `vi` editing the `test5.txt` file.
    Note that the file shown is a temporary file created by `vi` and left open during
    execution.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到这确实是我们的`vi`编辑`test5.txt`文件的会话。请注意，显示的文件是由`vi`创建并在执行期间保持打开的临时文件。
- en: There’s more...
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The following screenshot shows a listing of the `/proc` directory on the Fedora
    17 system:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了Fedora 17系统中`/proc`目录的列表：
- en: '![There’s more...](img/3008OS_06_07.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3008OS_06_07.jpg)'
- en: So what does all of that mean? The numbers are, as you may have guessed, process
    IDs. Every process will have a number here, which are actually directories that
    contain practically everything you would ever want to know about that process.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这一切意味着什么呢？这些数字是，正如你可能已经猜到的，进程ID。每个进程都会在这里有一个数字，实际上是包含了关于该进程的几乎所有你想知道的东西的目录。
- en: 'The following are what some of those files are for. I didn’t list each one
    but covered the ones that I think are the most interesting:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是其中一些文件的用途。我没有列出每一个，但涵盖了我认为最有趣的那些：
- en: '`buddyinfo`: It contains data about nodes and memory'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buddyinfo`: 它包含有关节点和内存的数据'
- en: '`cgroups`: It contains data about CPU groups'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cgroups`: 它包含了有关CPU组的数据'
- en: '`cmdline`: It is the command line given to start the process'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cmdline`: 它是启动进程时给出的命令行'
- en: '`consoles`: It gives information about consoles'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`consoles`: 它提供了有关控制台的信息'
- en: '`cpuinfo`: It has a very informative listing of the CPUs in your system'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cpuinfo`: 它包含了你的系统中CPU的非常详细的列表'
- en: '`crypto`: It contains information about the crytographic routines available
    in the system'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crypto`: 它包含了系统中可用的加密例程的信息'
- en: '`devices`: It has a list of the devices'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`devices`: 它包含了设备的列表'
- en: '`diskstats`: It has a list of the disk statistics'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`diskstats`: 它包含了磁盘统计信息的列表'
- en: '`dma`: It has a list of DMA'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dma`: 它包含了DMA的列表'
- en: '`filesystems`: It gives a list of the filesystems available'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filesystems`: 它提供了可用文件系统的列表'
- en: '`interrupts`: It contains a very detailed listing of the interrupts being used
    by the system'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interrupts`: 它包含了系统正在使用的中断的非常详细的列表'
- en: '`iomem`: It gives the I/O memory information'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iomem`: 它提供了I/O内存信息'
- en: '`ioports`: It gives the I/O port information'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ioports`: 它提供了I/O端口的信息'
- en: '`kallsyms`: It consists of a list of the OS symbols'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kallsyms`: 它包含了操作系统符号的列表'
- en: '`kcore`: It represents the memory image of this machine'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kcore`: 它代表了这台机器的内存映像'
- en: '`meminfo`: It contains a very detailed list of how memory is being used by
    the system'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meminfo`: 它包含了系统内存使用情况的非常详细的列表'
- en: '`modules`: It contains a list of the modules used by the system'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modules`: 它包含了系统使用的模块的列表'
- en: '`mounts`: It contains a list of the mounted filesystems (real and virtual)
    in the system'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mounts`: 它包含了系统中已挂载的文件系统（真实和虚拟）的列表'
- en: '`partitions`: It contains a list of the partitions'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`partitions`: 它包含了分区的列表'
- en: '`slabinfo`: It consists of a list of the slab memory objects'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slabinfo`: 它包含了一个slab内存对象的列表'
- en: '`softirqs`: It is another IRQ listing'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`softirqs`: 这是另一个IRQ列表'
- en: '`uptime`: It gives the amount of time the machine has been up (see the `uptime`
    command)'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uptime`: 它提供了机器已经运行的时间（参见`uptime`命令）'
- en: '`version`: It is the kernel version (see the `uname` command)'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`version`: 这是内核版本（参见`uname`命令）'
- en: '`vmstat`: It gives the virtual memory statistics'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vmstat`: 它提供了虚拟内存统计信息'
- en: '`zoneinfo`: It is another rather detailed memory listing'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zoneinfo`: 这是另一个相当详细的内存列表'
- en: With a few exceptions, you can cat most of these files to get at important internal
    data. Note, do not cat (or do anything else with) the `kcore` file. Do not try
    to edit these files. Also, if you cat a file and nothing seems to happen, pressing
    *Ctrl* and *C* should make you back out.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 除了少数例外，你可以使用cat命令查看大多数这些文件中的重要内部数据。注意，不要cat（或对）`kcore`文件做任何操作。不要尝试编辑这些文件。另外，如果你cat一个文件，但似乎什么也没发生，按下*Ctrl*和*C*键应该让你退出。
- en: Programs written in a language such as C can take advantage of the information
    in `/proc` to do some pretty cool things. For example, I have developed code that
    can allow a program to determine if it was run normally to the screen, or redirected
    to a file. The program can then take appropriate action, for example, clear the
    screen if run normally, and not clear it if redirected to a file. This way, control
    codes don’t get embedded in the file. I have another C code that can determine
    the full path and filename of any file currently opened by the program.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 使用C语言编写的程序可以利用`/proc`中的信息做一些非常酷的事情。例如，我开发了一段代码，可以让程序确定它是正常运行到屏幕上，还是被重定向到文件中。程序可以根据情况采取适当的行动，例如，如果正常运行，则清除屏幕，如果被重定向到文件，则不清除。这样，控制代码就不会嵌入到文件中。我还有另一段C代码，可以确定程序当前打开的任何文件的完整路径和文件名。
- en: 'The following is another screenshot of `top`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`top`的另一个截图：
- en: '![There’s more...](img/3008OS_06_08.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3008OS_06_08.jpg)'
- en: This was created by running `top` and then pressing *Z*. You can customize `top`
    quite a bit. See the man page for more information.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过运行`top`然后按下*Z*键创建的。你可以对`top`进行相当多的自定义。查看man页面以获取更多信息。
