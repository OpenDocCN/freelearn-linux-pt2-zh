- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Linux system programming is all about developing system programs for the Linux
    operating system. Linux is the world's most popular open-source operating system
    and runs on everything from big servers to small **Internet of Things** (**IoT**)
    devices. Knowing how to write system programs for Linux will enable you to extend
    the operating system and connect it with other programs and systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Linux系统编程就是为Linux操作系统开发系统程序。Linux是世界上最流行的开源操作系统，可以运行在从大型服务器到小型物联网设备的各种设备上。了解如何为Linux编写系统程序将使您能够扩展操作系统并将其与其他程序和系统连接起来。
- en: 'We''ll start by learning how to make our programs easy to script and easy to
    interact with other programs. When we write system programs for Linux, we should
    always strive to make them small and do one thing only—and do it well. This is
    one of the key concepts in Linux: to create small programs that can exchange data
    with each other in simple ways.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从学习如何使我们的程序易于脚本化和易于与其他程序交互开始。当我们为Linux编写系统程序时，我们应该始终努力使它们小巧并且只做一件事，并且做得很好。这是Linux中的一个关键概念：创建可以以简单方式相互交换数据的小程序。
- en: As we move ahead, we'll take a deep dive into C and look at how the compiler
    works, what the linker does, how to write Makefiles, and much more.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的进展，我们将深入研究C语言，了解编译器的工作原理，链接器的功能，如何编写Makefile等等。
- en: Then, we'll learn all about forking and daemons. We'll also create our own daemon.
    We will then put our daemon under systemd's control. This will enable us to start,
    stop, and restart the daemon using built-in Linux tools.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将学习关于forking和守护进程的所有知识。我们还将创建自己的守护进程，并将其置于systemd的控制之下。这将使我们能够使用内置的Linux工具启动、停止和重新启动守护进程。
- en: We will also learn how to make our processes exchange information using different
    kinds of **Inter-Process Communication** (**IPC**). We'll also take a look at
    how to write threaded programs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将学习如何使用不同类型的进程间通信（IPC）使我们的进程交换信息。我们还将学习如何编写多线程程序。
- en: At the end of this book, we'll cover how to debug our programs using the **GNU
    Debugger** (**GDB**) and Valgrind.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的结尾，我们将介绍如何使用GNU调试器（GDB）和Valgrind调试我们的程序。
- en: By the end of this book, you'll be able to write a wide variety of system programs
    for Linux—everything from filters to daemons.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书结束时，您将能够为Linux编写各种系统程序，从过滤器到守护程序。
- en: Who this book is for
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is intended for anyone who wants to develop system programs for Linux
    and wants to have a deep understanding of the Linux system. Anyone facing any
    issues related to a particular part of Linux system programming and looking for
    some specific recipes or solutions can take advantage of this book.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于任何希望为Linux开发系统程序并深入了解Linux系统的人。任何面临与Linux系统编程特定部分相关的问题并寻找特定的解决方案的人都可以从本书中受益。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[*Chapter 1*](B13043_01_Final_SK_ePub.xhtml#_idTextAnchor020), *Getting the
    Necessary Tools and Writing Our First Linux Programs*, shows you how to install
    the tools we need throughout this book. We also write our first program in this
    chapter.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*]《获取必要的工具并编写我们的第一个Linux程序》向您展示了如何安装本书中需要的工具。本章还介绍了我们的第一个程序。'
- en: '[*Chapter 2*](B13043_02_Final_SK_ePub.xhtml#_idTextAnchor050), *Making Your
    Programs Easy to Script*, covers how—and why—we should make our programs easy
    to script and easy to be used by other programs on the system.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*]《使您的程序易于脚本化》介绍了我们应该如何以及为什么要使我们的程序易于脚本化，并且易于其他系统上的程序使用。'
- en: '[*Chapter 3*](B13043_03_Final_SK_ePub.xhtml#_idTextAnchor097), *Diving Deep
    into C in Linux*, takes us on a journey into the inner workings of C programming
    in Linux. We learn how to use system calls, how the compiler works, how to use
    the Make tool, how to specify different C standards, and so on.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*]《深入了解Linux中的C语言》带领我们深入了解Linux中C编程的内部工作原理。我们将学习如何使用系统调用，编译器的工作原理，使用Make工具，指定不同的C标准等。'
- en: '[*Chapter 4*](B13043_04_Final_SK_ePub.xhtml#_idTextAnchor147), *Handling Errors
    in Your Programs*, teaches us how to handle errors gracefully.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*]《处理程序中的错误》教会我们如何优雅地处理错误。'
- en: '[*Chapter 5*](B13043_05_Final_SK_ePub.xhtml#_idTextAnchor182), *Working with
    File I/O and Filesystem Operations*, covers how to read and write to files, using
    both file descriptors and streams. This chapter also covers how to create and
    delete files and read file permissions using system calls.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*]《使用文件I/O和文件系统操作》介绍了如何使用文件描述符和流读写文件。本章还介绍了如何创建和删除文件以及使用系统调用读取文件权限。'
- en: '[*Chapter 6*](B13043_06_Final_SK_ePub.xhtml#_idTextAnchor245), *Spawning Processes
    and Using Job Control*, covers how forking works, how to create a daemon, what
    parent processes are, and how to send jobs to the background and foreground.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*]《生成进程并使用作业控制》介绍了forking的工作原理，如何创建守护进程，父进程是什么，以及如何将作业发送到后台和前台。'
- en: '[*Chapter 7*](B13043_07_Final_SK_ePub.xhtml#_idTextAnchor299), *Using systemd
    to Handle Your Daemons*, shows us how to put our daemon from the previous chapter
    under the control of systemd. This chapter also teaches us how to write logs to
    systemd''s journal and how to read those logs.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*]《使用systemd处理您的守护程序》向我们展示了如何将上一章中的守护程序置于systemd的控制之下。本章还教会我们如何将日志写入systemd的日志记录中，并且如何读取这些日志。'
- en: '[*Chapter 8*](B13043_08_Final_SK_ePub.xhtml#_idTextAnchor330), *Creating Shared
    Libraries*, teaches us what shared libraries are, why they''re important, and
    how to make our own shared libraries.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*]《创建共享库》教会我们什么是共享库，它们为何重要，以及如何制作我们自己的共享库。'
- en: '[*Chapter 9*](B13043_09_Final_SK_ePub.xhtml#_idTextAnchor365), *Terminal I/O
    and Changing Terminal Behavior*, covers how to modify the terminal in different
    ways—for example, how to disable echoing for a password prompt.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B13043_09_Final_SK_ePub.xhtml#_idTextAnchor365)，*终端I/O和更改终端行为*，介绍了如何以不同方式修改终端，例如如何禁用密码提示的回显。'
- en: '[*Chapter 10*](B13043_10_Final_SK_ePub.xhtml#_idTextAnchor402), *Using Different
    Kinds of IPC*, is all about IPC—that is, how to make processes communicate with
    each other on the system. This chapter covers FIFO, Unix sockets, message queues,
    pipes, and shared memory.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B13043_10_Final_SK_ePub.xhtml#_idTextAnchor402)，*使用不同类型的IPC*，介绍了IPC，即如何使进程在系统上相互通信。本章涵盖了FIFO、Unix套接字、消息队列、管道和共享内存。'
- en: '[*Chapter 11*](B13043_11_Final_SK_ePub.xhtml#_idTextAnchor460), *Using Threads
    in Your Programs*, explains what threads are, how to write threaded programs,
    how to avoid race conditions, and how to optimize threaded programs.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B13043_11_Final_SK_ePub.xhtml#_idTextAnchor460)，*在程序中使用线程*，解释了线程是什么，如何编写多线程程序，如何避免竞争条件，以及如何优化多线程程序。'
- en: '[*Chapter 12*](B13043_12_Final_SK_ePub.xhtml#_idTextAnchor489), *Debugging
    Your Programs*, covers debugging using GDB and Valgrind.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B13043_12_Final_SK_ePub.xhtml#_idTextAnchor489)，*调试您的程序*，介绍了使用GDB和Valgrind进行调试。'
- en: To get the most out of this book
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 充分利用本书
- en: To get the most out of this book, you'll need a basic understanding of Linux,
    some basic commands, be familiar with moving around the filesystem, and installing
    new programs. It would help if you also have a basic understanding of programming,
    preferably the C language.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要充分利用本书，您需要对Linux有基本的了解，熟悉一些基本命令，熟悉在文件系统中移动和安装新程序。最好还具备对编程的基本了解，最好是C语言。
- en: You will need a Linux computer with root access—either via su or sudo—to complete
    all the recipes. You'll also need to install the GCC compiler, the Make tool,
    GDB, Valgrind, and some other smaller tools. The particular Linux distribution
    doesn't matter that much. There are installation instructions in the book for
    these programs for Debian, Ubuntu, CentOS, Fedora, and Red Hat.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一台具有root访问权限的Linux计算机，可以通过su或sudo完成所有的操作。您还需要安装GCC编译器、Make工具、GDB、Valgrind和其他一些较小的工具。具体的Linux发行版并不那么重要。本书中有这些程序的Debian、Ubuntu、CentOS、Fedora和Red
    Hat的安装说明。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用本书的数字版本，我们建议您自己输入代码或通过GitHub存储库访问代码（链接在下一节中提供）。这样做将有助于避免与复制和粘贴代码相关的潜在错误。**'
- en: Download the example code files
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Linux-System-Programming-Techniques](https://github.com/PacktPublishing/Linux-System-Programming-Techniques).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub上下载本书的示例代码文件，链接为[https://github.com/PacktPublishing/Linux-System-Programming-Techniques](https://github.com/PacktPublishing/Linux-System-Programming-Techniques)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了来自我们丰富书籍和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。去看看吧！
- en: Code in Action
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码演示
- en: Code in Action videos for this book can be viewed at https://bit.ly/39ovGd6.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码演示视频可在https://bit.ly/39ovGd6上观看。
- en: Download the color images
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/9781789951288_ColorImages.pdf](_ColorImages.pdf).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图片。您可以在这里下载：[http://www.packtpub.com/sites/default/files/downloads/9781789951288_ColorImages.pdf](_ColorImages.pdf)。
- en: Conventions used
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`Code in text`: Indicates code words in the text, directories, filenames, file
    extensions, pathnames, dummy URLs, user input, and so on. Here is an example:
    "Copy the `libprime.so.1` file to `/usr/local/lib`."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码词、目录、文件名、文件扩展名、路径名、虚拟URL、用户输入等。以下是一个示例：“将`libprime.so.1`文件复制到`/usr/local/lib`。”'
- en: 'A block of code is set as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以如下形式书写：
- en: '[PRE12]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In numbered listings, command-line input is set in bold. The `$>` characters
    indicate the prompt and aren't something you should write.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在编号列表中，命令行输入以粗体显示。`$>`字符表示提示符，不是您应该写的内容。
- en: 'This is an example of a numbered listing:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个带编号的列表示例：
- en: '[PRE14]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: $> ./exist.sh /asdf &> /dev/null; \
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: $> ./exist.sh /asdf &> /dev/null; \
- en: if [ $? -eq 3 ]; then echo "That doesn't exist"; fi
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果[ $? -eq 3 ]; then echo "不存在"; fi
- en: That doesn't exist
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 不存在
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
