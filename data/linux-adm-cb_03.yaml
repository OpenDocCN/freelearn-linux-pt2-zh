- en: Networking and Firewalls
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络和防火墙
- en: 'The following recipes will be covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下配方：
- en: Determining our network configuration
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定我们的网络配置
- en: More examples of using the IP suite
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IP套件的更多示例
- en: Adding and configuring network interfaces
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加和配置网络接口
- en: Modern domain name resolution on Linux
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux上进行现代域名解析
- en: Configuring NTP and the problems we face
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置NTP以及我们面临的问题
- en: Listing firewall rules on the command line
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上列出防火墙规则
- en: Adding firewall rules on the command line
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上添加防火墙规则
- en: Determining the running services and ports in use
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定正在运行的服务和使用的端口
- en: Debugging with `iftop`
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`iftop`进行调试
- en: Round-up-firewalls and networks
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总结-防火墙和网络
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Now that we know the ins and outs of SSH and connecting to our machines, whether
    it be the local VMs or remote servers, we're going to take a look at the most
    obvious part of the security onion (the firewall) and the Linux network stack
    in general.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了SSH和连接到我们的机器的方方面面，无论是本地虚拟机还是远程服务器，我们将着眼于安全洋葱（防火墙）和Linux网络堆栈的最显而易见的部分。
- en: Traditionally, firewall administration was handled by the `iptables` and associated
    commands, and indeed you'll be hard pressed to find system administrators who
    don't instantly install the `iptables` suite of tools on every server they find
    (that doesn't have it installed already).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，防火墙管理是通过`iptables`和相关命令处理的，事实上，您很难找到不立即在每台服务器上安装`iptables`工具套件的系统管理员（如果尚未安装）。
- en: On modern installations, `firewall-cmd` (CentOS) and `ufw` (Ubuntu) can be found
    installed in place of, or in addition to, traditional tools. These are an attempt
    to make the firewall process a more painless experience, though purists will defend
    `iptables` to the death.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代的安装中，`firewall-cmd`（CentOS）和`ufw`（Ubuntu）可以替代或补充传统工具。这些都是为了使防火墙过程更加轻松，尽管纯粹主义者会誓死捍卫`iptables`。
- en: No matter the user space (the name given to programs that operate outside the
    kernel, at the user level) tool used, all of the changes we make are being made
    using the Netfilter kernel framework. Indeed, a replacement for `iptables` and
    Netfilter, called `nft`, has been available in the kernel for some time, though
    it's not widely used at the moment.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 无论使用的用户空间工具（在内核之外，在用户级别运行的程序的名称）是什么，我们所做的所有更改都是使用Netfilter内核框架进行的。事实上，内核中已经有一段时间可用的`nft`是`iptables`和Netfilter的替代品，尽管目前并不广泛使用。
- en: '`iptables` is something of a catchall name, at least informally. Technically,
    `iptables` is used for IPv4, ip6tables is used for IPv6, ebtables is used for
    Ethernet frames, and arptables is used for ARP.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`iptables`在某种程度上是一个笼统的名称，至少在非正式场合是如此。从技术上讲，`iptables`用于IPv4，ip6tables用于IPv6，ebtables用于以太网帧，arptables用于ARP。'
- en: Alongside our journey into the confusing world of firewalls, we're going to
    create a network interface and configure it with both static and dynamic IP allocation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们踏上令人困惑的防火墙世界的旅程时，我们将创建一个网络接口，并使用静态和动态IP分配进行配置。
- en: Technical requirements
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We're again going to use Vagrant and VirtualBox for our work. We'll configure
    three virtual machines.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次使用Vagrant和VirtualBox进行工作。我们将配置三台虚拟机。
- en: 'I''ve put together the following `Vagrantfile` for use in this chapter:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经为本章准备了以下`Vagrantfile`：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It would be advisable to create a folder called `Chapter Three` and copy this
    code into a file called `Vagrantfile`. Running `vagrant up` from inside the folder
    containing your `Vagrantfile` should configure two VMs for testing. Once provisioned,
    make sure that you can connect to the first by running the following command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 建议创建一个名为“第三章”的文件夹，并将此代码复制到名为“Vagrantfile”的文件中。从包含您的“Vagrantfile”的文件夹内运行“vagrant
    up”应该可以配置两个用于测试的虚拟机。一旦配置完成，请确保可以通过运行以下命令连接到第一个虚拟机：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For this section, ensure that your `centos1` VM is running, and connect to it. This
    section assumes you know networking at a basic level, in the sense that you understand
    the differences between a static and dynamic IP address, and you know roughly
    how public and private IP addresses differ.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，请确保您的`centos1`虚拟机正在运行，并连接到它。本节假定您在基本水平上了解网络，即您了解静态和动态IP地址之间的区别，并且大致了解公共和私有IP地址之间的区别。
- en: Determining our network configuration
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定我们的网络配置
- en: If you ever find yourself working with physical equipment in a data center,
    you may wind up plonked in front of a box at some point, with only a username
    and password. You will have to use these credentials to discover the box's IP
    information so that another individual in an ivory tower somewhere can connect
    to it remotely.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现自己在数据中心使用物理设备，可能会在某个时候坐在一个箱子前，只有用户名和密码。您将不得不使用这些凭据来发现箱子的IP信息，以便遥远的象牙塔中的另一个人可以远程连接到它。
- en: The individual in the ivory tower will sometimes be paid better than you for
    lounging around in a chair all day pressing a keyboard. My advice is to not dwell
    on this, or you'll end up bitter and grumpy ahead of your years.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 象牙塔中的人有时会因为整天坐在椅子上按键盘而得到比您更好的报酬。我的建议是不要纠结于此，否则您会变得愤世嫉俗。
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Connect to `centos1` if you haven't already.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未连接到`centos1`，请连接。
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For the purposes of demonstration, ensure that `ifconfig` is installed too:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，确保也安装了`ifconfig`：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: In this short section, we're going to discover what IP address our box has,
    what network it's on, and we're going to learn how it's configured in the way
    it is.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简短的部分中，我们将发现我们的箱子有什么IP地址，它所在的网络是什么，以及我们将学习它的配置方式。
- en: Discerning the IP
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辨别IP
- en: 'On a modern box, this is done with `ip`, which we''ll go into greater depth
    with later:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代的系统上，这是通过`ip`完成的，我们稍后会更深入地讨论：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can shorten `ip` commands to make them quicker to type (as we did in the
    previous chapter,) but in the preceding code I've used the full expression as
    it better expresses what we're doing.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以缩短`ip`命令以使其更快地输入（就像我们在前一章中所做的那样），但在前面的代码中，我使用了完整的表达，因为它更好地表达了我们正在做的事情。
- en: 'This command will give you information about all the interfaces on your system.
    In the case of our VMs, it looks like this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将为您提供有关系统上所有接口的信息。在我们的虚拟机的情况下，它看起来像这样：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We know `lo` is the loopback address, which will always have the `127.0.0.1/8`
    setup, or some other address in that range.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道`lo`是环回地址，它将始终具有`127.0.0.1/8`设置，或者在该范围内的其他地址。
- en: 'If you know the device you want explicitly, you can also specify it. In the
    following code, we''ve done this with `eth1`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您明确知道要使用的设备，也可以指定它。在下面的代码中，我们已经使用了`eth1`：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Within the printed block, we''re looking for the IPv4 address, which is listed
    as being in the `inet` family:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在打印的块中，我们正在寻找IPv4地址，该地址被列为“inet”系列：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We have the IP, `192.168.33.10`, and we know the subnet it's in, `/24 (255.255.255.0)`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有IP`192.168.33.10`，并且我们知道它所在的子网是`/24（255.255.255.0）`。
- en: 'If you''re a bit lazier and want to save on eye movement, you could use something
    like the following in a scrip to get this information:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有点懒惰并且想节省眼睛移动，您可以在脚本中使用类似以下内容来获取这些信息：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The preceding code is one of many, many ways in which you could write a one-liner
    to generate the output you desire. Linux is flexible, and you might choose to
    reach the same output in a completely different way. It doesn't overly matter
    how you do it, but if it's something you plan on sharing, doing it in a succinct
    and readable style is often best.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码是许多许多种编写一行代码以生成所需输出的方式之一。Linux是灵活的，您可能选择以完全不同的方式达到相同的输出。您如何做并不是很重要，但如果您打算分享，以简洁和可读的风格进行通常是最好的。
- en: Discerning the IP (deprecated method)
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辨别IP（已弃用的方法）
- en: On older systems, or those managed by stick-in-the-mud admins, you might also
    use `ifconfig` to find the IP and subnet.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在旧系统或那些由守旧管理员管理的系统中，您可能还会使用`ifconfig`来查找IP和子网。
- en: 'Simply running `ifconfig` will print all relevant information:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 简单运行`ifconfig`将打印所有相关信息：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As with IP, it's trivial to dump the information about a specific interface.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与IP一样，轻松地转储有关特定接口的信息。
- en: 'As we can see in the following code, we''re looking again at the specifics
    of `eth1`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在下面的代码中所看到的，我们再次查看了`eth1`的具体情况：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: I use the word deprecated for this, but that's generally only true for the Linux
    world. In the BSDs and macOS, `ifconfig` is still very much the only show in town,
    and it's still being actively improved and maintained.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我用“deprecated”这个词，但这通常只适用于Linux世界。在BSD和macOS中，`ifconfig`仍然是唯一的选择，并且仍在积极改进和维护。
- en: Discerning the gateway address
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辨别网关地址
- en: Once we have the IP address of the box and the subnet, we might want to know
    which device our machine is using to talk to the outside world.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了设备的IP地址和子网，我们可能想知道我们的设备是使用哪个设备与外部世界进行通信的。
- en: This is the `default` route that traffic takes out of your box.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是流量离开您的设备的“默认”路由。
- en: 'Using the `ip` command, this is easy to discover:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ip`命令，这很容易发现：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note the `default via` section.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意“default via”部分。
- en: Discerning the gateway address (deprecated method)
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辨别网关地址（已弃用的方法）
- en: 'With net-tools installed, we can also use the `route` command to find our default
    route out:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了net-tools后，我们还可以使用`route`命令来找到我们的默认路由。
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: When you use `ip` or `ifconfig`, you're querying the network devices that the
    kernel is aware of, and which it's currently managing the traffic for.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`ip`或`ifconfig`时，您正在查询内核所知道的网络设备，以及它当前正在管理的流量。
- en: If you don't see your network device in the list output by either of the common
    commands, it's likely that your kernel doesn't have a driver for the device in
    question. This is rare these days, but can happen for custom networking gear,
    whereupon the vendor should supply a kernel module for use with it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在任何常见命令的输出列表中都看不到您的网络设备，则可能是您的内核对该设备没有驱动程序。这在今天很少见，但对于定制的网络设备可能会发生，此时供应商应提供用于其的内核模块。
- en: '`ip` itself is more than just one command: it''s a suite, meaning that when
    we used the `ip address` command here, we were only using a subsection of the
    tools available to us.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip`本身不仅仅是一个命令：它是一个套件，这意味着当我们在这里使用`ip address`命令时，我们只是使用了我们可以使用的工具的一个子集。'
- en: When you use `ip route` or the `route` command, you're actually querying the
    distribution's routing table.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`ip route`或`route`命令时，实际上是在查询分发的路由表。
- en: There's more...
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Knowing the basics of how your network is configured is great, but that's usually
    only step one.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 了解网络配置的基础知识是很好的，但通常只是第一步。
- en: Here, I'll cover some rudimentary network troubleshooting.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我将介绍一些基本的网络故障排除。
- en: Checking connectivity
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查连接
- en: Just knowing what device our box is using as its gateway is one thing, but actually
    being able to reach it is another thing entirely.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 知道我们的设备正在使用的网关是一回事，但实际上能够到达它是另一回事。
- en: 'If you''re standing before a box, there''s a good chance you''ve been summoned
    to try and work out what''s not working. Trying to ping the gateway is a good
    first step:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您站在一个设备前面，很可能您已被召唤来尝试弄清楚哪里出了问题。尝试ping网关是一个很好的第一步：
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here, our gateway device responded, but if yours doesn't, or you get `Destination
    Host Unreachable`, then there's a good chance something is going wrong (or you've
    been given duff information by your colleague in the ivory tower—always check
    this first).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们的网关设备做出了响应，但如果您的设备没有响应，或者出现“目标主机不可达”的情况，那么很可能出现了问题（或者您的同事在象牙塔中给出了错误的信息-始终首先检查这一点）。
- en: 'In the following code, we''re checking the status of the interface itself,
    again using the `ip` command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们再次使用`ip`命令来检查接口本身的状态：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You may be interested to know why we have three `UP` values here.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会对我们这里有三个“UP”值感兴趣。
- en: The initial `UP` value inside the chevrons is if the interface is physically
    up. The `LOWER_UP` value, also inside the chevrons, is shown if a cable is physically
    connected and up. The `state UP` value outside the chevrons is if the interface
    is administratively up, which can be changed to `DOWN` through software.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 尖括号内的初始`UP`值表示接口是否物理上启动。尖括号内的`LOWER_UP`值也表示如果电缆物理连接并启动。尖括号外的`state UP`值表示接口是否在管理上启动，可以通过软件更改为`DOWN`。
- en: Checking what route our box will take
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们的设备将采取哪条路线
- en: It's also possible that connectivity might be failing because your box is trying
    to talk out of the wrong interface. We can check this with `ip` again.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 也有可能连接失败是因为您的设备尝试通过错误的接口进行通信。我们可以再次使用`ip`来检查这一点。
- en: First, let's look at which route we're going to take when communicating with
    the wider world.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看当与更广泛的世界通信时，我们将采取哪条路线。
- en: 'In the following code, we''re checking how our box would attempt to talk to
    the device with the IP `1.1.1.1`. It shows us that we would go to this IP via
    the gateway address, `10.0.2.2`, and our `eth0` interface:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们正在检查我们的设备如何尝试与IP`1.1.1.1`进行通信。它向我们显示，我们将通过网关地址`10.0.2.2`和我们的`eth0`接口去到这个IP：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, let''s see what route we''ll take if we''re communicating with our gateway.
    Here, we can see a direct connection (no `via`) also going out of `eth0`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如果我们与网关通信会走哪条路线。在这里，我们可以看到一个直接连接（没有`via`）也从`eth0`出去：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: So far, so good, but what about if we want to talk to the other VM on our private
    network?
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切都很顺利，但是如果我们想与我们私有网络中的其他VM进行通信怎么办？
- en: '[PRE17]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '`eth1` would be used, which makes perfect sense given it''s on the same network.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`eth1`将被使用，这是非常合理的，因为它在同一个网络上。'
- en: Hang on a moment—our own IP is in this subnet too, so what happens if we try
    to communicate with ourselves?
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 等一下——我们自己的IP也在这个子网中，那么如果我们尝试与自己通信会发生什么？
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Ah! Clever! We're still using the loopback address (`dev lo`) to talk to our
    local IP address, because Linux knows that this IP is ours.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 啊！聪明！我们仍然使用回环地址（`dev lo`）与我们的本地IP地址进行通信，因为Linux知道这个IP是我们自己的。
- en: As with the preceding example, Linux occasionally does things that might surprise
    you, especially if you're coming from a Windows or BSD administration world. Take
    the `lo` interface—it's not just `127.0.0.1`, but the entire `/8` range. You can
    ping anywhere from `127.0.0.1` to `127.255.255.254` on a typical Linux system,
    and get a response from your local machine.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面的例子一样，Linux有时会做一些让您感到惊讶的事情，特别是如果您来自Windows或BSD管理世界。以`lo`接口为例——它不仅仅是`127.0.0.1`，而是整个`/8`范围。在典型的Linux系统上，您可以从`127.0.0.1`
    ping到`127.255.255.254`，并从本地机器得到响应。
- en: You can even ping `127.1` and get a legitimate response, but I'll leave it as
    an exercise for the reader to determine why this might be.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以ping`127.1`并获得合法的响应，但我会把它留给读者来确定为什么可能会这样。
- en: See also
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Take a look at the `ip` and `ip-address` manual pages.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`ip`和`ip-address`手册页面。
- en: Personally, I would focus on learning about the `ip` suite, instead of the old
    net-tools, because if you're trying to work on a networking problem, there's a
    good chance you won't be able to install net-tools in a pinch.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我会专注于学习`ip`套件，而不是旧的net-tools，因为如果您尝试解决网络问题，很可能无法在紧要关头安装net-tools。
- en: More examples of using the ip suite
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多使用`ip套件`的示例
- en: We're going to use `ip` from here on out due to its modern nature.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从现在开始使用`ip`，因为它更现代化。
- en: This section assumes that you know networking at a basic level, in the sense
    that you understand the differences between a static and dynamic IP address, and
    know roughly how public and private IP addresses differ.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假定您在基本水平上了解网络，即您了解静态和动态IP地址之间的区别，并且大致了解公共和私有IP地址之间的区别。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this section, we're going to make a few changes to our networking. If at
    any point you find yourself kicked out of your VM, remember *The Hitchhiker's
    Guide to the Galaxy* and don't panic—simply destroy your VMs and start again.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将对我们的网络进行一些更改。如果您在任何时候发现自己被踢出VM，请记住《银河系漫游指南》，不要惊慌——只需销毁您的VM并重新开始。
- en: Begin on the `centos1` command line.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从`centos1`命令行开始。
- en: '[PRE19]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: In this section, we're going to use the `ip suite` to change some basic elements
    of our networking stack, such as adding another IP address, or shutting down an
    interface entirely.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用`ip套件`来更改我们网络堆栈的一些基本元素，例如添加另一个IP地址，或者完全关闭一个接口。
- en: Adding and removing an IP against an interface
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加和删除IP
- en: This can be accomplished with the `ip address` command, but does require root.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过`ip address`命令来实现，但需要root权限。
- en: 'In this example, I chose another IP in the `192.168.33.0/24` subnet, which
    I know isn''t in use:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我选择了`192.168.33.0/24`子网中的另一个IP，我知道这个IP没有被使用：
- en: In the real world, it's good practice to ping an IP first, even if you believe
    it's free to use.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，最好先ping一下IP，即使您认为它是空闲的。
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Checking our `eth1` interface, we can now see the secondary IP:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 检查我们的`eth1`接口，我们现在可以看到第二个IP：
- en: '[PRE21]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Upon a reboot, this change will be lost. We will talk about adding IP information
    permanently in the section titled 'Adding and configuring network interfaces'.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动后，这些更改将丢失。我们将在标题为“添加和配置网络接口”的部分中讨论如何永久添加IP信息。
- en: 'If we want to remove an IP, we again use `ip`, this time replacing the `add`
    instruction with a `del` instruction:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想删除一个IP，我们再次使用`ip`，这次用`del`指令替换`add`指令：
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Shutting down and bringing up an interface administratively
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关闭和启动接口
- en: 'To work with the interface itself, we need to use another element of the `ip` suite,
    this being `ip link`. Note again the use of `sudo`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理接口本身，我们需要使用`ip`套件的另一个元素，即`ip link`。再次注意使用`sudo`：
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Checking our interfaces, we can see that the interface is in the `DOWN` state:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 检查我们的接口，我们可以看到接口处于`DOWN`状态：
- en: '[PRE24]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You will find yourself unable to ping this host from `centos2`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现自己无法从`centos2` ping通这个主机。
- en: 'To bring an interface back up, simply run the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新启动接口，只需运行以下命令：
- en: '[PRE25]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note that if you add another IP to an interface on a temporary basis before
    bringing an interface down and up, your temporary additional IP will not be remembered.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果在关闭和打开接口之前临时向接口添加另一个IP，您的临时附加IP将不会被记住。
- en: Adding a new route to our routing table
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向我们的路由表添加新路由
- en: If we're working in a network with non-obvious destinations, we might need to
    add a specific route to our setup.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在一个目的地不明显的网络中工作，我们可能需要向我们的设置中添加一个特定的路由。
- en: This is generally seen in cluster scenarios and setups where a route may be
    accessible via another channel, but may not be advertised by that same channel.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常出现在集群场景和设置中，其中一个路由可以通过另一个通道访问，但可能不会由同一通道广告。
- en: 'In the following code, we''re going to tell our VM that if it wants to talk
    to any address on the `172.16.0.0/12` network, it must send traffic via `eth1`
    and gateway `192.168.33.11` (which is our `centos2` VM):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的代码中，我们将告诉我们的虚拟机，如果它想要与`172.16.0.0/12`网络上的任何地址通信，必须通过`eth1`和网关`192.168.33.11`（这是我们的`centos2`虚拟机）发送流量：
- en: '[PRE26]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Checking our routing table, we can see if our route is in place:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 检查我们的路由表，我们可以看到我们的路由是否已经设置好：
- en: '[PRE27]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works...
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Again, we're using the `ip suite` to interact with the various network elements
    of our machine. Frequently, these commands can be used for troubleshooting and
    testing of environmental changes, prior to your making those changes permanent.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们使用`ip suite`与我们机器的各种网络元素进行交互。通常，这些命令可用于故障排除和测试环境更改，以便在您永久进行这些更改之前进行测试。
- en: In the adding or removing of IP addresses to interfaces, you can create a situation
    where an interface has multiple IP addresses for use with different applications.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加或删除接口的IP地址时，您可以创建一个接口具有多个IP地址的情况，用于不同的应用程序。
- en: Before the days of SNI, it wasn't uncommon to see multiple IP addresses in use
    on web servers so that each HTTPS site could have its own IP assignment.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在SNI出现之前，看到在Web服务器上使用多个IP地址以便每个HTTPS站点都可以有自己的IP分配是很常见的。
- en: 'In the shutting down or bringing up of network interfaces, we''re first telling
    our system to administratively down an interface, rather than physically unplugging
    an Ethernet cable. If you down an interface, then check your `/var/log/messages` file—you
    should see something like the following:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在关闭或启动网络接口时，我们首先告诉系统在管理上关闭一个接口，而不是物理上拔掉以太网电缆。如果你关闭一个接口，然后检查你的`/var/log/messages`文件，你应该会看到类似以下的内容：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Here, we can see the network manager running through a series of steps, upon
    its realization that the device's state has changed.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到网络管理器通过一系列步骤运行，意识到设备的状态已经改变。
- en: Network manager dispatcher is the service that controls what happens when an
    interfaces goes down or comes up. Take a look in `/etc/NetworkManager/dispatcher.d/`
    if you're interested in learning more.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 网络管理器分发器是控制接口关闭或启动时发生的事情的服务。如果你有兴趣了解更多，请查看`/etc/NetworkManager/dispatcher.d/`。
- en: Lastly, when we added a route to our routing table, we were telling the kernel's
    underlying routing subsystem to send packets for the network `172.16.0.0/12` through
    our `eth1` interface, with a gateway address of `192.168.33.11`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当我们向我们的路由表添加路由时，我们告诉内核的底层路由子系统通过我们的`eth1`接口，使用网关地址`192.168.33.11`发送网络`172.16.0.0/12`的数据包。
- en: I have frequently found myself modifying the routing table of devices, though
    most of that was done for cluster setups in phone PBX environments. It may not
    be something you do day-to-day, but it's worth knowing!
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常发现自己修改设备的路由表，尽管大部分是为电话PBX环境中的集群设置。这可能不是你每天都做的事情，但值得知道！
- en: There's more...
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you want to see our routed traffic that''s hitting `centos2`, log onto your
    second VM and make sure that `tcpdump` is installed:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看到达`centos2`的路由流量，请登录到你的第二个虚拟机，确保安装了`tcpdump`：
- en: '[PRE29]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Next, ensure that your extra route from the before is in place on `centos1`,
    and start a `ping` going to any address in the range:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，确保你之前的额外路由在`centos1`上已经设置好，并开始对范围内的任何地址进行`ping`：
- en: '[PRE30]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Back on `centos2`, start `tcpdump` against our `eth1` interface:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 回到`centos2`，对我们的`eth1`接口启动`tcpdump`：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You should start to see `ICMP echo requests` from `centos1`, without a response:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该开始看到来自`centos1`的`ICMP echo requests`，但没有响应：
- en: '[PRE32]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Back on `centos1`, stop your `ping` (*Ctrl *+ *C*) and note the packets transmitted
    and packets lost:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 回到`centos1`，停止你的`ping`（*Ctrl *+ *C*），注意传输的数据包和丢失的数据包：
- en: '[PRE33]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Because we had nowhere for `centos2` to route our packet to, and `centos2` isn't
    actually set up as a router, the packets simply went unanswered, and `centos1`
    remained friendless—poor `centos1`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`centos2`没有路由我们的数据包的地方，而且`centos2`实际上并没有设置为路由器，数据包只是无人回应，`centos1`仍然是孤独的-可怜的`centos1`。
- en: See also
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: If you're interested in using Linux as a router, this is perfectly possible
    with a sysctl change and potentially a bit of **masquerading** on the part of
    the firewall. While out of scope for this book, it is something you may find yourself
    needing in the future.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣将Linux用作路由器，这是完全可能的，只需通过sysctl更改和可能在防火墙上进行一些**伪装**。虽然超出了本书的范围，但这是你可能在未来需要的东西。
- en: Adding and configuring network interfaces
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加和配置网络接口
- en: In this section, we're going to look at how multiple network interfaces may
    be configured in a system, and we will discuss how this might be utilized in the
    real world (such as for backup traffic).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看如何在系统中配置多个网络接口，并讨论这在现实世界中可能如何被利用（比如用于备份流量）。
- en: Getting ready
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: We're going to use our second network, which is new to this chapter. If you're
    using the `Vagrantfile` from before, you're already set up with this network.
    If you're running your own system, add another NIC to each of your virtual machines
    on the same network.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用我们本章新引入的第二个网络。如果你使用的是之前的`Vagrantfile`，你已经设置好了这个网络。如果你在自己的系统上运行，请在每个虚拟机上添加另一个NIC到同一网络。
- en: Use Vagrant to connect to `centos1`.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vagrant连接到`centos1`。
- en: '[PRE34]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Check that the `eth2` interface is available to you. It should look similar
    to the following:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`eth2`接口是否对您可用。 它应该看起来类似于以下内容：
- en: '[PRE35]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: How to do it...
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: We will look at adding network information permanently using configuration files
    so that our configuration isn't lost following a reboot (as would be the case
    if we used the `ip suite` and temporary allocation).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看如何使用配置文件永久添加网络信息，以便我们的配置在重新启动后不会丢失（如果我们使用`ip suite`和临时分配，情况将是这样）。
- en: Configuring a new interface
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置新接口
- en: 'Start by creating a configuration file for `eth2`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为`eth2`创建一个配置文件：
- en: '[PRE36]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Next, populate it using the following:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下内容填充它：
- en: '[PRE37]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The `tee` command is used here. It enables reading from standard input and outputting
    to a destination of our choosing, in this case, a file.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用了`tee`命令。 它使从标准输入读取并输出到我们选择的目的地，即文件。
- en: 'Now, restart your interface as an individual:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将您的接口作为个体重新启动：
- en: '[PRE38]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Alternatively, restart networking in general:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，重新启动网络：
- en: '[PRE39]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: It's generally a good rule of thumb to be the least disruptive when working
    with components that make up a greater whole. Even in a `dev` environment, it's
    a good habit to get into.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个很好的经验法则是在处理组成更大整体的组件时尽量减少干扰。 即使在`dev`环境中，养成这样的习惯也是一个好习惯。
- en: How it works...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: All we've done here is created an interface script that your system can use
    to correctly configure an interface at boot time.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里所做的一切就是创建一个接口脚本，您的系统可以使用它在启动时正确配置接口。
- en: Let's go through the options we added to our file.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们添加到文件中的选项。
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This setting stands for `boot-time protocol` and we've set it to `none` instead
    of `dhcp` or `bootp`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此设置代表`启动时协议`，我们将其设置为`none`，而不是`dhcp`或`bootp`。
- en: In a DHCP environment, you want an address to be assigned automatically by your
    DHCP server. Here, we're setting a static address, so we state the following.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在DHCP环境中，您希望地址由DHCP服务器自动分配。 在这里，我们正在设置一个静态地址，因此我们陈述如下。
- en: '[PRE41]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This one might seem obvious, but the default behaviour of an interface is to
    not initialize at boot. With this setting, we ensure that the network interface
    is brought up with the system.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这个可能看起来很明显，但接口的默认行为是在启动时不初始化。 通过此设置，我们确保网络接口随系统一起启动。
- en: '[PRE42]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Somewhat self-explanatory, but these options are the IP address and the subnet
    mask of the network we're configuring. Here, I chose another `/24` network, a
    few octets above our `eth1` configuration.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 有点不言自明，但这些选项是我们正在配置的网络的IP地址和子网掩码。 在这里，我选择了另一个`/24`网络，比我们的`eth1`配置高了几个八位。
- en: '[PRE43]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This option is used to specify which hardware interface our configuration will
    apply to. It's worth noting that these interface names can be both generic (`eth0`,
    `eth1`, and so on) and network card name-specific (they might not always be `eth<something>`).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项用于指定我们的配置将应用于哪个硬件接口。 值得注意的是，这些接口名称既可以是通用的（`eth0`，`eth1`等），也可以是网络卡名称特定的（它们可能不总是`eth<something>`）。
- en: '[PRE44]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Defaulting to `yes` in a DHCP environment, this option ensures that our system
    doesn't try to modify `/etc/resolv.conf` when the interface is brought up.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在DHCP环境中默认为`yes`，此选项确保我们的系统在接口启动时不会尝试修改`/etc/resolv.conf`。
- en: There's more...
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The Ethernet interface configuration file (`ifcfg-eth2`) has a few other options
    that can be taken into account when setting up your network. Check whether it's
    possible to make a configuration change for your desired outcome, prior to wrapping
    networking in any scripts.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网接口配置文件（`ifcfg-eth2`）还有一些其他选项，可以在设置网络时考虑。 在将网络包装在任何脚本之前，检查是否可能对所需的结果进行配置更改。
- en: Interface bonds can also be created and configured in interface configuration
    files for use when a machine has two physical connections to the same destination
    to protect against either failure of the interface or cable.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 接口绑定也可以在接口配置文件中创建和配置，用于当一台机器有两个物理连接到同一目的地时，以保护接口或电缆的任一故障。
- en: I have seen exactly one bad `Cat-5e` cable in the entirety of my professional
    life—cables are physical, and don't spontaneously break.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在我整个职业生涯中，我只见过一根坏的`Cat-5e`电缆——电缆是物理的，不会自发断裂。
- en: One thing we didn't do was specify that the interface in question wasn't to
    be managed by a network manager (the network management daemon).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有做的一件事是指定所讨论的接口不是由网络管理器（网络管理守护程序）管理的。
- en: 'You can see which interfaces are and aren''t being managed by the network manager
    using the simple `nmcli device` command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用简单的`nmcli device`命令查看由网络管理器管理和不管理的接口：
- en: '[PRE45]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We can change this, if we''d rather the network manager does not interfere,
    by adding a configuration option to our `ifcfg-eth2` file:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以更改这一点，如果我们宁愿网络管理器不干涉，可以通过向我们的`ifcfg-eth2`文件添加配置选项来实现：
- en: '[PRE46]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Now, go down and up your interface once more:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，再次启动和关闭您的接口：
- en: '[PRE47]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Then, check out `nmcli` once again, this time taking note of the `unmanaged`
    status:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，再次检查`nmcli`，这次注意`unmanaged`状态：
- en: '[PRE48]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If you're curious, take a look at the `nmtui` command for an interactive way
    to configure network interfaces that the network manager is aware of.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您感兴趣，可以查看`nmtui`命令，以交互方式配置网络接口，网络管理器知道这些接口。
- en: See also
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Have a think about where it might be useful for additional networks to be in
    place. A good and common example is for backup networks, where companies will
    set up a dedicated network that's specifically for backup traffic.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一下在哪里可能需要额外的网络。 一个很好且常见的例子是备份网络，公司将设置一个专门用于备份流量的专用网络。
- en: Backups range in size, but can easily be gigabytes and even terabytes sometimes,
    so it makes sense to give them an entirely independent network of their own.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 备份的大小不等，但有时可能会达到几千兆字节甚至几千兆字节，因此最好为它们提供一个完全独立的网络。
- en: You can also manage traffic priority with things such as **Quality of Service**
    (**QoS**) settings on larger and enterprise networks. This can be a valid solution
    if you would rather deal with the software administration overhead of dealing
    with such scenarios. Generally, I'm a fan of simple, and though it definitely
    costs more to have physical equipment, it's less to manage in the long run.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用诸如**服务质量**（**QoS**）设置之类的东西来管理流量优先级，这在更大型和企业网络上可能是一个有效的解决方案。如果您宁愿处理这些情况的软件管理开销，这可能是一个有效的解决方案。一般来说，我更喜欢简单，尽管拥有物理设备的成本肯定更高，但从长远来看，管理起来更少。
- en: Modern domain name resolution on Linux
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux上的现代域名解析
- en: In this section, we're going to look at domain name resolution, and specifically
    the software installed on a typical CentOS box that enables the lookup of addresses
    when presented with a domain.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看域名解析，特别是在典型的CentOS盒子上安装的软件，该软件在提供域时启用地址查找。
- en: We'll look at `/etc/resolv.conf` and domain name resolution methods on current
    generation Linux systems (such as network manager). We're going to test the connection
    to our DNS server, and run DNS queries to see if it's working.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在当前一代Linux系统（如网络管理器）上查看`/etc/resolv.conf`和域名解析方法。我们将测试与我们的DNS服务器的连接，并运行DNS查询以查看它是否工作。
- en: This section assumes a basic understanding of domain names and IP addresses.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假定对域名和IP地址有基本的理解。
- en: Getting ready
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: Connect to `centos1` and check that your domain resolution is already working
    by pinging an address.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到`centos1`，并通过ping地址检查您的域解析是否已经工作。
- en: 'I''m in the UK, so I default to using the BBC for my tests:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我在英国，所以我默认使用BBC进行测试：
- en: '[PRE49]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: If yours isn't working for whatever reason, destroy and recreate your VMs.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因您的DNS服务器不起作用，请销毁并重新创建您的虚拟机。
- en: 'Once you''re sure you can ping a domain, install dig (and the myriad of other
    tools that come along with this package):'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确定可以ping通一个域，安装dig（以及与此软件包一起安装的其他工具）：
- en: '[PRE50]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: How to do it...
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Here, we're going to run through some basic troubleshooting steps, designed
    to help you determine where a problem might be.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将运行一些基本的故障排除步骤，旨在帮助您确定问题可能出在哪里。
- en: Querying a domain
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查询域
- en: 'To query a domain name on Linux, `dig` can be used:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上查询域名，可以使用`dig`：
- en: '[PRE51]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Here, we can see that the server being used for domain resolution (emboldened)
    is `10.0.2.3`, which just so happens to be VirtualBox providing a resolution service.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到用于域解析的服务器（加粗）是`10.0.2.3`，这恰好是VirtualBox提供的解析服务。
- en: We also see the `ANSWER SECTION` which, as the name might suggest, is the answer
    to our query. We can reach `bbc.co.uk` at any of those addresses (currently).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到了`ANSWER SECTION`，正如名称可能暗示的那样，这是我们查询的答案。我们可以在这些地址中的任何一个（目前）到达`bbc.co.uk`。
- en: Checking the domain resolution settings
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查域解析设置
- en: The source of truth when it comes to DNS configuration on a system is generally
    the resolver file, `/etc/resolv.conf`, although increasingly this file isn't used
    directly, and is instead managed by external programs.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统上，关于DNS配置的真相通常是解析器文件`/etc/resolv.conf`，尽管这个文件越来越不直接使用，而是由外部程序管理。
- en: In the case of CentOS, the `resolv.conf` file is managed by our friend network
    manager, and on other systems, it might be `systemd-resolved`.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS的情况下，`resolv.conf`文件由我们的朋友网络管理器管理，在其他系统上，可能是`systemd-resolved`。
- en: 'Have a look at your `resolv.conf` file:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 查看您的`resolv.conf`文件：
- en: '[PRE52]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '`search` in the previous code is the search list for hostname lookup. It''s
    generated by looking at the domain the box is sitting on.'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码中的`search`是主机名查找的搜索列表。它是通过查看盒子所在的域来生成的。
- en: '`nameserver` is the value of our DNS resolver, in this case, the VirtualBox
    default.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`nameserver`是我们的DNS解析器的值，在这种情况下是VirtualBox默认值。'
- en: This tells us that the network manager is the program that's populated our file.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们，网络管理器是填充我们文件的程序。
- en: 'We can then use `nmcli` to list the DNS server it knows about:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以使用`nmcli`列出它知道的DNS服务器：
- en: '[PRE53]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: With the preceding code, we're using `nmcli` with two filters, `ipv4.dns` and `ipv4.ignore-auto-dns`,
    to check our default interface (the `eth0` system, in this case).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 通过上述代码，我们使用了`nmcli`和两个过滤器`ipv4.dns`和`ipv4.ignore-auto-dns`来检查我们的默认接口（在这种情况下是`eth0`系统）。
- en: The value of `ipv4.dns` isn't set, meaning that it's unlikely to be reading
    the value from a configuration directive on the interface.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`ipv4.dns`的值未设置，这意味着它不太可能从接口上的配置指令中读取值。'
- en: The value of `ipv4.ignore-auto-dns` is set, and we can tell from the `no` value
    that we're not ignoring the auto DNS allocation from the DHCP server.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`ipv4.ignore-auto-dns`的值已设置，我们可以从`no`值看出，我们没有忽略来自DHCP服务器的自动DNS分配。'
- en: Changing the domain resolution settings
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改域解析设置
- en: To use a DNS server of our choosing, we should use `nmcli`.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用我们选择的DNS服务器，我们应该使用`nmcli`。
- en: 'In the following code, we''re setting our own DNS server value (`1.1.1.1`)
    and we''re flipping the truth value of `ipv4.ignore-auto-dns` from `no` to `yes`:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们设置了我们自己的DNS服务器值（`1.1.1.1`），并且我们将`ipv4.ignore-auto-dns`的真值从`no`更改为`yes`：
- en: '[PRE54]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note how both of these fields can be modified on one line.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这两个字段都可以在一行上进行修改。
- en: 'Reload the interface configuration using the following:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令重新加载接口配置：
- en: '[PRE55]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Look in `/etc/resolv.conf` for good measure, just to check:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保险起见，再看看`/etc/resolv.conf`：
- en: '[PRE56]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Then, run `dig`:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行`dig`：
- en: '[PRE57]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '`1.1.1.1` is a new and trendy DNS service from Cloudflare and APNIC. This isn''t
    an endorsement, it''s just really easy to remember.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`1.1.1.1`是Cloudflare和APNIC提供的新潮的DNS服务。这并不是一种认可，只是非常容易记住。'
- en: How it works...
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you request the destination of a domain on your system, what you're actually
    doing is sending a request to your configured resolver, which returns the address
    it (or further upstream systems) knows about.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在系统上请求域的目的地时，实际上您正在向配置的解析器发送请求，该解析器返回它（或更上游的系统）知道的地址。
- en: In our case, we can see this request happening by connecting two Terminals to
    `centos1`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，我们可以通过连接两个终端到`centos1`来看到这个请求发生。
- en: 'On our first Terminal, we''re going to install and start `tcpdump` on `eth1`:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的第一个终端上，我们将在`eth1`上安装并启动`tcpdump`：
- en: '[PRE58]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Once set up, hop to a second connection and run your `dig` against the BBC
    (or whichever British broadcaster of choice you''ve gone with):'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好后，切换到第二个连接，并对BBC（或你选择的任何英国广播公司）运行你的`dig`命令：
- en: '[PRE59]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Flip back to your first window, and you should see the results of your request:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 切换回你的第一个窗口，你应该看到你请求的结果：
- en: '[PRE60]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: We asked our name server what address `bbc.co.uk` lived at, and in the response,
    we got a few IP addresses to connect to. Neat, huh?
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们询问了我们的域名服务器`bbc.co.uk`的地址，并在响应中得到了一些IP地址以连接。很整洁，对吧？
- en: There's more...
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This section obviously made changes using network manager, but that's not to
    say this is the only way. It's possible to stop the network manager from hijacking
    and trying to control your DNS.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节显然是使用网络管理器进行了更改，但这并不意味着这是唯一的方法。可以阻止网络管理器劫持并尝试控制你的DNS。
- en: 'It''s possible to set `dns=none` in the `main` section of the `NetworkManager.conf`
    file, as detailed in its man page:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在`NetworkManager.conf`文件的`main`部分中设置`dns=none`，详细信息请参阅其手册页：
- en: '"`none: NetworkManager` will not modify `resolv.conf`. This implies'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '"`none: NetworkManager`将不会修改`resolv.conf`。这意味着'
- en: rc-manager unmanaged"
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: rc-manager未受管理”
- en: 'Seen in the configuration file at `/etc/NetworkManager/NetworkManager.conf`,
    it would look like this:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/NetworkManager/NetworkManager.conf`配置文件中，它看起来像这样：
- en: '[PRE61]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Restarting `NetworkManager` at this point would stop it from trying to modify
    `/etc/resolv.conf` in the future.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 此时重新启动`NetworkManager`将阻止它在将来尝试修改`/etc/resolv.conf`。
- en: This can be useful if you want something else to manage your system's DNS, even
    if it's just a script you've written to plonk your DNS servers in `/etc/resolv.conf`.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望有其他东西来管理你系统的DNS，即使只是你编写的一个脚本来将你的DNS服务器放在`/etc/resolv.conf`中，这可能会很有用。
- en: It's possible to not use `NetworkManager` at all, disabling it as a daemon and
    doing everything in the old script fashion. In fact, it's really easy, but in
    my opinion it's worth getting to grips with how things are done by default these
    days.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 完全不使用`NetworkManager`也是可能的，将其禁用为守护进程，并以旧的脚本方式完成所有操作。事实上，这真的很容易，但在我看来，值得掌握如今默认的操作方式。
- en: DNS is usually done in pairs, and it's a good idea to have a backup DNS server
    in case the first one goes to pot. Strange things can start to happen when your
    DNS fails.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: DNS通常是成对进行的，最好有一个备用DNS服务器，以防第一个出问题。当你的DNS失败时，奇怪的事情可能开始发生。
- en: See also
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: We actually used `nmcli` here to make changes to configuration files. We can
    physically see those changes by looking at the `eth0` configuration file before
    and after our DNS changing command.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上在这里使用了`nmcli`来对配置文件进行更改。我们可以通过查看在我们的DNS更改命令之前和之后的`eth0`配置文件来实际看到这些更改。
- en: 'Before looks like this:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 之前看起来是这样的：
- en: '[PRE62]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'While after is a bit more verbose:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 而在之后会更加冗长：
- en: '[PRE63]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: One thing we didn't cover is IPv6, but the principles are the same as IPv4.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有涉及的一件事是IPv6，但原则与IPv4相同。
- en: Take a look at how IPv6 servers are configured, and how they end up in `/etc/resolv.conf`.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下IPv6服务器是如何配置的，以及它们最终出现在`/etc/resolv.conf`中。
- en: Configuring NTP and the problems we face
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置NTP和我们面临的问题
- en: In this section, we're going to look at the **network time protocol** (**NTP**),
    and the default setup for a typical installation.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下**网络时间协议**（**NTP**），以及典型安装的默认设置。
- en: This section assumes a basic understanding of time.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假设你对时间有基本的了解。
- en: Depending on how much Pratchett you read, your understanding of time may or
    may not be linear.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你读了多少普拉切特，你对时间的理解可能是线性的，也可能不是。
- en: We're going to look at a few things. First, we're going to look at what NTP
    is, what software we use to set it up, and how to test whether your system is
    using it.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一些东西。首先，我们将看一下NTP是什么，我们使用什么软件来设置它，以及如何测试你的系统是否在使用它。
- en: Starting at the top, NTP runs on port `123`, and it's the protocol that's used
    for keeping time in computer systems in sync. This is generally important because
    we want things like log-timestamps to be consistent between machines, transactions
    between boxes to have the correct time on both sides, and things like authentication
    to actually work.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 从头开始，NTP在端口`123`上运行，它是用于使计算机系统中的时间保持同步的协议。这通常很重要，因为我们希望诸如日志时间戳在机器之间保持一致，盒子之间的交易在双方都有正确的时间，以及诸如身份验证之类的东西实际上能够工作。
- en: Really though, misconfigured or incorrect time on a system can present a host
    of problems, not all of them obvious. If you ever find yourself using the phrase
    "this makes no sense," check the date information on your box, as a good portion
    of the time it'll be wrong. Funnily, a lot of systems depend on time being correct
    to work.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，系统上配置错误或不正确的时间可能会带来一系列问题，其中并非所有问题都是显而易见的。如果你发现自己在使用短语“这毫无意义”时，请检查一下你的盒子上的日期信息，因为大部分时间它都是错误的。有趣的是，很多系统都依赖时间的准确性来工作。
- en: Getting ready
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: We're going to use `centos1` and `centos2`. `centos1` is going to act as our
    client, and `centos2` is going to act as our server. For this section, ensure
    that you have a connection open to both machines.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`centos1`和`centos2`。`centos1`将充当我们的客户端，`centos2`将充当我们的服务器。在本节中，请确保你已经连接到这两台机器。
- en: 'Again, if not already available, install `tcpdump` on both boxes:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果尚未安装，请在两个盒子上安装`tcpdump`：
- en: '[PRE64]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: How to do it...
  id: totrans-298
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: The `NTP client/server` on CentOS and other systems is `chrony` these days,
    replacing the more traditional NTP implementations.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，CentOS和其他系统上的`NTP客户端/服务器`是`chrony`，取代了更传统的NTP实现。
- en: There's two main components, `chronyc` (the command-line tool) and `chronyd`
    (the daemon, which itself can act as a client or server).
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个主要组件，`chronyc`（命令行工具）和`chronyd`（守护进程，它本身可以充当客户端或服务器）。
- en: Checking if NTP is running
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查NTP是否正在运行
- en: 'First, a basic check is to confirm the date is what you expect it to be, with
    the `date` command:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，一个基本的检查是确认日期是否符合你的预期，使用`date`命令：
- en: '[PRE65]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Note that the preceding date information is set to **universal time coordinated**
    (**UTC**). This is increasingly being used as distributed computing takes hold.
    Servers don't have to be locked to one geographical region, and if you've got
    a thousand boxes over multiple geographical locations, you might choose to unify
    their time and manage specific differences in other software instead (such as
    a web app being responsible for writing the timestamp for the location its user
    is located at, for example).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前面的日期信息设置为**协调世界时**（**UTC**）。随着分布式计算的普及，这种方式越来越受到重视。服务器不必锁定在一个地理区域，如果您在多个地理位置有一千台服务器，您可能选择统一它们的时间，并在其他软件中管理特定的差异（例如，Web应用程序负责为其用户所在地区编写时间戳）。
- en: 'To check whether `chronyd` itself is running, use `systemctl`:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查`chronyd`本身是否正在运行，请使用`systemctl`：
- en: '[PRE66]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Checking if NTP traffic is flowing
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查NTP流量是否正在流动
- en: To confirm that NTP traffic is actually flowing, the catchall method is to check
    the port with `tcpdump`. NTP uses `port 123`, which is very easy to remember (there
    may be a quiz on this).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 要确认NTP流量是否实际正在流动，通用方法是使用`tcpdump`检查端口。NTP使用`端口123`，这非常容易记住（可能会有一个关于此的测验）。
- en: 'We know that default traffic should use `eth0` for communication, so that''s
    what we''ll specify:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道默认流量应该使用`eth0`进行通信，因此我们将指定它：
- en: '[PRE67]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Soon, you should see your client trying to talk to upstream servers, asking
    for time information:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，您应该会看到您的客户端尝试与上游服务器通信，请求时间信息：
- en: '[PRE68]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: If you've not got `tcpdump` installed, you can also use `chronyc`.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有安装`tcpdump`，也可以使用`chronyc`。
- en: 'Let''s see what servers we''re talking to by using the `chronyc sources` command:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`chronyc sources`命令，让我们看看我们正在与哪些服务器通信：
- en: '[PRE69]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'We can get more granular information on the status of our client too by looking
    at the details it knows about from its last sync. In the following example, we
    can see that our time is very far off what''s expected:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过查看上一次同步时了解到的详细信息，来获取有关客户端状态的更详细信息。在下面的示例中，我们可以看到我们的时间与预期时间相差很远：
- en: '[PRE70]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Assuming that your time isn''t ridiculously far out, the output may look as
    follows. Here, the amount of time difference between upstream and us is negligible:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的时间差异不是非常大，输出可能如下所示。在这里，我们与上游之间的时间差异微不足道：
- en: '[PRE71]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Enabling an NTP client
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用NTP客户端
- en: Assuming that your system isn't using `chronyd`, and its date is sliding constantly,
    you can enable it manually.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的系统没有使用`chronyd`，并且其日期不断滑动，您可以手动启用它。
- en: 'The configuration file for `chronyd` is located at `/etc/chrony.conf`. The
    following is the default configuration file, with the commented out sections removed:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '`chronyd`的配置文件位于`/etc/chrony.conf`。以下是默认配置文件，已删除注释部分：'
- en: '[PRE72]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Once in place, if it''s not already in place and running, `systemd` is used
    to maintain the service:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装好，如果尚未安装并运行，`systemd`将用于维护服务：
- en: '[PRE73]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Do check that a rogue admin hasn't taken it upon themselves to install `openntpd`,
    or a different daemon, to try and manage NTP. You can check this by using the
    preceding `tcpdump` commands, or seeing if anything is running on `port 123`.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 确保没有流氓管理员自行安装了`openntpd`或其他不同的守护程序来尝试管理NTP。您可以通过使用前面的`tcpdump`命令来检查这一点，或者查看`端口123`上是否有任何运行的内容。
- en: Enabling an NTP server
  id: totrans-327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用NTP服务器
- en: Maybe the network you're managing is very restricted, and it takes ages to get
    network changes done. In this case, you might have a pool of servers that are
    designated as NTP providers for the rest of your estate.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 也许您管理的网络非常受限，需要很长时间才能完成网络更改。在这种情况下，您可能有一组服务器，被指定为其余资产的NTP提供者。
- en: In this case, you will need to configure `chronyd` to allow connections from
    other clients. We'll use `centos2` for the server.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您需要配置`chronyd`以允许来自其他客户端的连接。我们将使用`centos2`作为服务器。
- en: 'On `centos2`, add a line to the bottom of our `chrony.conf` file to allow access
    from our `eth1` network (`192.168.33.0`):'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos2`上，在我们的`chrony.conf`文件底部添加一行，以允许从我们的`eth1`网络（`192.168.33.0`）访问：
- en: '[PRE74]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Restart `chronyd` with the new changes:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 使用新更改重新启动`chronyd`：
- en: '[PRE75]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Now, on the system that's to be the client, `centos1`, perform the following
    steps.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在要成为客户端的系统`centos1`上，执行以下步骤。
- en: 'First, modify our `chrony.conf` file by commenting out the existing server
    lines:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过注释掉现有的服务器行修改我们的`chrony.conf`文件：
- en: '[PRE76]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Next, add the required configuration directives for pointing to `centos2`:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加指向`centos2`的所需配置指令：
- en: '[PRE77]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Restart `chronyd` on `centos1`:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos1`上重新启动`chronyd`：
- en: '[PRE78]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: You now have a server configured, and a client connected to it.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经配置了一个服务器，并且连接到它的客户端。
- en: How it works...
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: NTP works in a client-server fashion, in which the client device (`centos1`,
    in our case) asks the server device (`centos2`) for an accurate time reading,
    which it then applies to the local machine.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: NTP以客户端-服务器方式工作，其中客户端设备（在我们的情况下是`centos1`）向服务器设备（`centos2`）请求准确的时间读数，然后将其应用于本地机器。
- en: 'When we wanted to make our own server, it was relatively trivial. On the server
    side, we only needed the line stipulating which clients could sync with `centos2`:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想要创建自己的服务器时，这相对较为琐碎。在服务器端，我们只需要一行指定哪些客户端可以与`centos2`同步：
- en: '[PRE79]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'On the client side, we needed to first remove the servers it was talking to
    (using `sed` to comment out the default pool lines), and then we added our new
    source-of-time as our configured server by using the following configuration lines:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端端，我们需要首先删除它正在通信的服务器（使用`sed`注释掉默认池行），然后通过以下配置行将我们的新时间源添加为我们配置的服务器：
- en: '[PRE80]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The server option is the address (or DNS name, if configured) of our source-of-truth.
    The `iburst` option simply makes the first few requests faster so that the sync
    can happen quicker after starting.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器选项是我们真相源的地址（或者如果配置了DNS名称）。`iburst`选项只是使前几个请求更快，以便在启动后更快地进行同步。
- en: 'If we start `tcpdump` running on `centos2`, after it''s been configured as
    a server, and then restart `chronyd` on `centos1`, we should see traffic flowing:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在`centos2`上配置为服务器后启动`tcpdump`，然后在`centos1`上重新启动`chronyd`，我们应该会看到流量正在传输：
- en: '[PRE81]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: We can see our client machine (`.10`) requesting time from `centos2`, and then
    `centos2` responding on the next line.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的客户机（`.10`）正在从`centos2`请求时间，然后`centos2`在下一行回复。
- en: This also works to highlight the `iburst` option in action. Note the two-second
    differences between packet communication.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以用来突出`iburst`选项的作用。注意数据包通信之间的两秒差异。
- en: 'If we now take another look at `chronyc tracking` on the client, we should
    see normal details:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在在客户端上再次查看`chronyc tracking`，我们应该看到正常的细节：
- en: '[PRE82]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: The preceding code may take a second to populate. If you're particularly quick
    off the mark, try again in a few seconds.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码可能需要一秒钟才能填充。如果你特别快，几秒钟后再试一次。
- en: 'You can again use the `chronyc sources` command to check that the client is
    talking to the right server:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`chronyc sources`命令检查客户端是否与正确的服务器通信：
- en: '[PRE83]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: There's more...
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Sometimes, your time is out of sync, and it isn't automatically fixing itself.
    This can happen if your time is simply too far away from what it should be, as
    most systems refuse to do sudden and abrupt jerks.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您的时间不同步，并且无法自动修复。如果您的时间与应该的时间相差太远，大多数系统会拒绝突然和突然的动作。
- en: 'This can be resolved by using another `chrony` command:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过使用另一个`chrony`命令来解决：
- en: '[PRE84]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Be wary, though—this command can have unexpected side effects. Sometimes, programs
    detect sudden jerks, and will forcibly kill themselves to avoid issues.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 但要小心，这个命令可能会产生意想不到的副作用。有时，程序会检测到突然的动作，并会强制自行关闭以避免问题。
- en: 'If you want to tell how busy your server is, you can also use `serverstats`
    on the command line:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想知道服务器有多忙，也可以在命令行上使用`serverstats`：
- en: '[PRE85]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: See also
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Chrony is actually a much more in-depth program than we've discussed here, and
    we barely mentioned its command-line utility (`chronyc`), which can be used to
    make all sorts of changes on the fly.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: Chrony实际上比我们在这里讨论的要深入得多，我们几乎没有提到它的命令行实用程序（`chronyc`），它可以用于在运行时进行各种更改。
- en: 'Check out the documentation pages for Chrony:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 查看Chrony的文档页面：
- en: '[https://chrony.tuxfamily.org/documentation.html](https://chrony.tuxfamily.org/documentation.html)'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://chrony.tuxfamily.org/documentation.html](https://chrony.tuxfamily.org/documentation.html)'
- en: It's also a good idea to have a think about how you're going to set up an NTP
    pool, if you find yourself in an environment requiring one. Generally, it's a
    rule of thumb that you configure multiple potential servers, instead of just one
    (that might skew or break). Three is better than one or two (two is quite bad,
    as you don't have an agreement on what the correct time is.)
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现自己处于需要NTP池的环境中，最好考虑如何设置NTP池。通常，您应该配置多个潜在服务器，而不是只有一个（可能会偏离或中断）。三个比一个或两个更好（两个是相当糟糕的，因为您无法达成关于正确时间的协议）。
- en: Listing firewall rules on the command line
  id: totrans-370
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在命令行上列出防火墙规则
- en: Here, we're going to use both the newer method, `firewall-cmd` & `ufw`, for
    listing firewall rules, along with the older (but still popular) method, `iptables`.
    We're going to go into the basics of other tables within firewalls, and the storage
    location for rules.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将同时使用较新的方法`firewall-cmd`和`ufw`来列出防火墙规则，以及较旧（但仍然流行）的方法`iptables`。我们将介绍防火墙中其他表的基础知识，以及规则的存储位置。
- en: Getting ready
  id: totrans-372
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Connect to your `centos1` VM (and `ubuntu1`, if desired).
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到您的`centos1` VM（如果需要，还有`ubuntu1`）。
- en: 'Enable and start `firewalld` for later examples:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 启用并启动`firewalld`以供后续示例使用：
- en: '[PRE86]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: How to do it...
  id: totrans-376
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: While most of this book can be generalized to multiple distributions, firewalls
    are one area that can differ.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书的大部分内容都可以概括到多个发行版，但防火墙是一个可能有所不同的领域。
- en: In the CentOS family of distributions, `firewall-cmd` is the common way to interact
    with firewalls.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS系列发行版中，`firewall-cmd`是与防火墙交互的常用方式。
- en: In the Ubuntu family, `ufw` is used instead.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu系列中，使用的是`ufw`。
- en: Generally, `iptables` should work across distributions, for the foreseeable
    future at least.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，`iptables`至少在可预见的未来应该适用于各种发行版。
- en: iptables
  id: totrans-381
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables
- en: 'Typically, you want to check the running configuration of a firewall on a box.
    To do this, you might use `iptables -L`:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您希望检查盒子上防火墙的运行配置。为此，您可以使用`iptables -L`：
- en: '[PRE87]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'By default, the `-L` option lists all chains within the default table (`filter`
    being the default). There are five tables out of the box:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`-L`选项列出默认表（`filter`为默认表）中的所有链。默认情况下有五个表：
- en: '`raw`'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`raw`'
- en: '`filter`'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filter`'
- en: '`mangle`'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`搞乱`'
- en: '`security`'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`security`'
- en: '`nat`'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nat`'
- en: 'We may want to list rules in the `nat` table, in which case this can be specified
    with the `-t` option:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能希望列出`nat`表中的规则，可以使用`-t`选项指定：
- en: '[PRE88]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'A different method, and one that I tend to use first, is to print the rules
    on the command line, instead of listing them (this is a subtle difference). This
    is done with the `-S` option:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法，我倾向于首先使用的是在命令行上打印规则，而不是列出它们（这是一个细微的区别）。这可以通过`-S`选项完成：
- en: '[PRE89]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: The reason why this method is nicer is that it shows you the syntax used to
    generate the rule in question. In a tense scenario, this type of knowledge can
    save time and stress.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法更好的原因在于它显示了用于生成相关规则的语法。在紧张的情况下，这种知识可以节省时间和压力。
- en: firewall-cmd
  id: totrans-395
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: firewall-cmd
- en: Firewalld (the daemon controlled by `firewall-cmd`) introduces the concept of
    zones to the Linux firewall.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: Firewalld（由`firewall-cmd`控制的守护程序）引入了Linux防火墙的区域概念。
- en: Zones are assigned to specific interfaces, with specific rules configured per
    zone.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 区域分配给特定接口，并为每个区域配置特定规则。
- en: 'You can list the currently configured zones using `firewall-cmd`, too:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用`firewall-cmd`列出当前配置的区域：
- en: '[PRE90]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: To check which zone we're actively using, and on which interface, we use `--get-active-zones`.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查我们当前使用的区域以及使用的接口，我们使用`--get-active-zones`。
- en: 'In the following code, we can see that `eth0` and `eth1` are using the `public`
    zone:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们可以看到`eth0`和`eth1`正在使用`public`区域：
- en: '[PRE91]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '`eth2` is also under the `public` zone, but the interface is unconfigured,
    thus, inactive.'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '`eth2`也在`public`区域下，但是接口未配置，因此处于非活动状态。'
- en: 'Because `eth0` is active under `public`, let''s list the details of the `public`
    zone:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`eth0`在`public`下是活动的，让我们列出`public`区域的详细信息：
- en: '[PRE92]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Here, we can see that the services this zone is aware of are `ssh` and `dhcpv6-client`.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到这个区域知道的服务是`ssh`和`dhcpv6-client`。
- en: 'We can specifically list the services of a zone using `--list-services`:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`--list-services`来具体列出区域的服务：
- en: '[PRE93]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: If we want information about exactly what that service allows, we can use `--info-service`.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要关于该服务允许的确切信息，我们可以使用`--info-service`。
- en: 'In the following code, we''re looking at `ssh`, discovering that it allows
    port `22/tcp` through:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们正在查看`ssh`，发现它允许端口`22/tcp`通过：
- en: '[PRE94]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: ufw
  id: totrans-412
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ufw
- en: 'In your Ubuntu VM, `ufw` probably won''t be enabled by default. We will enable
    it, but first we''re going to add a rule to make sure that we can get back in
    once the firewall is up:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Ubuntu VM中，`ufw`可能不会默认启用。我们将启用它，但首先我们将添加一个规则，以确保一旦防火墙启动我们可以重新进入：
- en: '[PRE95]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'You can enable it with the following command:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令启用它：
- en: '[PRE96]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'We can now see the status of our firewall by using the `status verbose` option:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用`status verbose`选项来查看我们防火墙的状态：
- en: '[PRE97]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: The firewall is active, and there's a `22/tcp` allow rule to allow us in.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙是激活的，并且有一个`22/tcp`允许规则让我们进入。
- en: How it works...
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: All of the preceding examples interact with the kernel's Netfilter framework—they
    just do the same thing using different tools.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前面的示例都与内核的Netfilter框架交互——它们只是使用不同的工具做同样的事情。
- en: When you list rules on the command line, you're querying what the kernel knows
    to be the security rules for a box.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在命令行上列出规则时，你正在查询内核知道的关于盒子安全规则。
- en: The reason you can list rules with both the `iptables` and `firewall-cmd` commands
    (in the case of CentOS) is because they're only acting as userland frontends.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`iptables`和`firewall-cmd`命令列出规则（在CentOS的情况下），因为它们只是作为用户空间前端。
- en: UFW is the same, just in the Ubuntu world.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: UFW是一样的，只是在Ubuntu世界中。
- en: This is the reason you find a lot of setup scripts in the wild that will remove
    extra firewall tools, such as `firewalld`, and that simply use the `iptables`
    suite to manage the firewall.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么你会发现很多设置脚本会删除额外的防火墙工具，比如`firewalld`，而只是使用`iptables`套件来管理防火墙。
- en: There's more...
  id: totrans-426
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you do find yourself on a box that has `firewall-cmd` installed, but not
    the `iptables` userland tool, you might find which package it''s in with `yum`:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现自己在一个安装了`firewall-cmd`但没有`iptables`用户空间工具的盒子上，你可以用`yum`找到它所在的包：
- en: '[PRE98]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: In this case, `iptables` is the package you want to install, if you're something
    of a purist.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，如果你是一位纯粹主义者，你应该安装`iptables`包。
- en: See also
  id: totrans-430
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Though not yet installed by default, you may want to look into the `nft` and
    `nftables` systems.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然还没有默认安装，但你可能想了解`nft`和`nftables`系统。
- en: '`nftables` is a replacement for the existing kernel framework, and `nft` is
    the accompanying command-line tool.'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '`nftables`是现有内核框架的替代品，`nft`是相应的命令行工具。'
- en: Adding and removing firewall rules on the command line
  id: totrans-433
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在命令行上添加和删除防火墙规则
- en: In this section, we're going to look at adding and removing example rules from
    our firewall setup.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看如何添加和删除防火墙设置的示例规则。
- en: Getting ready
  id: totrans-435
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Ensure that `firewalld` is installed and started on `centos1`:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 确保`firewalld`已安装并在`centos1`上启动：
- en: '[PRE99]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'Once done, start a Python web server in the background:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，在后台启动一个Python Web服务器：
- en: '[PRE100]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: This should start a web server on port `8000`.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该在端口`8000`上启动一个Web服务器。
- en: 'Connect to `centos2` and try to `curl` your `centos1` box on port `8000`. It
    should fail:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到`centos2`，尝试在端口`8000`上的`curl`你的`centos1`盒子。它应该失败：
- en: '[PRE101]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: If you want to work through the Ubuntu examples at the same time, log in to
    your Ubuntu box.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想同时在Ubuntu示例中工作，请登录到你的Ubuntu框。
- en: How to do it...
  id: totrans-444
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: We're going to use `firewall-cmd`, `iptables`, and `ufw` to adjust our firewall.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`firewall-cmd`，`iptables`和`ufw`来调整我们的防火墙。
- en: firewall-cmd
  id: totrans-446
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: firewall-cmd
- en: Our web server is listening on all interfaces (the default) and we're going
    to allow connections to it through `eth1`.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Web服务器正在监听所有接口（默认），我们将允许通过`eth1`连接到它。
- en: 'We know that `eth1` is in the default (`public`) zone, thanks to the previous
    section:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 由于前一节的原因，我们知道`eth1`在默认（`public`）区域中：
- en: '[PRE102]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: This means that we have to add another port allowance to our zone, enabling
    connections to `8000/tcp`.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们必须向我们的区域添加另一个端口允许，使连接到`8000/tcp`。
- en: 'In the following code, we''re adding to our firewall configuration, but we''re
    not modifying the running config—we''re adding the `permanent` option so that
    the rule is loaded on a firewall reload:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们正在添加到我们的防火墙配置，但我们没有修改运行配置——我们添加了`permanent`选项，以便在重新加载防火墙时加载规则：
- en: '[PRE103]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Now, we need to run the command again, without the `permanent` option. So that
    our running configuration is modified:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要再次运行命令，不带`permanent`选项。这样我们的运行配置就被修改了：
- en: '[PRE104]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Running the `--list-all` option will now show your added port:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行`--list-all`选项将显示你添加的端口：
- en: '[PRE105]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'You should be able to `curl centos1` on `8000/tcp` from `centos2`:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能够从`centos2`上的`8000/tcp`上的`curl centos1`：
- en: '[PRE106]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: If you find it easier, you can also modify the running config primarily, and
    then when you're happy with it, apply the rules using the `--runtime-to-permanent`
    option. The choice is yours.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得更容易，你也可以主要修改运行配置，然后当你满意时，使用`--runtime-to-permanent`选项应用规则。选择权在你手中。
- en: 'To reverse this addition, you would swap the `add-port` for a `remove-port`,
    like so:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 要撤消这个添加，你可以将`add-port`换成`remove-port`，就像这样：
- en: '[PRE107]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: iptables
  id: totrans-462
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables
- en: To perform the same action in `iptables`, we must first ensure that `firewalld`
    doesn't interfere.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`iptables`中执行相同的操作，我们必须首先确保`firewalld`不会干扰。
- en: 'Start by disabling and stopping `firewalld`:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 首先禁用和停止`firewalld`：
- en: '[PRE108]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'You should now have an empty `iptables` configuration, as can be seen with
    `iptables -S`:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该有一个空的`iptables`配置，可以用`iptables -S`来查看：
- en: '[PRE109]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Because we've got an empty rule list, we're going to start by adding some basic
    rules.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们有一个空的规则列表，我们将从添加一些基本规则开始。
- en: 'First, we''re going to block `centos2` and anything else on our `eth1` network
    from SSHing to `centos1`:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将阻止`centos2`和我们`eth1`网络上的任何其他东西从SSH到`centos1`：
- en: '[PRE110]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Next, we''re going to allow only incoming `SSH` connections from `10.0.2.0/24`
    sources:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将只允许来自`10.0.2.0/24`源的传入`SSH`连接：
- en: '[PRE111]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'Finally, we''re going to change the default incoming policy from `ACCEPT` to
    `DROP`:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将默认的传入策略从`ACCEPT`更改为`DROP`：
- en: '[PRE112]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Because we''ve changed the default policy, we also need to ensure that `RELATED`
    and `ESTABLISHED` connections are permitted (those connections we''ve initiated
    from our box). This makes our firewall "stateful" or aware of the state:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们已更改了默认策略，我们还需要确保允许`RELATED`和`ESTABLISHED`连接（我们从我们的框发起的连接）。这使我们的防火墙成为“有状态”的或者知道状态的：
- en: '[PRE113]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Running `iptables -S` will display your rules:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`iptables -S`将显示您的规则：
- en: '[PRE114]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Our configuration here is somewhat redundant, because while it serves to show
    the flexibility of `iptables` rules, the default traffic rule is a `-P INPUT DROP`,
    meaning that if traffic isn't accepted by any of our other rules, it won't be
    let in. Our `eth1` `DROP` line is therefore pointless.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这里的配置有些多余，因为虽然它展示了`iptables`规则的灵活性，但默认的流量规则是`-P INPUT DROP`，这意味着如果流量不被我们的其他规则接受，它将不会被允许进入。因此，我们的`eth1
    DROP`行是没有意义的。
- en: ufw
  id: totrans-480
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ufw
- en: 'Prior to working with `ufw` in the previous section, we had to add this allow
    rule to let SSH traffic in, once the firewall was enabled:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节使用`ufw`之前，我们必须添加此允许规则以允许SSH流量进入，一旦启用防火墙：
- en: '[PRE115]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'The default `ufw` profile has incoming connections denied, as we can see in
    the following code:'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的`ufw`配置文件拒绝了传入连接，如下面的代码所示：
- en: '[PRE116]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Because of this, if we wanted to access a web server hosted on our Ubuntu box,
    we'd need a new rule.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们想要访问托管在我们的Ubuntu框上的Web服务器，我们需要一个新的规则。
- en: 'Previously, we used the service name (`ssh`), so this time we''re going to
    specifically allow a port (`80`, the default HTTP port) from our VirtualBox network:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，我们使用了服务名称（`ssh`），所以这次我们要特别允许从我们的VirtualBox网络中的端口（`80`，默认的HTTP端口）：
- en: '[PRE117]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'We can see this rule in action by using the `status` option:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`status`选项来查看此规则的运行情况：
- en: '[PRE118]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'Deleting with `ufw` is simple—just prefix your original rule (be it `allow`
    or `deny`) with the word `delete`:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ufw`删除很简单-只需在您的原始规则（无论是`allow`还是`deny`）前面加上`delete`一词：
- en: '[PRE119]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: How it works...
  id: totrans-492
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Each of these examples are used to manipulate the running firewall configuration
    on your box. When you use the userland tools, as with the querying examples in
    the last section, you're actually modifying the Netfilter framework of the kernel.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例中的每一个都用于操纵您的框上运行的防火墙配置。当您使用用户空间工具时，就像在上一节中的查询示例中一样，您实际上是在修改内核的Netfilter框架。
- en: Personally, I find it easiest to understand what's going on by using the `iptables`
    command, though you may find yourself more comfortable with an alternative.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我发现使用`iptables`命令最容易理解正在发生的事情，尽管您可能会发现自己更喜欢使用其他方法。
- en: 'As we saw in the last section, if you enable `firewalld` or `ufw`, you will
    also find that your default `iptables` rules change. Without `firewalld` or `ufw`
    enabled, the out-of-the-box `iptables` configuration will be much simpler, as
    we can see in the following lines:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一节中看到的，如果您启用了`firewalld`或`ufw`，您还会发现您的默认`iptables`规则发生了变化。如果没有启用`firewalld`或`ufw`，那么开箱即用的`iptables`配置将会更简单，如下面的行所示：
- en: '[PRE120]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Whenever we modified our firewall, our changes were instantly applied.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们修改防火墙时，我们的更改都会立即生效。
- en: 'Breaking this down, if we go back to our `iptables` example, we can step through
    what we did:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 分解一下，如果我们回到我们的`iptables`示例，我们可以逐步了解我们做了什么：
- en: '[PRE121]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Here, we modify `iptables` using the `iptables` userland tool:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`iptables`用户空间工具来修改`iptables`：
- en: '[PRE122]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'We then `append` a rule to our `INPUT` chain (a chain resides within a table):'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们向我们的`INPUT`链（一个链位于一个表中）添加规则：
- en: '[PRE123]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'We set the source of traffic as our VirtualBox subnet:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将流量源设置为我们的VirtualBox子网：
- en: '[PRE124]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'We specify the protocol and use the extended match feature:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 我们指定协议并使用扩展匹配功能：
- en: '[PRE125]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'We say that the destination port should be `22` (the SSH port):'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 我们说目标端口应该是`22`（SSH端口）：
- en: '[PRE126]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Finally, we say that we should `ACCEPT` this traffic:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们说我们应该`ACCEPT`这个流量：
- en: '[PRE127]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: There's more...
  id: totrans-512
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: If you make changes with `firewall-cmd` or `ufw`, you can generally save the
    running config to the persistent config at the same time.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用`firewall-cmd`或`ufw`进行更改，通常可以同时将运行配置保存到持久配置中。
- en: 'With `iptables`, we want to use `iptables-save` to modify our saved configuration,
    and ensure that it starts at boot:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`iptables`，我们希望使用`iptables-save`来修改我们保存的配置，并确保它在启动时启动：
- en: '[PRE128]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'This is all fine and dandy, except it''s printed the configuration to standard
    out instead of saving it somewhere. Let''s fix that by redirecting it to the default
    `iptables` config location:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都很好，只是它将配置打印到标准输出而不是保存在某个地方。让我们通过将其重定向到默认的`iptables`配置位置来解决这个问题：
- en: '[PRE129]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'Now, to properly start this at boot, we need the `iptables-services` package,
    which includes things such as the `systemd` unit files:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了正确地在启动时启动它，我们需要`iptables-services`包，其中包括`systemd`单元文件等内容：
- en: '[PRE130]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'We can now enable `iptables` to start at boot:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以启用`iptables`以在启动时启动：
- en: '[PRE131]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'Run the `systemctl` `restart` command for `iptables` and ensure your configuration
    is correct:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`systemctl restart`命令以启动`iptables`，并确保您的配置是正确的：
- en: '[PRE132]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Firewalls can be as complex or as simple as you need them to be. It's a good
    idea to start simple and make them more complex as you go.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙可以像您需要的那样复杂或简单。最好从简单开始，随着您的学习逐渐增加复杂性。
- en: There's also the `iptables -F` option, which we didn't cover in this section.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 还有`iptables -F`选项，我们在本节中没有涵盖。
- en: '`-F` means flush, and it can be incredibly handy in certain situations for
    flushing your firewall back to its default configuration.'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '`-F`表示刷新，在某些情况下，将防火墙刷新回其默认配置可能非常方便。'
- en: However, it's worth noting that if you have your default `INPUT` policy set
    to `DROP` incoming traffic, then flushing any rules that otherwise allow you access
    will render your session unusable.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，值得注意的是，如果您将默认的`INPUT`策略设置为`DROP`传入流量，那么刷新任何允许您访问的规则将使您的会话无法使用。
- en: 'My default policy is `DROP`:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 我的默认策略是`DROP`：
- en: '[PRE133]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'If I now flush my rules, my session locks up:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我现在刷新我的规则，我的会话就会锁定：
- en: '[PRE134]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: We would now need to get to the console of the box and reinstate the rules that
    allowed us access. Most of the time, this is simply a case of running the `start`
    command of the firewall.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要进入框的控制台并恢复允许我们访问的规则。大多数情况下，这只是运行防火墙的`start`命令。
- en: Determining the running services and ports in use
  id: totrans-533
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定正在运行的服务和正在使用的端口
- en: In this section, we're going to use only our `centos1` VM, as we determine the
    ports in use on our box, and the services behind them.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将仅使用我们的`centos1` VM，因为我们确定我们的框上正在使用的端口和背后的服务。
- en: Getting ready
  id: totrans-535
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Connect to your `centos1` VM.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到您的`centos1` VM。
- en: 'You should also install the `lsof` package for some of the examples that we
    will be looking at:'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 您还应该安装`lsof`软件包，以便查看我们将要查看的一些示例：
- en: '[PRE135]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: How to do it...
  id: totrans-539
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: When determining what's running on a server, you usually want to know if anything
    is listening on for connections and on what ports.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定服务器上运行的内容时，通常要知道是否有任何内容正在监听连接以及使用哪些端口。
- en: Out of the box, **socket statistics** (**ss**) is usually available. The older
    program, `netstat`, might be installed sometimes too, though it won't be covered
    here.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 开箱即用，**套接字统计**（**ss**）通常是可用的。旧的程序`netstat`有时也会安装，尽管这里不会涉及。
- en: 'A good first step is to run `ss -tua`, which will list all TCP and UDP sockets:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的第一步是运行`ss -tua`，它将列出所有TCP和UDP套接字：
- en: '[PRE136]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'If we want to list only to `ESTAB` (`established`) connections, we can filter
    down using the `state` directive:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们只想列出`ESTAB`（`established`）连接，我们可以使用`state`指令进行过滤：
- en: '[PRE137]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: Here, we can see my SSH session from the host machine.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到我的主机机器上的SSH会话。
- en: 'Say we now want to list all sockets that are listening for TCP connections:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们现在想要列出所有正在监听TCP连接的套接字：
- en: '[PRE138]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'Alternatively, we can do this for the UDP:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以为UDP执行此操作：
- en: '[PRE139]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: This is enough to give us a good overview of the services running, but it doesn't
    let us know the ports.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 这足以让我们对正在运行的服务有一个很好的概述，但它并不让我们知道端口。
- en: '`ss` will check against a known services list to determine the name to display.
    In this example, we deliberately chose to list the listening ports, filtering
    out everything but port `22`, and we can see that `ssh` has been chosen:'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss`将根据已知的服务列表检查以确定要显示的名称。在这个例子中，我们故意选择列出监听端口，过滤除了端口`22`之外的所有内容，我们可以看到`ssh`已被选择：'
- en: '[PRE140]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '`::` is the IPv6 loopback denotion, which is why it shows up here next to one
    of the SSH entries.'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '`::`是IPv6环回表示，这就是为什么它在SSH条目旁边显示在这里。'
- en: 'We can check the system''s `services` list to see what it thinks `ssh` should
    be using:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以检查系统的`services`列表，看看它认为`ssh`应该使用什么：
- en: '[PRE141]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: How it works...
  id: totrans-557
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`ss` is a quick way of determining the sockets that a system is currently using,
    and it''s not limited to TCP or UDP, as it''s also able to display Unix domain
    sockets (`-x`).'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss`是确定系统当前正在使用的套接字的快速方法，它不仅限于TCP或UDP，因为它还能够显示Unix域套接字（`-x`）。'
- en: In this example, we've queried the system to find out which ports are in use,
    and `ss` has performed some resolution work to determine what services those ports
    are likely to be used by.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们已经查询了系统，找出了哪些端口正在使用，`ss`已经执行了一些解析工作，以确定这些端口可能被哪些服务使用。
- en: 'This is not a guarantee, however. For example, if you start a Python web server
    on `2222`, it would list the following:'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这并不是保证。例如，如果您在`2222`上启动Python Web服务器，它将列出以下内容：
- en: '[PRE142]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'This is simply because as far as `/etc/services` is concerned, this port is
    used by `EtherNet/IP-1`:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅仅是因为就`/etc/services`而言，此端口被`EtherNet/IP-1`使用：
- en: '[PRE143]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: There's more...
  id: totrans-564
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: An arguably better way of determining which process is using which port is to
    use the `lsof` command. I say arguably because it's not usually installed by default,
    though it is extremely handy and powerful.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 确定哪个进程使用哪个端口的一个可以说是更好的方法是使用`lsof`命令。我说可以说是因为它通常不是默认安装的，尽管它非常方便和强大。
- en: 'If we use `lsof` and check for commands using port `22`, we get the following
    list:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用`lsof`并检查使用端口`22`的命令，我们会得到以下列表：
- en: '[PRE144]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: If you don't want to print hostnames (centos1 in the above example) and port
    names (ssh above) you can use the following extra flags instead ( `P` & `n`:)
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想打印主机名（上面的示例中的centos1）和端口名（上面的ssh），您可以使用以下额外的标志（`P`和`n`：）
- en: '[PRE145]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'If we have our Python web server enabled on `2222`, we get this:'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在`2222`上启用我们的Python Web服务器，我们会得到这个：
- en: '[PRE146]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Notice that while the `NAME` is still listed as `EtherNet`, we know it's Python
    because the `COMMAND` is listed as such.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，虽然`NAME`仍然列为`EtherNet`，但我们知道它是Python，因为`COMMAND`也是如此。
- en: 'Because we also have PID (`4542`), we can get the full command easily:'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们还有PID（`4542`），我们可以轻松地获得完整的命令：
- en: '[PRE147]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Debugging with iftop
  id: totrans-575
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用iftop进行调试
- en: In this section, we're going to look at a member of the `top` family (which
    is quite extensive, featuring `atop`, `iotop`, `htop`, and so on), which is specifically
    geared toward network traffic statistics and debugging.
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看`top`系列的一个成员（它非常广泛，包括`atop`，`iotop`，`htop`等），它专门用于网络流量统计和调试。
- en: '`iftop` is both handy and very readable.'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '`iftop`既方便又易读。'
- en: Getting ready
  id: totrans-578
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: For this section, we're going to use `centos1` and `centos2`, connect to both
    in separate windows.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用`centos1`和`centos2`，在不同的窗口中连接到两者。
- en: 'Make sure that you install `iftop` on `centos2` prior to starting. This comes
    from the **Extra Packages for Enterprise Linux** (**EPEL**) repository, so we
    have to install that first:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在开始之前在`centos2`上安装`iftop`。这来自**企业Linux的额外软件包**（**EPEL**）存储库，因此我们必须首先安装它：
- en: '[PRE148]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'Start `iftop` on `centos2`:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 在`centos2`上启动`iftop`：
- en: '[PRE149]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: How to do it...
  id: totrans-584
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Once you''ve started `iftop` on `centos2`, switch to `centos1` and run an `ssh`
    command to generate some network traffic to `centos2`:'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在`centos2`上启动了`iftop`，切换到`centos1`并运行一个`ssh`命令，以生成一些流向`centos2`的网络流量：
- en: '[PRE150]'
  id: totrans-586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'Back on `centos2`, you should see a brief entry in your network screen that
    shows activity:'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 回到`centos2`，您应该在网络屏幕中看到一个简短的条目显示活动：
- en: '![](img/3f3698b3-1359-4779-bc9b-13adc22dabdb.png)'
  id: totrans-588
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3f3698b3-1359-4779-bc9b-13adc22dabdb.png)'
- en: In my `ssh` session on `centos1` (which is now connected to `centos2`), I've
    started `top` to generate a stream of traffic.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 在我连接到`centos2`的`ssh`会话中（现在连接到`centos2`），我已经启动了`top`来生成一系列流量。
- en: 'At the bottom of your window, you will see the following values:'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的窗口底部，您将看到以下值：
- en: '`TX`'
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TX`'
- en: '`RX`'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RX`'
- en: '`TOTAL`:'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`总计`：'
- en: '![](img/081134d8-261b-4864-a393-2420af8ade03.png)'
  id: totrans-594
  prefs: []
  type: TYPE_IMG
  zh: '![](img/081134d8-261b-4864-a393-2420af8ade03.png)'
- en: These values are total traffic transferred, received, and total.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值是总流量传输，接收和总计。
- en: To the right we have the rates averaged over `2`, `10`, and `40` seconds.
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧，我们有在`2`、`10`和`40`秒内平均的速率。
- en: Clicking back to `centos1` and stopping, then starting `top`, will cause the
    `RX` values to rise, as you've sent keystrokes over the connection.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 点击回到`centos1`，停止，然后启动`top`，将导致`RX`值上升，因为您已经通过连接发送了按键。
- en: 'At the top of the window, you can see a visual representation of the traffic:'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 在窗口顶部，您可以看到流量的可视表示：
- en: '![](img/9b262467-1b14-4230-afff-3bba0f037102.png)'
  id: totrans-599
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9b262467-1b14-4230-afff-3bba0f037102.png)'
- en: This displays traffic sent back to `192.168.33.10` (`centos1`) and the traffic
    received in a somewhat readable format.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了发送到`192.168.33.10`（`centos1`）的流量和以相对可读的格式接收到的流量。
- en: The scale for the transfer rate is at the top, and varies depending on quantity.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 传输速率的刻度在顶部，并根据数量而变化。
- en: In a real-world scenario, this type of information can be invaluable, as it
    offers an at-a-glance way of seeing who might be hammering your server.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界的情况下，这种类型的信息可能是非常宝贵的，因为它提供了一种一目了然的方式来看到谁可能在攻击您的服务器。
- en: 'If we swap to watching `eth0` traffic, then restart `chronyd`, we can see more
    servers being connected to:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们切换到观察`eth0`流量，然后重新启动`chronyd`，我们可以看到更多的服务器连接到：
- en: '![](img/3767614b-3570-4575-a11b-89893650826e.png)'
  id: totrans-604
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3767614b-3570-4575-a11b-89893650826e.png)'
- en: How it works...
  id: totrans-605
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Like `tcpdump`, `iftop` listens to the traffic on the interface you specify,
    or the default if you don't specify one.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 与`tcpdump`一样，`iftop`会监听您指定的接口上的流量，或者如果您没有指定接口，则使用默认接口。
- en: It then prints the bandwidth usage by the host, giving a good visual representation
    of the network on your box.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 然后它打印主机的带宽使用情况，为您的设备提供了网络的良好视觉表示。
- en: There's more...
  id: totrans-608
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: '`iftop` offers a lot of options, and a peruse of the manual page is worth considering.
    Simple things like using `-n` to disable hostname lookups can be handy, or changing
    how the bandwidth rates are displayed.'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: '`iftop`提供了很多选项，值得考虑查看手册页面。像使用`-n`来禁用主机名查找之类的简单事情可能会很方便，或者更改带宽速率的显示方式。'
- en: 'You can even print a text-only version to `stdout` using the `-t` flag:'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以使用`-t`标志将纯文本版本打印到`stdout`：
- en: '[PRE151]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Summary
  id: totrans-612
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we took a look at networking and firewalls in the Linux world.
    I hope it didn't hurt your head too much, because it certainly causes me some
    pain.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一下Linux世界中的网络和防火墙。我希望这不会让您头痛太多，因为它确实让我感到一些痛苦。
- en: As I alluded to earlier, networking and firewall configuration can be as complex
    or as simple as you want it to be, and in the ever-growing world of single-use
    servers, we're seeing simpler and simpler configurations in the wild.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，网络和防火墙配置可以像你想要的那样复杂或简单，并且在不断增长的单一服务器世界中，我们看到了越来越简单的配置。
- en: Where you tend to find problems are around the concepts of multiple networks
    and multi-homed servers, because flat network structures are a lot easier to understand
    for the average person (myself included).
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会在多个网络和多宿主服务器的概念周围找到问题，因为扁平网络结构对于普通人来说更容易理解（包括我自己）。
- en: You also don't have to do everything with Linux.
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 您也不必完全使用Linux来完成所有操作。
- en: Yes, Linux can act as a border firewall for an estate, but you could also use
    *F5* devices, or Check Point boxes.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，Linux可以作为边界防火墙用于企业，但您也可以使用*F5*设备或Check Point盒。
- en: Yes, Linux can act as a router, but you're much more likely to see a Cisco or
    a Juniper device in the network cabinet.
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，Linux可以充当路由器，但您更有可能在网络机柜中看到思科或Juniper设备。
- en: These solutions have their positives, as well as their negatives.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 这些解决方案既有积极的一面，也有消极的一面。
- en: A simple positive is that a purpose-built appliance is generally very good at
    the thing it was purpose-built for, and the tools to manage it are pretty much
    uniform in their approach (rather than the sometimes-mash we get in the Linux
    world).
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的积极因素是，专门设计的设备通常非常擅长其专门设计的功能，并且管理这些设备的工具在其方法上几乎是统一的（而不是我们在Linux世界中有时会遇到的混乱）。
- en: An obvious negative is that it either means you have to learn the technology
    stack of the device you're incorporating into your network, or you have to hire
    a purpose-built-person to manage the solution for you, costing time and money.
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 一个明显的负面因素是，这意味着您要么必须学习您要纳入网络的设备的技术堆栈，要么必须雇佣一个专门的人来为您管理解决方案，这将花费时间和金钱。
- en: Networking seems to be something that you either like or dislike, and I fall
    firmly in the latter camp. In theory, networks and firewalls "just work" once
    they're set up, but in practice that means the edge case problems are much more
    difficult to track down and correct when they do, inevitably, happen.
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 网络似乎是您喜欢或不喜欢的东西，而我坚定地属于后者。理论上，一旦设置好，网络和防火墙就可以“自动运行”，但实际上，这意味着边缘情况问题在发生时更难以追踪和纠正。
- en: One final thing to mention—because I guarantee you'll have to deal with it at
    some point in your professional career—is the problem of locking yourself out.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 最后要提到的一件事是，因为我保证您在职业生涯中的某个时候会遇到这个问题，那就是锁定自己的问题。
- en: It happens.
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况会发生。
- en: When it does, don't beat yourself up about it. Literally every engineer I've
    ever worked with has locked themselves out of a box once, either through a misconfigured
    firewall rule, or a silly mistake such as changing the SSH port without first
    updating the SELinux configuration.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 当这种事情发生时，不要自责。我曾经和每一个工程师一起工作过，他们都曾经把自己锁在盒子外面，要么是通过错误配置的防火墙规则，要么是像改变SSH端口而没有先更新SELinux配置这样的愚蠢错误。
- en: If you lock yourself out and you have access to a console, either a remote Keyboard
    Video Mouse system or something like a cloud provider's web-based Terminal, you're
    usually fine—it just means logging in and correcting your mistake.
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把自己锁在外面，而你可以访问控制台，无论是远程键盘视频鼠标系统还是类似云服务提供商的基于网络的终端，通常都没问题——这意味着只需要登录并纠正你的错误。
- en: 'If you lock yourself out and the system is on the other side of the city, or
    country, you''ve got two options:'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把自己锁在外面，而系统在城市或国家的另一边，你有两个选择：
- en: Hop into your car and resign yourself to a long drive there and back.
  id: totrans-628
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳进你的车里，准备好长途驾驶去那里和回来。
- en: Contact the remote engineer and prostrate yourself before them, admitting your
    error and begging them to find a crash cart to resolve your mishap.
  id: totrans-629
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 联系远程工程师，向他们下跪，承认你的错误，并请求他们找一个救援车来解决你的错误。
- en: If you choose option two, buying them a beverage of their choice the next time
    you meet is more than agreeable.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择第二个选项，下次见面时给他们买一杯他们喜欢的饮料是完全可以接受的。
- en: I have been both the remote engineer tasked with fixing someone else's mistake,
    and the person making the mistake. As I said, it happens to us all.
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 我既是远程工程师，负责修复别人的错误，也是犯错误的人。就像我说的，这种事情每个人都会遇到。
