- en: Using Debian Package Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Debian软件包管理
- en: In the previous chapter, we focused on the steps to install a Linux distribution.
    We first worked with the concept of a LiveCD, as opposed to a regular installation.
    We saw how the system could be booted up without having a hard disk. Then we discussed
    why we would use a LiveCD. After that, we switched our attention to a demo of
    performing a fresh installation of Linux distribution. Emphasis was placed on
    the partitioning, particularly the common mount points. Next, we saw how to do
    an installation side by side with a Windows OS. Following this, we did a side-by-side
    installation between Linux distributions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们重点介绍了安装Linux发行版的步骤。我们首先使用了LiveCD的概念，而不是常规安装。我们看到了系统如何在没有硬盘的情况下启动。然后我们讨论了为什么要使用LiveCD。之后，我们将注意力转移到演示如何执行Linux发行版的全新安装。重点放在了分区上，特别是常见的挂载点。接下来，我们看到了如何在Windows操作系统旁边进行安装。在此之后，我们进行了Linux发行版之间的并排安装。
- en: In this chapter, we will continue our lesson by focusing on the points surrounding
    software installation. We will begin by looking at the Debian style of package
    management. First, we will start with the `dpkg` command, and look at the various
    methods of using the `dpkg` command. Also, we will look at the various options
    which can be passed with the `dpkg` command. Next, we will turn our attention
    toward the `apt-get` utility. This is another popular command for installing applications
    within a Debian environment. We will pay close attention to the options that can
    be passed with the `apt-get` command. Following this, the focus will be switched
    to the `aptitude` utility. Finally, we will close by looking at the `synaptic`
    utility. In a similar way to the previous commands, we will focus on the syntax
    for deploying software within a Debian environment. All the utilities discussed
    in this chapter are commonly used for managing software within a Debian environment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将继续我们的课程，重点关注软件安装周围的要点。我们将首先看一下Debian风格的软件包管理。首先，我们将从`dpkg`命令开始，并查看使用`dpkg`命令的各种方法。此外，我们将查看可以与`dpkg`命令一起使用的各种选项。接下来，我们将把注意力转向`apt-get`实用程序。这是另一个在Debian环境中安装应用程序的流行命令。我们将密切关注可以与`apt-get`命令一起使用的选项。之后，重点将转向`aptitude`实用程序。最后，我们将通过查看`synaptic`实用程序来结束。与前面的命令类似，我们将重点关注在Debian环境中部署软件的语法。本章讨论的所有实用程序都是在Debian环境中管理软件常用的。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The `dpkg` command
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dpkg`命令'
- en: The `apt-get` command
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apt-get`命令'
- en: The `aptitude` command
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aptitude`命令'
- en: The `synaptic` utility
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`synaptic`实用程序'
- en: The dpkg command
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`dpkg`命令'
- en: 'Firstly, the `dpkg` utility is a low-level system tool to extract, analyze,
    unpack, and install, and remove packages with a `.deb` extension. The scripts
    read by `dpkg` inside each `.deb` file are important as they give information
    to the program regarding the packages'' installation, removal, and configuration.
    The `dpkg` utility resides at the base of the package management system in Debian-based
    distributions. The Debian package, `dpkg`, provides the `dpkg` utility, as well
    as several other programs necessary for runtime functioning of the packaging system;
    namely: `dpkg-deb`, `dpkg-split`, `dpkg-query`, `dpkg-statoverride`, `dpkg-divert`,
    and `dpkg-trigger`. We can take a glance at the `/var/log/dpkg.log` file. There
    are a lot of verbose details about triggers and packages going through varying
    stages of unpacking and configuration.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`dpkg`实用程序是一个低级系统工具，用于提取、分析、解压缩、安装和删除扩展名为`.deb`的软件包。在每个`.deb`文件中由`dpkg`读取的脚本非常重要，因为它们向程序提供有关软件包安装、删除和配置的信息。`dpkg`实用程序位于基于Debian的发行版中的软件包管理系统的基础。Debian软件包`dpkg`提供了`dpkg`实用程序，以及运行时包装系统所必需的其他几个程序；即：`dpkg-deb`、`dpkg-split`、`dpkg-query`、`dpkg-statoverride`、`dpkg-divert`和`dpkg-trigger`。我们可以瞥一眼`/var/log/dpkg.log`文件。其中有大量关于触发器和软件包经过各种解压缩和配置阶段的详细信息。
- en: 'Let''s take a look at `/var/log/dpkg.log`:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`/var/log/dpkg.log`：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'From the preceding output, we have learned about the various packages that
    the `dpkg` utility is managing. If we want to see a list of packages on this system,
    we can use the `l` option:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们了解了`dpkg`实用程序正在管理的各种软件包。如果我们想要查看系统上的软件包列表，我们可以使用`l`选项：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the preceding output, we read the output from left to right. We should now
    focus our attention on the far right of the output. This is the description section;
    the packages are presented in a human-readable summary for each package that is
    currently installed onto this system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，我们从左到右阅读输出。现在我们应该把注意力集中在输出的最右边。这是描述部分；软件包以人类可读的摘要形式呈现，说明了当前安装在该系统上的每个软件包。
- en: 'We can also narrow down our output by filtering the `dpkg` command; let''s
    just look for the `xterm` program:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过过滤`dpkg`命令来缩小输出范围；让我们只查找`xterm`程序：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can verify whether a package is installed or not with `--get-selections`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`--get-selections`验证软件包是否已安装：
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can view the files owned by a package by using the `L` option. Let''s continue
    with our example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`L`选项查看软件包拥有的文件。让我们继续我们的示例：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can search for a particular package in this system by using the `s` option:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`s`选项在系统中搜索特定的软件包：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this case, Apache is not installed by default on this system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Apache在这个系统上默认没有安装。
- en: 'I''ve downloaded a `tftp` client for this demonstration. Let''s verify that
    the `tftp` client isn''t installed on this system:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经为这个演示下载了一个`tftp`客户端。让我们验证一下`tftp`客户端是否已安装在这个系统上：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now we''ll install a package using the `dpkg` command. Let''s try to install
    the `tftp` client package using the `i` option:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用`dpkg`命令安装一个软件包。让我们尝试使用`i`选项安装`tftp`客户端软件包：
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'From the preceding output, you can see that we would need root privileges to
    install or remove a package. Let''s retry as root:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，您可以看到我们需要root权限来安装或删除软件包。让我们以root身份重试：
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Great! Now, let''s retry the `dpkg` command with the `l` option:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在，让我们使用`dpkg`命令和`l`选项重试一下：
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Awesome! We can now see that our `tftp` client is listed. We can also run the
    `dpkg` with the `--get-selections` to verify that:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们现在可以看到我们的`tftp`客户端已列出。我们还可以运行带有`--get-selections`的`dpkg`来验证：
- en: '[PRE10]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When you use `dpkg` to install a package, sometimes you may run into dependency
    issues. To work around this, you will need to download and install each of the
    dependencies before you install your package using `dpkg`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`dpkg`安装软件包时，有时可能会遇到依赖性问题。为了解决这个问题，您需要在使用`dpkg`安装软件包之前下载并安装每个依赖项。
- en: 'We can also remove a package using the `dpkg` command. Let''s remove the `tftp`
    package which we installed in the previous example. We will use the `-r` option:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`dpkg`命令删除软件包。让我们删除在上一个示例中安装的`tftp`软件包。我们将使用`-r`选项：
- en: '[PRE11]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, let''s verify that the `tftp` package has indeed been uninstalled:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们验证一下`tftp`包确实已被卸载：
- en: '[PRE12]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Great! However, when we use the `-r` option, it does not remove the configuration
    file(s). In order to remove the package, along with the configuration files, we
    should use the `-P` (purge) option. Here is how that works:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！但是，当我们使用`-r`选项时，它不会删除配置文件。为了删除软件包以及配置文件，我们应该使用`-P`（清除）选项。下面是它的工作原理：
- en: '[PRE13]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also extract the content of a package without installing it. We should
    use the `-x` option:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以提取软件包的内容而不安装它。我们应该使用`-x`选项：
- en: '[PRE14]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Before we can download any packages and install them using the `dpkg` utility,
    we need to know the correct hardware architecture of the system. Fortunately,
    we can use the `dpkg-architecture` command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`dpkg`实用程序下载任何软件包并安装之前，我们需要知道系统的正确硬件架构。幸运的是，我们可以使用`dpkg-architecture`命令：
- en: '[PRE15]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Based on the preceding output, we can see that this system supports either
    32-bit or 64-bit packages. We can also garner useful information regarding the
    purpose of a package. We need to use the `dpkg-query` command with the `-s` option:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，我们可以看到这个系统支持32位或64位软件包。我们还可以获取有关软件包用途的有用信息。我们需要使用带有`-s`选项的`dpkg-query`命令：
- en: '[PRE16]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: From the preceding output, we are given a description at the bottom regarding
    the use of the `tftp` package.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们在底部得到了有关`tftp`软件包用途的描述。
- en: The apt-get command
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: apt-get命令
- en: The **Advanced Package Tool** (**APT**) is a command-line tool that is used
    for easy interaction with the `dpkg` packaging system. APT is the ideal method
    used for managing software within Debian-based Linux distributions, such as Ubuntu.
    It manages dependencies effectively, maintains large configuration files, and
    properly handles upgrades and downgrades to ensure system stability. `dpkg` on
    its own does not handle dependencies properly. `apt-get` performs installations,
    package searches, updates, and many other operations to packages available to
    your system. Keeping packages up to date is extremely important, as using out-of-date
    packages can lead to security issues on your system. The `apt-get` utility requires
    root privileges, similar to the `dpkg` utility.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级软件包工具**（**APT**）是一个命令行工具，用于与`dpkg`软件包系统进行简单交互。 APT是管理基于Debian的Linux发行版（如Ubuntu）中软件的理想方法。它有效地管理依赖关系，维护大型配置文件，并正确处理升级和降级以确保系统稳定性。`dpkg`本身无法正确处理依赖关系。`apt-get`执行安装、软件包搜索、更新和许多其他操作，以使系统可用的软件包保持最新。保持软件包最新非常重要，因为使用过时的软件包可能会导致系统安全问题。`apt-get`实用程序需要root权限，类似于`dpkg`实用程序。'
- en: 'First, before we make it perform in any software installation, it''s always
    best practice to update the package database. We should run the `apt-get` update:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在进行任何软件安装之前，最好的做法是更新软件包数据库。我们应该运行`apt-get` update：
- en: '[PRE17]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Based on the preceding output, the first section will be `Hit`, `Get`, `Ign`.
    Now, `Hit` means that there is no change in the package version, and `Get` means
    that there is a new version available. Then `Ign` means that the package is being
    ignored. There are various reasons why you see `Ign`, ranging from a package being
    too recent to there being an error in retrieving the the file. Usually, the errors
    are harmless.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，第一部分将是`Hit`，`Get`，`Ign`。现在，`Hit`表示软件包版本没有变化，`Get`表示有新版本可用。然后`Ign`表示软件包被忽略。出现`Ign`的原因有很多，从软件包太新到检索文件时出现错误。通常，这些错误是无害的。
- en: 'Now, before we install an application, we can search for it using the `apt-cache`
    command. Let''s say that we want to install a messenger application. We can do
    this in the following way:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在安装应用程序之前，我们可以使用`apt-cache`命令搜索它。假设我们想安装一个即时通讯应用程序。我们可以这样做：
- en: '[PRE18]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Based on the preceding output, we can see that a wide range of messenger packages
    are available to be installed. If, for some reason, we wanted to see all the available
    packages, we could use the `pkgnames` option:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，我们可以看到有各种即时通讯软件包可供安装。如果出于某种原因，我们想查看所有可用的软件包，我们可以使用`pkgnames`选项：
- en: '[PRE19]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can see a variety of packages which we can install onto this system. We
    can see a brief description of each package by specifying the correct package
    name:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到各种可以安装到这个系统上的包。通过指定正确的包名称，我们可以看到每个包的简要描述：
- en: '[PRE20]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Based on the preceding output, we can see the descriptions for various packages
    that we passed with the `search` option. We can also check the details of a package
    by using the `show` option:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，我们可以看到我们使用`search`选项传递的各种包的描述。我们还可以使用`show`选项检查包的详细信息：
- en: '[PRE21]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can even filter this information to only look for dependencies. We should
    use the `showpkg` option:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以将这些信息过滤，只查找依赖关系。我们应该使用`showpkg`选项：
- en: '[PRE22]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can also view the statistics for the cache on this system, by using the
    `stats` option:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`stats`选项查看此系统上缓存的统计信息：
- en: '[PRE23]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we can download a package without installing it. We can use the `download`
    option with `apt-get`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以下载一个包而不安装它。我们可以使用`apt-get`的`download`选项：
- en: '[PRE24]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We can also install a package that has been downloaded. We need to specify
    the path with the `apt-get` command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以安装已下载的软件包。我们需要使用`apt-get`命令指定路径：
- en: '[PRE25]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, sometimes you may run into the problem as seen in the previous example.
    The easiest way to fix this would be to rerun the `apt-get` command with the `-f`
    option, leaving out the package name:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，您可能会遇到前面示例中所见的问题。修复这个问题的最简单方法是使用`-f`选项重新运行`apt-get`命令，不包括软件包名称：
- en: '[PRE26]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'There we go! As we can see, the installation was successful. This is what is
    so great about the `apt-get` utility. It finds the dependencies that are needed
    and offers to install them to fix the problem being reported. We can also install
    multiple applications simultaneously. We simply place each package name on the
    same line, separated by a space:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 看吧！正如我们所看到的，安装成功了。这就是`apt-get`实用程序的伟大之处。它找到了需要的依赖项，并提供安装它们以解决报告的问题。我们还可以同时安装多个应用程序。我们只需将每个软件包名称放在同一行上，用空格分隔：
- en: '[PRE27]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Great! So, now you can see the power of the `apt-get` utility in action. We
    can also upgrade all of the packages that are currently installed, by using the
    `upgrade` option:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在您可以看到`apt-get`实用程序的强大之处。我们还可以通过使用`upgrade`选项升级当前安装的所有软件包：
- en: '[PRE28]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We can also remove some packages that were previously used, to ensure a particular
    package was installed correctly. In our case, if we rerun the `upgrade` option,
    we should see this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以删除先前使用过的一些软件包，以确保特定软件包已正确安装。在我们的情况下，如果我们重新运行`upgrade`选项，我们应该会看到这个：
- en: '[PRE29]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We should use the `autoremove` option as suggested to free up some disk space:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该按建议使用`autoremove`选项释放一些磁盘空间：
- en: '[PRE30]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We can also free up disk space by using the `clean` option:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`clean`选项释放磁盘空间：
- en: '[PRE31]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: As we can see, the command ran very quickly.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，命令运行得非常快。
- en: It's always best practice to clean up disk space regularly.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 定期清理磁盘空间是最佳实践。
- en: 'We can also remove an application by using the `remove` option. This would
    remove the application but not the configuration:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`remove`选项删除一个应用程序。这将删除应用程序，但不会删除配置：
- en: '[PRE32]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: We would then run the `autoremove` option to clean up unnecessary packages.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们会运行`autoremove`选项来清理不必要的软件包。
- en: The autoremove option
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动删除选项
- en: 'Often, when we uninstall a package, there are some unnecessary packages which
    were initially installed in order for the specific package to function. These
    unneeded packages take up hard disk space; we could reclaim space by using the
    `autoremove` option:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们卸载一个软件包时，会有一些不必要的软件包最初安装，以便特定软件包能够正常运行。这些不需要的软件包占用了硬盘空间；我们可以使用`autoremove`选项来回收空间：
- en: '[PRE33]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Awesome! We can remove the package and its configuration by using the `purge`
    option.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们可以使用`purge`选项删除软件包及其配置。
- en: The purge option
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清除选项
- en: 'The `purge` option, when used, not only removes a package, it also removes
    a package configuration file. This is ideal because most of the time when we uninstall
    a package using `uninstall`, it leaves unwanted configuration files in our system.
    Here is how we use the `purge` option:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`purge`选项时，不仅会删除软件包，还会删除软件包配置文件。这是理想的，因为大多数情况下，当我们使用`uninstall`卸载软件包时，它会在系统中留下不需要的配置文件。以下是我们如何使用`purge`选项：
- en: '[PRE34]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Great!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！
- en: It is always a good idea to run the `apt-get` command with the `clean` option
    regularly.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 定期使用`clean`选项运行`apt-get`命令总是一个好主意。
- en: 'Whenever we install a package using the `apt` utility, it uses repositories
    to download the packages into the cache. By default, when we install a Debian
    distribution, the installation comes with official repositories. These are stored
    in the `/etc/apt/sources.list` file. Let''s take a look at that file:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们使用`apt`实用程序安装软件包时，它会使用存储库将软件包下载到缓存中。默认情况下，当我们安装Debian发行版时，安装会附带官方存储库。这些存储在`/etc/apt/sources.list`文件中。让我们来看看那个文件：
- en: '[PRE35]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The entries that start with `deb` refer to where to search for packages. The
    entries that start with `deb-src` refer to source packages.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以`deb`开头的条目指的是搜索软件包的位置。以`deb-src`开头的条目指的是源软件包。
- en: The aptitude command
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: aptitude命令
- en: Aptitude is a frontend to APT, which is the Debian package manager. It's best
    suited in shell environments where a GUI is not present. The `aptitude` command allows
    users to view the list of packages, and perform package management tasks such
    as installing, removing or upgrading packages. There is an interactive mode; also,
    it could be used as a command-line tool, similar to `apt-get`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Aptitude是APT的前端，它是Debian软件包管理器。它最适合在没有图形界面的shell环境中使用。`aptitude`命令允许用户查看软件包列表，并执行安装、删除或升级软件包等软件包管理任务。还有交互模式；此外，它可以用作类似于`apt-get`的命令行工具。
- en: 'We can see this in action by simply entering the `aptitude` command without
    passing any option(s):'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过简单输入`aptitude`命令而不传递任何选项来看到这一点：
- en: '![](img/00100.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00100.jpeg)'
- en: 'In the screen shown in the preceding screenshot, we can interact by using our
    keyboard or mouse to navigate. At the top, there is a menu. We can select Actions
    from the menu and see the available options:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中显示的屏幕上，我们可以使用键盘或鼠标进行交互导航。顶部有一个菜单。我们可以从菜单中选择操作并查看可用选项：
- en: '![](img/00101.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00101.jpeg)'
- en: 'We can also go directly to Package from the menu and see options similar to
    doing package management from the command line:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以直接从菜单中转到软件包，并查看类似于从命令行进行软件包管理的选项：
- en: '![](img/00102.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00102.jpeg)'
- en: As we can see, `aptitude` is very intuitive when we use this method for package
    management.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，当我们使用这种方法进行软件包管理时，`aptitude`非常直观。
- en: 'We can also manage packages using the command line. This would require us to
    pass options with the `aptitude` command, if we prefer typing commands over a
    menu type of environment. The `aptitude` command supports most of the options
    that we would pass with the `apt-get` command. Let''s start with the `search`
    option:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用命令行来管理软件包。如果我们更喜欢在菜单类型的环境中输入命令，那么我们需要使用`aptitude`命令传递选项。`aptitude`命令支持大多数我们会使用`apt-get`命令传递的选项。让我们从`search`选项开始：
- en: The search option
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索选项
- en: 'When we execute the `search` option, the `aptitude` command does a search for
    possible matches based on the criteria specified after the `search` option:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们执行`search`选项时，`aptitude`命令会根据`search`选项后指定的标准搜索可能的匹配项：
- en: '[PRE36]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Based on the preceding output, we can see similar patterns of the `aptitude`
    command to that of APT. We can also install and update the package list by passing
    the `update` option:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的输出，我们可以看到`aptitude`命令与APT的模式相似。我们还可以通过传递`update`选项来安装和更新软件包列表：
- en: '[PRE37]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'After we have updated the package list, we can upgrade the packages by passing
    the `safe-upgrade` option:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在更新软件包列表后，我们可以通过传递`safe-upgrade`选项来升级软件包：
- en: '[PRE38]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We can also install a package by passing the `install` option:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过传递`install`选项来安装软件包：
- en: '[PRE39]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Awesome! We can also remove a package. We would simply pass the `remove` option:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们还可以删除软件包。我们只需传递`remove`选项：
- en: '[PRE40]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Great! As we can see, the `aptitude` command is very useful for any Linux administrator.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！正如你所看到的，`aptitude`命令对于任何Linux管理员都非常有用。
- en: The synaptic utility
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: synaptic实用程序
- en: 'This is a graphical form of package management; it is based on the APT. This
    powerful GUI utility enables us to install, update, or remove packages within
    an easy-to-use environment. Using the `synaptic` utility enables us to manage
    packages without requiring us to work at the Command Prompt. Let''s take a look
    at the `synaptic` utility within the Ubuntu 18 system. The `synaptic` utility
    is not installed within Ubuntu 18 by default. We can see information about the
    `synaptic` utility before we install it, by using the `apt-cache` command:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种基于APT的图形化软件包管理形式。这个强大的图形界面实用程序使我们能够在易于使用的环境中安装、更新或删除软件包。使用`synaptic`实用程序使我们能够管理软件包，而无需在命令提示符下工作。让我们来看看Ubuntu
    18系统中的`synaptic`实用程序。`synaptic`实用程序在Ubuntu 18中默认未安装。我们可以使用`apt-cache`命令在安装之前查看有关`synaptic`实用程序的信息：
- en: '[PRE41]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Based on the preceding screenshot, we can see there are a number of dependencies
    that the `synaptic` utility depends on. Let''s install the `synaptic` utility
    by using the `apt-get` command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的屏幕截图，我们可以看到`synaptic`实用程序依赖于许多依赖项。让我们使用`apt-get`命令安装`synaptic`实用程序：
- en: '[PRE42]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We have just installed the `synaptic` utility. We could launch the `synaptic`
    utility to explore its features from the **Search your computer** button at the
    top left-hand corner of the Ubuntu 18 system based on the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚安装了`synaptic`实用程序。我们可以从Ubuntu 18系统左上角的**搜索您的计算机**按钮启动`synaptic`实用程序，以探索其功能，如下面的屏幕截图所示：
- en: '![](img/00103.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00103.jpeg)'
- en: 'As soon as we select the `synaptic` package manager, it will prompt us for
    authentication, as can be seen in the following screenshot:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们选择`synaptic`软件包管理器，它将提示我们进行身份验证，如下面的屏幕截图所示：
- en: '![](img/00104.jpeg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00104.jpeg)'
- en: 'Once have authenticated, we will then be presented with the `synaptic` utility.
    We can use the Search button to find specific packages. The following screenshot depicts
    the Search function dialog box:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 认证后，我们将看到`synaptic`实用程序。我们可以使用搜索按钮来查找特定的软件包。以下屏幕截图描述了搜索功能对话框：
- en: '![](img/00105.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00105.jpeg)'
- en: 'Awesome job! As can be seen in the preceding screenshot, we can perform searches
    by simply entering the desired package name. When compared to the command-line
    counterpart, it''s much easier to use a GUI. To perform a search, we would simply
    select the Search button. Also, we can update the package database from within
    the `synaptic` utility by simply selecting the Reload button:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 干得漂亮！如前面的屏幕截图所示，我们可以通过简单输入所需的软件包名称来进行搜索。与命令行对应物相比，使用图形界面要容易得多。要进行搜索，我们只需选择搜索按钮。此外，我们可以通过简单选择重新加载按钮来从`synaptic`实用程序内更新软件包数据库：
- en: '![](img/00106.jpeg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00106.jpeg)'
- en: Great! As you can see, the `synaptic` utility is very intuitive in nature. It
    can be navigated in a similar way to other GUI programs.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！正如你所看到的，`synaptic`实用程序非常直观。它可以以类似于其他图形界面程序的方式进行导航。
- en: Summary
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we focused on the various methods for package management. First,
    we delved into the traditional way of package management; that is, to use the
    `dpkg` utility. We looked at ways to view the current packages on the system.
    We also touched on querying for a particular package. Then we looked at the various
    locations in which a package would install files. Adding to that, we did an actual
    installation of a package. We then verified that the package was indeed installed.
    This was followed up by a removal of a package. Next, we switched our attention
    to a more common approach to package management; namely, APT. We used best practice,
    which is to always pass the `update` option with `apt`. We then focused on the
    method of searching for a package. Adding to this, we looked at the current packages.
    Also, we focused on getting some useful information on a particular package.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们专注于软件包管理的各种方法。首先，我们深入研究了软件包管理的传统方式；也就是使用`dpkg`实用程序。我们探讨了查看系统上当前软件包的方法。我们还涉及查询特定软件包的方法。然后我们看了软件包安装文件的各种位置。除此之外，我们还进行了一个实际的软件包安装。然后我们验证了软件包确实已安装。接着是删除软件包。接下来，我们将注意力转向更常见的软件包管理方法；即APT。我们使用最佳实践，即始终将`update`选项与`apt`一起传递。然后我们专注于搜索软件包的方法。除此之外，我们还查看了当前的软件包。此外，我们还专注于获取有关特定软件包的一些有用信息。
- en: This was followed up by the installation of a package. Then we saw that we can
    install multiple packages on a single `apt-get` command. This was followed by
    a demo on updating the packages. Also, we saw how to remove a package using the
    `apt-get` command. Finally, we worked with `aptitude`. The `aptitude` command
    on its own presents a user-interactive, menu-driven environment. We also looked
    at passing options with the `aptitude` command. Initially, we updated the package
    list. This was followed by an upgrade of the packages. Adding to this, we saw
    the technique for searching for packages. Then a package installation was performed
    using the command line. Following this, we did a demo on removing a package at
    the command line. Finally, we ended with an alternative to the command line, the
    `synaptic` utility. The `synaptic` utility, which is based on APT, is a GUI for
    package management.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 接着是安装软件包。然后我们发现可以在单个`apt-get`命令中安装多个软件包。接着是演示如何更新软件包。此外，我们还看到了如何使用`apt-get`命令删除软件包。最后，我们使用了`aptitude`。`aptitude`命令本身提供了一个用户交互式、菜单驱动的环境。我们还研究了如何在`aptitude`命令中传递选项。最初，我们更新了软件包列表。然后升级了软件包。除此之外，我们还了解了搜索软件包的技巧。然后使用命令行执行了软件包安装。在此之后，我们进行了一个命令行上删除软件包的演示。最后，我们以命令行的替代方式结束，即`synaptic`实用程序。基于APT的`synaptic`实用程序是用于软件包管理的GUI。
- en: In the next chapter, we take a deep dive into the world of Red-Hat package management;
    particularly Fedora. We will cover the various techniques we would use to manage
    packages, such as `rpm`, `yum`, `dnf`, and `yumex`. I hope you come and join in,
    because I'm confident you will be better equipped to manage packages in the Red
    Hat world after going through the next chapter. This will ultimately take you
    one step closer to certification.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨Red-Hat软件包管理的世界；特别是Fedora。我们将介绍各种技术，如`rpm`、`yum`、`dnf`和`yumex`，用于管理软件包。我希望您能加入，因为我相信在阅读下一章后，您将更好地掌握Red
    Hat世界中的软件包管理。这将最终让您更接近认证。
- en: Questions
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which option with the `dpkg` command is used to display the packages that `dpkg`
    is managing on a system?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dpkg`命令的哪个选项用于显示`dpkg`在系统上管理的软件包？'
- en: A. `dpkg -a`
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dpkg -a`
- en: B. `dpkg -l`
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dpkg -l`
- en: C. `dpkg -i`
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dpkg -i`
- en: D. `dpkg –d`
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dpkg –d`
- en: Which option with `dpkg-query` is used to show a human-readable description
    of a package?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dpkg-query`的哪个选项用于显示软件包的可读描述？'
- en: A. `dpkg-query -a`
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dpkg-query -a`
- en: B. `dpkg-query-c`
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dpkg-query-c`
- en: C. `dpkg-query -s`
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dpkg-query -s`
- en: D. `dpkg-query-r`
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dpkg-query-r`
- en: Which log file is used to display `dpkg` package-related messages?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个日志文件用于显示`dpkg`软件包相关的消息？
- en: A. `cat /var/log/dpkg.log`
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: A. `cat /var/log/dpkg.log`
- en: B. `cat /var/dpkg/dpkg.log`
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: B. `cat /var/dpkg/dpkg.log`
- en: C. `cat /var/dpkg-query/dpkg.log`
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: C. `cat /var/dpkg-query/dpkg.log`
- en: D. `cat /var/log/dpkg.dpkg`
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: D. `cat /var/log/dpkg.dpkg`
- en: Which option is used to display packages that are installed with the `dpkg`
    command?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于显示使用`dpkg`命令安装的软件包？
- en: A. `dpkg --get-selections`
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dpkg --get-selections`
- en: B. `dpkg –set-selections`
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dpkg –set-selections`
- en: C. `dpkg –get-selection`
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dpkg –get-selection`
- en: D. `dpkg-query –get-selection`
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dpkg-query –get-selection`
- en: Which option is used to add a package using the `dpkg` command?
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于使用`dpkg`命令添加软件包？
- en: A. `dpkg -e`
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dpkg -e`
- en: B. `dpkg –r`
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dpkg –r`
- en: C. `dpkg -Add`
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dpkg -Add`
- en: D. `dpkg -i`
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dpkg -i`
- en: Which option is used to remove a package along with its configuration files
    using the `dpkg` command?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于使用`dpkg`命令删除软件包及其配置文件？
- en: A. `dpkg -p`
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: A. `dpkg -p`
- en: B. `dpkg-e`
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: B. `dpkg-e`
- en: C. `dpkg -P`
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: C. `dpkg -P`
- en: D. `dpkg-a`
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: D. `dpkg-a`
- en: Which option is used to update the `apt cache`?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于更新`apt`缓存？
- en: A. `apt-get -c`
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: A. `apt-get -c`
- en: B. `apt-get update`
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: B. `apt-get update`
- en: C. `apt-get upgrade`
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: C. `apt-get upgrade`
- en: D. `apt-get -u`
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: D. `apt-get -u`
- en: Which command is used to search the cache for a package?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个命令用于在缓存中搜索软件包？
- en: A. `apt-get search`
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: A. `apt-get search`
- en: B. `apt-cache search`
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: B. `apt-cache search`
- en: C. `apt-get -update`
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: C. `apt-get -update`
- en: D. `apt-get clean`
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: D. `apt-get clean`
- en: Which option is used to remove a package and its configuration using the `apt`
    command?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于使用`apt`命令删除软件包及其配置？
- en: A. `apt-get remove`
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: A. `apt-get remove`
- en: B. `apt-get purge`
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: B. `apt-get purge`
- en: C. `apt-get --remove`
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: C. `apt-get --remove`
- en: D. `apt-get --update`
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: D. `apt-get --update`
- en: Which option is used to update the package list using the `aptitude` command?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个选项用于使用`aptitude`命令更新软件包列表？
- en: A. `aptitude purge`
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: A. `aptitude purge`
- en: B. `aptitude clean`
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: B. `aptitude clean`
- en: C. `aptitude update`
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: C. `aptitude update`
- en: D. `aptitude --clean`
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: D. `aptitude --clean`
- en: Further reading
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: This first website gives you useful information about the Debian distributions: [https://wiki.debian.org](https://wiki.debian.org).
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个网站为您提供了关于Debian发行版的有用信息：[https://wiki.debian.org](https://wiki.debian.org)。
- en: This website gives you tips and best practices for the Debian distributions: [https://www.debian.org](https://www.debian.org).
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个网站为您提供了Debian发行版的技巧和最佳实践：[https://www.debian.org](https://www.debian.org)。
- en: This next website gives you a lot of useful tips and best practices from users
    in the Linux community, particularly for the Debian distributions such as Ubuntu:  [https://askubuntu.com](https://askubuntu.com).
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一个网站为您提供了Linux社区用户的许多有用的技巧和最佳实践，特别是针对Debian发行版，如Ubuntu：[https://askubuntu.com](https://askubuntu.com)。
- en: This last website gives you a lot of useful resources on various problems faced
    by other Linux users for various tasks: [https://unix.stackexchange.com](https://unix.stackexchange.com).
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个网站为您提供了许多有用的资源，涉及其他Linux用户在各种任务中遇到的各种问题：[https://unix.stackexchange.com](https://unix.stackexchange.com)。
