["```\n    yum update && curl -sSL https://get.docker.com/ | sh\n\n    ```", "```\n    systemctl enable docker && systemctl start docker\n\n    ```", "```\n    docker run hello-world\n\n    ```", "```\nHello from Docker\n\n```", "```\n    docker run --restart=always --name wordpressdb -e MYSQL_ROOT_PASSWORD=<PASSWORD> -e MYSQL_DATABASE=wordpress -d mysql:5.7\n\n    ```", "```\n    docker run --restart=always -e WORDPRESS_DB_PASSWORD=<password> -d --name wordpress --link wordpressdb:mysql -p 8080:80 wordpress\n\n    ```", "```\n    docker ps\n\n    ```", "```\n    docker inspect wordpress\n\n    ```", "```\n    docker logs -f wordpress\n\n    ```", "```\n    http://<IP ADDRESS OF DOCKER SERVER>:8080/\n\n    ```", "```\n    mkdir -p ~/johndoe/centos7-expressjs\n    cd $_; vi Dockerfile\n\n    ```", "```\n    FROM centos:centos7\n    RUN yum install -y epel-release;yum install -y npm;\n    RUN npm install express --save\n    COPY . ./src\n    EXPOSE 8080\n    CMD [\"node\", \"/src/index.js\"]\n\n    ```", "```\n    vi index.js\n\n    ```", "```\n    var express = require('express'), app = express();\n    app.get('/', function (req, res) {res.send('Hello CentOS 7 cookbook!\\n');});\n    app.listen(8080);\n\n    ```", "```\n    docker build -t johndoe/centos7-expressjs .\n\n    ```", "```\n    docker run -p 8081:8080 -d johndoe/centos7-expressjs\n\n    ```", "```\n    curl -i localhost:8081\n\n    ```", "```\n    Hello CentOS 7 cookbook!\n\n    ```", "```\n    docker login\n\n    ```", "```\n    docker push johndoe/centos7-expressjs\n\n    ```", "```\n    docker search expressjs\n\n    ```", "```\n    echo \"export DCKREG=dockerserver.home\" >> ~/.bash_profile\n    source ~/.bash_profile\n\n    ```", "```\n    echo \"192.168.1.100 $DCKREG\" >>  /etc/hosts\n\n    ```", "```\n    cd; mkdir -p ~/certs; openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt\n\n    ```", "```\n    mkdir -p /etc/docker/certs.d/$DCKREG\\:5000\n    cp  ~/certs/domain.crt /etc/docker/certs.d/$DCKREG\\:5000/ca.crt\n    cp ~/certs/domain.crt /etc/pki/ca-trust/source/anchors/docker-registry.crt\n    update-ca-trust\n\n    ```", "```\n    cp ~/certs/domain.crt /var/www/html/docker-registry.crt\n\n    ```", "```\n    mkdir ~/auth; touch ~/auth/htpasswd docker run -d -p 5000:5000 --restart=always --name registry -v /\n    root/certs:/certs -v /root/auth:/auth -v /reg:/var/lib/registry -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e\n     REGISTRY_HTTP_TLS_KEY=/certs/domain.key -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -e REGISTRY_AUTH=htpasswd registry:2\n\n    ```", "```\n    docker logs registry\n\n    ```", "```\n    cd; docker run -it --entrypoint htpasswd -v $PWD/auth:/auth -w /auth registry:2 -Bbc /auth/htpasswd johndoe mysecretpassword\n\n    ```", "```\n    docker restart registry\n\n    ```", "```\n    sed 's/80/5000/g' /usr/lib/firewalld/services/http.xml | sed 's/WWW (HTTP)/Docker registry/g' | sed 's/<description>.*<\\/description>//g' > /etc/firewalld/services/docker-reg.xml\n    firewall-cmd --reload\n    firewall-cmd --permanent --add-service=docker-reg; firewall-cmd --reload\n\n    ```", "```\n    yum update && curl -sSL https://get.docker.com/ | sh\n\n    ```", "```\n    mkdir -p /etc/docker/certs.d/$DCKREG\\:5000\n    curl http://$DCKREG/docker-registry.crt -o /tmp/cert.crt\n    cp /tmp/cert.crt /etc/docker/certs.d/$DCKREG\\:5000/ca.crt\n    cp /tmp/cert.crt /etc/pki/ca-trust/source/anchors/docker-registry.crt\n    update-ca-trust\n\n    ```", "```\n    docker login\n\n    ```", "```\n    docker pull busybox\n\n    ```", "```\n    docker login $DCKREG:5000\n\n    ```", "```\n    docker tag busybox $DCKREG:5000/busybox\n\n    ```", "```\n    docker push $DCKREG:5000/busybox\n\n    ```", "```\n    curl https://johndoe:mysecretpassword@$DCKREG:5000/v2/_catalog\n\n    ```"]