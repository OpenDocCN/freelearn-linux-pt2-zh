- en: Chapter 9. Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Security is one of the most important aspects for system administrators, no
    doubt. In this chapter, we''re going to learn about the basic mechanisms and tools
    that can be used to secure our Linux Mint computer.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to learn the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Running an SSH server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing an anti-virus software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and configuring a firewall
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a security module for the kernel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building a security checklist
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running an SSH server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes you need to establish a remote connection from your computer to a
    server. Also, users need access to your server or servers. A remote connection
    allows you to execute commands directly on the server from your computer. **Telnet**
    is one of the most used protocols to establish connections between computers.
    However, Telnet is not a secure protocol, so other protocols are needed when we
    need secure connections. Here is where **Secure Shell** (**SSH**) enters in the
    game. Thanks to SSH, users can connect securely to servers from their computers.
    From the technical point of view, SSH creates a secure channel between a server
    and a client. Usually, a client and server are different machines, but it's possible
    to use the same machine to play both roles.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing and configuring an SSH server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We're going to install and configure the **openssh-server** software to use
    our computer as an SSH server. Regarding configuration, our server will deny access
    to the root user, and it will be accessible through the `5656` port.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Menu** button, and click again on the **Software Manager** button
    inside the **System** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `openssh server` in the text input field of the **Software Manager** application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **openssh-server** and then click on the **Install** button.![Time for
    action – installing and configuring an SSH server](img/9601_09_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you have the **openssh-server** installed on you computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch MATE Terminal by clicking on the **Terminal** button accessible form
    the main menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We''re going to edit a `/etc/ssh/sshd_config` file using the `vi` editor as
    the root user, so you should type the following command on the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Type `i` to enter in edit mode inside `vi`. Look for a line that contains **PermitRootLogin**
    and replace it with the following line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let''s continue with the same file and look for another line that contains
    **Port** and replace that line with the following one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Save the `/etc/ssh/sshd_config` file; you can click the *Escape* key and then
    type `:wq`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now it''s time for restarting the SSH server, then your server will be installed,
    configured, and ready to use. You can test this by executing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can test your SSH server by trying to connect to it and typing on the terminal
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now you can see a message asking for your authorization. Type `yes` and your
    password. You're now connected to your our server through the SSH protocol.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Thanks to the openssh-server software, we can create and configure an SSH server,
    which allows users to connect to a remote server through their computers. Linux
    Mint doesn't install the mentioned software by default, so you need to install
    it using **Software Manager** or the **Package Manager** application.
  prefs: []
  type: TYPE_NORMAL
- en: Once openssh-server is installed on your computer, users can connect to it directly
    using an SSH client. This kind of client is installed by default on major GNU/Linux
    distributions and Mac OS X computers.
  prefs: []
  type: TYPE_NORMAL
- en: Despite the openssh-server including a default configuration that allows us
    to connect to the server, it's recommended to change the configuration to suit
    our requirements. This is a task for system administrators. In our example, we
    don't allow connections through the root user, and we change the default `22`
    port to `5656`. These changes provide minimum security for SSH connections against
    potential attackers trying to use the default port to connect to servers using
    SSH protocol. Thanks to our change in configuration, we're establishing a first-level
    wall. On the other hand, if we allow the root user to connect to our SSH server,
    somebody can crack the connection and get root access to our server, which is
    not good.
  prefs: []
  type: TYPE_NORMAL
- en: In order to change the configuration file for the SSH server, we used the `vi`
    editor, which is installed in Linux Mint by default. This is a **modal** editor,
    and by typing `:wq`, we're saving and exiting. On the other hand, when you type
    `i`, `vi` enters the **insert** mode. Obviously, you can use other editors such
    as `Pluma` for editing the configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we restarted the SSH daemon using the `restart` command and passing
    `ssh` as an argument. We'll talk more about daemon services in the next chapter.
    At the moment, we only need to know that the `restart` command is used for restarting
    services.
  prefs: []
  type: TYPE_NORMAL
- en: Installing an anti-virus software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Everybody knows that Windows operating systems need an anti-virus software because
    it's very common that viruses infect the family of Microsoft operating systems.
    Though it's more difficult to find viruses affecting a GNU/Linux distribution,
    a good practice is to install an anti-virus on our server. One of the most popular
    anti-viruses for Linux is **Clam-AV** ([www.clamav.net](http://www.clamav.net)),
    so we're going to learn how to install it on our server.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing Clam-AV anti-virus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We'll install Clam-AV anti-virus on our computer.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Menu** button and click again on the **Software Manager** button
    inside the **System** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `clamav` in the input box of the main window of **Software Manager**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the first element of the results list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you can click on the **Install** button, and type your password when it
    is required.![Time for action – installing Clam-AV anti-virus](img/9601_09_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once installation is finished, you can use the `clamscan` application from the
    command line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to test our anti-virus, we''re going to open the MATE Terminal and
    scan our `home` directory. You only need to type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The output of `clamscan` should be similar to the following screenshot:![Time
    for action – installing Clam-AV anti-virus](img/9601_09_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We've used the **Software Manager** application for installing an application.
    In this case, we've installed Clam-AV anti-virus, which contains a main executable
    called `clamscan`. This command scans a directory and searches for viruses in
    our system. When the scan is finished, we get a simple report with information
    about scanned files and directories and which of them are infected.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a firewall
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **firewall** is one of the most important components in computer security.
    From the technical point of view, a firewall is a barrier designed to prevent
    unauthorized access to services and resources in a computer. Software and hardware
    components can be used to build a firewall. We're going to focus only on software.
  prefs: []
  type: TYPE_NORMAL
- en: The configuration of a firewall can be pretty easy or very complicated; depends
    on the security level that we want to apply. Obviously, it's different to configure
    a web server and a computer workstation. In order to use and configure a firewall
    in Linux, we can use a program called `iptables`, which is a packet filtering
    application based on rules defined by system administrators. Linux kernel uses
    different kernel modules to apply rules and creates a firewall for a computer.
  prefs: []
  type: TYPE_NORMAL
- en: Despite `iptables` being a very good application, it's not easy for beginners.
    This application doesn't use a graphical interface and it's *required* to know
    how to apply rules from the command line. However, Linux Mint includes a GUI application
    that provides a frontend to **Uncomplicated Firewall** (`ufw`), a software designed
    to build firewalls easily. We'll learn how to use this useful tool to configure
    a simple firewall.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – how to configure a simple firewall
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a simple example of building a firewall in Linux Mint, we're going to configure
    our firewall to deny access to a specific IP (`192.168.1.66`) to port `22`. Remember
    that we configured this port previously to run an SSH server.
  prefs: []
  type: TYPE_NORMAL
- en: Go to the main menu and click on the **Firewall Configuration** button belonging
    to the **Administration** category.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then a new window will be displayed; click on the **Unlock** button and type
    your password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Activate the firewall by selecting the **ON** option in **Status**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Access the **Edit** menu and click on the **Add Rule...** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Advanced** tab and select **Deny** for the first drop-down option.
    Then type `192.168.1.66` in the **From** input box and `22` for the port input
    box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **To** input box, type your IP and type `22` again for port. Click on
    the **Add** button when you're ready:![Time for action – how to configure a simple
    firewall](img/9601_09_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click the **Close** button and you'll see how your new rule has been added
    to the rules list:![Time for action – how to configure a simple firewall](img/9601_09_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your firewall is configured and is now up and running.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linux Mint allows us to configure and run a firewall through an application
    called `Gufw`. This tool is a simple and intuitive frontend to `ufw`, another
    tool for configuring a firewall, which is easier than `iptables`. `Gufw` has three
    main controls that allow us to enable or disable a firewall, and helps control
    incoming and outgoing traffic. A simple list shows us the rules that are enabled,
    and the two buttons below this list allows us to add and remove rules.
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that the default behavior in `ufw` is to block all incoming traffic
    and allow outgoing traffic. Usually, system administrators prefer to block everything
    and then configure the applications, ports, and protocols that are allowed for
    connections. This technique is known as **white list** .
  prefs: []
  type: TYPE_NORMAL
- en: 'Basically, you can choose three actions that will be applied to incoming and
    outgoing traffic for your machine: **Allow**, **Deny**, and **Reject**. The difference
    between **Deny** and **Reject** actions is that the first one implies that each
    packet will be discarded. However, **Reject** means that server will send a response
    to the client informing about the computer using a firewall that denies access.'
  prefs: []
  type: TYPE_NORMAL
- en: We've used advanced options to select IP's and ports, but also it's possible
    to use the **Preconfigured** and **Simple** tabs to allow or deny access only
    to applications and to protocols respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero – disabling firewall on startup using the command line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You''ve learned how to use `Gufw` to configure your firewall. In addition to
    this tool, you can use the `ufw` application directly from command line. For example,
    you can disable your firewall on startup. In order to do that, launch the MATE
    Terminal and type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'After executing the preceding command, you''ll receive a message, such as the
    following one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Using a security module for the kernel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux kernel offers system administrators mechanisms to support control access
    policies to actions that applications can executed inside an operating system.
    Currently, **Security-Enhanced Linux** (**SELinux**) and **Application Armor**
    (**AppArmor**) are the most popular tools for that purpose. SELinux was developed
    by United States **National Security Agency** (**NSA**), and it provides a set
    of Linux kernel modifications that can be applied to different GNU/Linux operating
    systems. The design and architecture of SELinux allow system administrators to
    create different policies that will be applied to users and processes running
    on the operating system. Related to SELinux, we find AppArmor, a security module
    designed for the Linux kernel. Thanks to this module, it's possible to establish
    a set of policies through different profiles to restrict what each program can
    do. If a program contains a security vulnerability, AppArmor can detect it leaving
    other software unaffected. In other words, AppArmor restricts capabilities of
    a program to apply a predefined security profile.
  prefs: []
  type: TYPE_NORMAL
- en: AppArmor and SELinux use **Linux Security Modules** (**LSM**), a framework for
    supporting different computer security models for the Linux kernel. Basically,
    LSM provides tools to implement mandatory access control based on different policies.
  prefs: []
  type: TYPE_NORMAL
- en: Linux Mint includes SELinux and AppArmor, but they aren't installed by default.
    AppArmor is easy to configure, deploy, and learn, so we'll find out how to install
    it on our server.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing AppArmor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The learning curve for AppArmor is hard, so we're only going to learn how to
    install it.
  prefs: []
  type: TYPE_NORMAL
- en: Launch **Software Manager**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for **apparmor**, select it from the list, and click on the **Install**
    button.![Time for action – installing AppArmor](img/9601_09_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once AppArmor is installed, you can check its status when executing the following
    command on MATE Terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We'll see something like the following screenshot:![Time for action – installing
    AppArmor](img/9601_09_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We simply installed AppArmor from the **Software Manager** application. The
    package included in Linux Mint provides different executable commands, such as
    `apparmor_status` and `apparmor_parser`. The first one offers us information about
    the defined and enabled profiles, and `apparmor_parser` is used for loading profiles
    into the Linux kernel.
  prefs: []
  type: TYPE_NORMAL
- en: If you're interested in learning more about how to configure AppArmor, you can
    take a look at the official documentation at [http://wiki.apparmor.net/index.php/Documentation](http://wiki.apparmor.net/index.php/Documentation).
  prefs: []
  type: TYPE_NORMAL
- en: Managing your password safely
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'System administrators work with passwords each day. Connecting to servers,
    accessing resources, and managing users are actions that require the use of passwords.
    Storing passwords in a safe place is very important and it''s critical for the
    security of systems. If we can use a tool to store, read, and update passwords,
    the daily job will be easier. One of the most popular software to carry out these
    tasks concerning passwords is **KeePass** ([http://keepass.info/](http://keepass.info/)),
    a tool designed to manage passwords in a secure way. Basically, KeePass uses only
    a master password that the user should remember. This master password locks a
    database where other passwords are stored. From the technical point of view, KeePass
    uses two of the most secure encryption algorithms: **AES** and **Twofish** .'
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing and using KeePass
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We'll learn how to install and use KeePass for storing some passwords. After
    installing KeePass, we'll create a new password for a user called `lucas`, who
    has access to a development server.
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **Software Manager** application, look for **keepass2**, select the
    first item of searched items, and click on the **Install** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once **KeePass2** is installed, you can launch it by accessing the main menu
    and by clicking on the **KeePass2** menu option belonging to the **Accessories**
    group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **File** option in the toolbar of the main window of **KeePass2**
    and click on the **New...** menu option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then a new window asking for the master password is displayed. We'll type the
    same password in the **Master password** and **Repeat password** input boxes.![Time
    for action – installing and using KeePass](img/9601_09_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **OK** when you're ready and a new dialog window will be displayed.
    Now, we need to choose a name for a database where passwords will be stored. Choose
    a name and a database description, then click on the **OK** button:![Time for
    action – installing and using KeePass](img/9601_09_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your new database has been created and **KeePass** displays a tree widget where
    you can find different categories below the name of your database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, go to the **Edit** menu and click on the **Add entry...** menu option.
    You can see a new dialog window. Enter a title and a username, and the password
    will be generated by default.![Time for action – installing and using KeePass](img/9601_09_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **OK** button, and a new entry will be created for your password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: KeePass is a complete tool to manage passwords. You can use and create many
    categories to organize your passwords. By default, passwords are generated when
    you create a new entry. It's possible to change configuration and decide how passwords
    are generated by default. Surely you must have realized that passwords are hidden,
    and you only can see stars. In order to change that, click on the button close
    to the **Password** input box.
  prefs: []
  type: TYPE_NORMAL
- en: Each time you access KeePass, you need to type your master password. However,
    when you click on an entry, you'll see information, including the password that
    you entered before.
  prefs: []
  type: TYPE_NORMAL
- en: Other useful functionality provided by KeePass is the ability to generate random
    passwords, although you don't want to use this tool to store it.
  prefs: []
  type: TYPE_NORMAL
- en: Building a security checklist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When the system administrator is configuring a safe server, it''s a very good
    practice to use a simple checklist with some issues that should be checked. We''re
    going to build one of these checklists based on concepts that we''ve learned in
    this chapter. Specifically, our checklist will contain the following issues:'
  prefs: []
  type: TYPE_NORMAL
- en: Install and enable only services that users need.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build and run a firewall based on a specific policy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable root access through SSH and change the default port for this connection
    service.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install and configure an anti-virus, Clam-AV is a good choice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep your system up-to-date. Always install security updates for your operating
    system and applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use KeePass or another password manager to store, read, and write your password
    securely.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose secure passwords that include different types of characters.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt your sensitive data. **GNU Privacy Guard** (**GPG**) can help you to
    do that. Also, Linux Mint allows you to encrypt your `home` folder from the installation
    process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your computer needs extra security, it's a good idea to install and configure
    a network protocol analyzer such as **Wireshark**. In addition, you can install
    a network intrusion detection tool such as **Snort**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we talked about security, one of the most important issues
    for system administrators. We discovered some tools such as KeePass, Clam-AV,
    AppArmor, and `Gufw`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifically, we covered the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Running an SSH server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Clam-AV anti-virus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and configuring a simple firewall using Gufw
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering AppArmor and SELinux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and using KeePass for managing passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining a security checklist
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Despite having learned some basic tools to secure our computer, we can use other
    tools for the same purpose. For example, it's a good idea to use a tool to detect
    network intrusions. Inside this kind of software, Snort ([http://www.snort.org](http://www.snort.org))
    is one of the most popular. On the other hand, tools such as Wireshark ([http://www.wireshark.org](http://www.wireshark.org))
    can help you to analyze traffic in your network, which is very useful to detect
    potential security risks. After learning basic concepts and tools about security,
    you're ready to learn how to monitor your system, which will be explained in the
    next chapter.
  prefs: []
  type: TYPE_NORMAL
